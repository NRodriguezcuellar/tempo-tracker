Title: Tempo API

URL Source: http://apidocs.tempo.io/

Markdown Content:
Base Paths for API Access
Authentication
API conventions
Rate limiting
Errors
ACCOUNTS & CUSTOMERS
Accounts
Account - Categories
Account - Category-Types
Customers
APPROVALS
Plan Approvals
Project Time Approval
Timesheet Approvals
AUDIT
Audit Events
CONFIGURATIONS
Global Configurations
Holiday Schemes
Periods
User Schedule
Work Attributes
Workload Schemes
PROJECTS
Budget
Budget Milestones
Cost
Expense
Financials
Fixed Revenue
Portfolio
Project
Project Attributes
Project Shares
Report
Scope
Team Member
Timeframe
RATES
Billing Rates Table
Global Rates
RESOURCE PLANNING
Flex Plans
Generic Resources
Generic Resource Team Members
Plans
TEAMS
Permission Roles
Program
Roles
Skills
Skill Assignments
Team
Team Links
Team Memberships
WEBHOOKS
Overview
Using Tempo Webhooks
Subscription verification
Supported events
Validation and security
Retry policy
Subscription
WORKLOGS
Worklogs
API docs by Redocly
REST API documentation (4.0)

Download OpenAPI specification:Download

Terms of Service
This documentation is for version 4 of the Tempo REST API, which is the latest version, except for Audit endpoints which are at version 1.

We encourage you to join our developer community on Slack at www.tempo.io/developers, where you can get support from our internal experts and share best practices with other developers building with Tempo.

If you have feedback or requests, you can also reach us through our Customer Support Portal. You can find general product information in the Tempo Help Center.

Contact Tempo Customer Support.
Base Paths for API Access

We recommend using a geographically direct base path, when possible, to ensure you have the quickest and most efficient access to our services based on where your Tempo data resides.

https://api.eu.tempo.io : Use this for clients based in Europe.
https://api.us.tempo.io : Use this for clients based in the Americas.
https://api.tempo.io : Use this if your clients are based in other locations, if you are unsure where your client is installed, or if you prefer a universal path.

If you use a base path for a different cluster than the one your Tempo data resides in, you will receive an authorization error.

Authentication
Using the REST API as an individual user

You can use the REST API to interact with the data your permissions give you access to. To do so, you will need to generate a Tempo OAuth 2.0 token.

Go to Tempo>Settings, scroll down to Data Access and select API integration.

Once you have a token, you need to use it inside the Authorization HTTP header. Ex:

curl -v -H "Authorization: Bearer $token" "https://api.tempo.io/4/worklogs?..."



Using the REST API as an application developer

If you are building apps with Tempo, and have the required Tempo administrator permissions, you can quickly obtain the OAuth 2.0 credentials you need to retrieve an access token. Access tokens grant temporary, secure access to Tempo, based on your current permissions.

Obtain your credentials

Go to Tempo>Settings, scroll down to Data Access and select OAuth 2.0 authentication.

Enter a Redirect URI and specify the Client type and Authorization grant type.

Once you click Add, your Client ID and Client secret are generated and you can retrieve your access token.



How to retrieve an access token for a user
Authorization grant type used is authorization_code
Step 1

Obtain an authorization code against your Jira Cloud instance :

GET: https://{jira-cloud-instance-name}.atlassian.net/plugins/servlet/ac/io.tempo.jira/oauth-authorize/?client_id=$CLIENT_ID&redirect_uri=$REDIRECT_URI

Where $CLIENT_ID and $REDIRECT_URI match the one you generated in Tempo > Settings > OAuth 2.0 Applications

You will be asked to authorize or deny access to your Tempo data. Granting access redirects you to the configured redirect URI with a new query string parameter named code (this is the authorization code). Note that this authorization code expires quickly.

Step 2

Obtain an access token from Tempo by providing the authorization code to:

POST: https://api.tempo.io/oauth/token/

sending the following parameters in the body using the "application/x-www-form-urlencoded" format:

grant_type = "authorization_code"
client_id = $CLIENT_ID
client_secret = $CLIENT_SECRET
redirect_uri = $REDIRECT_URI
code = $CODE


The response includes the access token itself, related information, and a refresh token.

{
  "access_token":"$ACCESS_TOKEN",
  "expires_in":5184000,
  "token_type":"Bearer",
  "scope":"read write",
  "refresh_token":"$REFRESH_TOKEN"
}

Step 3

Provide this access token to any API requests using the Authorization header :

curl -H "Authorization: Bearer $ACCESS_TOKEN" "https://api.tempo.io/4/worklogs?from=2022-01-28&to=2022-02-03"

The access token will expire after the number of seconds specified in the expires_in field and will no longer be usable.

How to retrieve a new access token from the refresh token

The access token will eventually expire. You need to renew it using the previously received refresh token:

POST: https://api.tempo.io/oauth/token/

sending the following parameters in the body using the "application/x-www-form-urlencoded" format:

grant_type = "refresh_token"
client_id = $CLIENT_ID
client_secret = $CLIENT_SECRET
redirect_uri = $REDIRECT_URI
refresh_token = $REFRESH_TOKEN


The response will contain a new access token and a new refresh token. You'll need to utilize these new tokens for future calls, as the previous ones will no longer be valid.

How to revoke a token

You can revoke an existing access token at any time:

POST: https://api.tempo.io/oauth/revoke_token/

sending the following parameters in the body using the "application/x-www-form-urlencoded" format:

token_type_hint = "access_token"
client_id = $CLIENT_ID
client_secret = $CLIENT_SECRET
token = $ACCESS_TOKEN


You can also revoke an existing refresh token:

POST: https://api.tempo.io/oauth/revoke_token/

sending the following parameters in the body using the "application/x-www-form-urlencoded" format:

{
  token_type_hint = "refresh_token"
  client_id = $CLIENT_ID
  client_secret = $CLIENT_SECRET
  token = $REFRESH_TOKEN
}

API conventions
Identifying users

The Tempo REST API uses the Atlassian accountId to identify users. The accountId is an opaque identifier that uniquely identifies the user.

The accountId of the current user can found using the Jira Myself API.

Information about a user, given the accountId, can be retrieved using the Jira User API.

Dates

The API uses strings to represent dates. Dates are formatted as ISO 8601 calendar dates (YYYY-MM-DD). For example, March 29th, 2019 is formatted as 2019-03-29.

Delete requests

On success, delete requests return a response with status code 204 (No content). No payload body is included in the response.

Arrays

A few endpoints accept query parameters of type array. That is achieved by repeating the parameter multiple times, e.g. to get worklogs from three projects:

.../worklogs?from=2020-01-01&to=2020-12-31&project=10100&project=10200&project=10300

Rate limiting

Tempo has rate limiting in place to protect services in case of excessive requests. The exact number of calls depends on the load of the system at any given time. In the case clients are exceeding rate limits, the APIs will respond with status code 429. Please refer to this article about best practices using our API for more information.

Errors

The API uses standard HTTP status codes to indicate the success or failure of the API call.

Here are a list of different types of error responses

Status code	Description	Content type
400	Bad Request	application/json
401	Unauthorized	text/html
403	Forbidden	text/html
404	Not Found	application/json



The body of the JSON response will be in the following format:

{
  "errors": {
    "message": "Error details"
  }
}


An example of 400 error

  {
    "errors": {
      "message": "'date' must be valid on the format: 'yyyy-MM-dd'"
    }
  }


An example of 404 error

  {
    "errors": {
      "message": "Account 'xyz' not found"
    }
  }

Accounts

Accounts operations

Retrieve Accounts

Retrieves a list of OPEN and CLOSED Accounts

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

Responses
200 

SUCCESS

GET
/4/accounts
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Create new Account

Creates a new Account using the provided input and returns the newly created Account

REQUEST BODY SCHEMA: application/json
categoryKey	
string

A set of characters that uniquely identify a category


contactAccountId	
string

'accountId' of the contact, if the contact is a registered Jira user


customerKey	
string

A set of characters that uniquely identify a customer


externalContactName	
string

Name of the contact, if the contact is not a registered Jira user


global	
boolean

key
required
	
string^[A-Za-z0-9_.-]*$

A set of character that uniquely identify the account


leadAccountId
required
	
string

'accountId' of the lead on the account


monthlyBudget	
integer <int32> >= 0

name
required
	
string

Name of the account


status
required
	
string
Enum: "CLOSED" "OPEN" "ARCHIVED"

The status of the account

Responses
200 

SUCCESS

400 

Account with this key already exists

404 

User is invalid

POST
/4/accounts
Request samples
Payload
Content type
application/json
Copy
{
"categoryKey": "Jdev1",
"contactAccountId": "111aaaa2222bbbb3333cccc",
"customerKey": "cloudbay1",
"externalContactName": "John Brown",
"global": false,
"key": "CLOUDBAY_DEVELOPMENT",
"leadAccountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"monthlyBudget": 600,
"name": "Cloudbay: Development",
"status": "OPEN"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"category": 
{
"id": 14,
"key": "300",
"name": "Development",
"self": "https://api.tempo.io/[...]",
"type": 
{}
},
"contact": 
{
"type": "USER",
"accountId": "1111aaaa2222bbbb3333cccc",
"self": "https://api.tempo.io/[...]"
},
"customer": 
{
"id": 234,
"key": "CLOUDBAY_DEVELOPMENT",
"name": "Cloudbay: Development",
"self": "https://api.tempo.io/[...]"
},
"global": false,
"id": 7,
"key": "CLOUDBAY_DEVELOPMENT",
"lead": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"links": 
{
"self": "https://api.tempo.io/[...]"
},
"monthlyBudget": 600,
"name": "Cloudbay: Development",
"self": "https://api.tempo.io/[...]",
"status": "OPEN"
}
Search Accounts

Retrieves a list of existing Accounts that matches the given search parameters

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

REQUEST BODY SCHEMA: application/json
global	
boolean

An optional boolean to indicate if the account should be global or not


ids	
Array of integers <int64> [ items <int64 > ]

A list of Account ids


keys	
Array of strings

A list of Account keys


statuses	
Array of strings
Items Enum: "OPEN" "CLOSED" "ARCHIVED"

A list of Account statuses

Responses
200 

SUCCESS

POST
/4/accounts/search
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"global": true,
"ids": 
[
1,
2
],
"keys": 
[
"CLOUDBAY_DEVELOPMENT"
],
"statuses": 
[
"OPEN",
"ARCHIVED"
]
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Retrieve Account

Retrieves an existing Account for the given id

PATH PARAMETERS
id
required
	
integer <int32>

An integer uniquely identifies the Account

Responses
200 

SUCCESS

GET
/4/accounts/{id}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"category": 
{
"id": 14,
"key": "300",
"name": "Development",
"self": "https://api.tempo.io/[...]",
"type": 
{}
},
"contact": 
{
"type": "USER",
"accountId": "1111aaaa2222bbbb3333cccc",
"self": "https://api.tempo.io/[...]"
},
"customer": 
{
"id": 234,
"key": "CLOUDBAY_DEVELOPMENT",
"name": "Cloudbay: Development",
"self": "https://api.tempo.io/[...]"
},
"global": false,
"id": 7,
"key": "CLOUDBAY_DEVELOPMENT",
"lead": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"links": 
{
"self": "https://api.tempo.io/[...]"
},
"monthlyBudget": 600,
"name": "Cloudbay: Development",
"self": "https://api.tempo.io/[...]",
"status": "OPEN"
}
Delete Account

Deletes an existing Account for the given key

PATH PARAMETERS
key
required
	
string

A set of character that uniquely identify the Account

Responses
204 

SUCCESS

DELETE
/4/accounts/{key}
Update Account

Updates an existing Account for the given key using the provided input and returns the updated Account

PATH PARAMETERS
key
required
	
string

A set of character that uniquely identify the account to be updated

REQUEST BODY SCHEMA: application/json
categoryKey	
string

A set of characters that uniquely identify a category


contactAccountId	
string

'accountId' of the contact, if the contact is a registered Jira user


customerKey	
string

A set of characters that uniquely identify a customer


externalContactName	
string

Name of the contact, if the contact is not a registered Jira user


global	
boolean

key
required
	
string^[A-Za-z0-9_.-]*$

A set of character that uniquely identify the account


leadAccountId
required
	
string

'accountId' of the lead on the account


monthlyBudget	
integer <int32> >= 0

name
required
	
string

Name of the account


status
required
	
string
Enum: "CLOSED" "OPEN" "ARCHIVED"

The status of the account

Responses
200 

SUCCESS

PUT
/4/accounts/{key}
Request samples
Payload
Content type
application/json
Copy
{
"categoryKey": "Jdev1",
"contactAccountId": "111aaaa2222bbbb3333cccc",
"customerKey": "cloudbay1",
"externalContactName": "John Brown",
"global": false,
"key": "CLOUDBAY_DEVELOPMENT",
"leadAccountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"monthlyBudget": 600,
"name": "Cloudbay: Development",
"status": "OPEN"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"category": 
{
"id": 14,
"key": "300",
"name": "Development",
"self": "https://api.tempo.io/[...]",
"type": 
{}
},
"contact": 
{
"type": "USER",
"accountId": "1111aaaa2222bbbb3333cccc",
"self": "https://api.tempo.io/[...]"
},
"customer": 
{
"id": 234,
"key": "CLOUDBAY_DEVELOPMENT",
"name": "Cloudbay: Development",
"self": "https://api.tempo.io/[...]"
},
"global": false,
"id": 7,
"key": "CLOUDBAY_DEVELOPMENT",
"lead": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"links": 
{
"self": "https://api.tempo.io/[...]"
},
"monthlyBudget": 600,
"name": "Cloudbay: Development",
"self": "https://api.tempo.io/[...]",
"status": "OPEN"
}
Retrieve Account links

Retrieves a list of all existing links associated to the provided Account

PATH PARAMETERS
key
required
	
string

A set of character that uniquely identify the Account

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

Responses
200 

SUCCESS

GET
/4/accounts/{key}/links
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Account - Categories

Account categories operations

Retrieve Category / Retrieve all Categories

Retrieves a Category for the given id, or retrieves a list of all Categories if id is not provided. If the Category with the given id is not found, an empty list is returned

QUERY PARAMETERS
id	
integer <int32>
Responses
200 

SUCCESS

GET
/4/account-categories
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Create Category

Creates a new Category using the provided input and returns the newly created Category

REQUEST BODY SCHEMA: application/json
key
required
	
string

A set of characters that uniquely identify the category


name
required
	
string

The name of the category


typeName	
string
Enum: "BILLABLE" "CAPITALIZED" "INTERNAL" "OPERATIONAL"

The type of the category

Responses
200 

SUCCESS

400 

Category cannot be created due to invalid request

POST
/4/account-categories
Request samples
Payload
Content type
application/json
Copy
{
"key": "CLOUDBAY_DEVELOPMENT",
"name": "Cloudbay: Development",
"typeName": "BILLABLE"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"id": 14,
"key": "300",
"name": "Development",
"self": "https://api.tempo.io/[...]",
"type": 
{
"name": "BILLABLE"
}
}
Delete Category

Deletes the Category for the given key

PATH PARAMETERS
key
required
	
string
Responses
204 

SUCCESS

400 

Category cannot be deleted due to invalid request

404 

Category not found

DELETE
/4/account-categories/{key}
Retrieve Category

Retrieves an existing Category for the given key

PATH PARAMETERS
key
required
	
string
Responses
200 

SUCCESS

400 

Category cannot be retrieved due to invalid request

404 

Category not found

GET
/4/account-categories/{key}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"id": 14,
"key": "300",
"name": "Development",
"self": "https://api.tempo.io/[...]",
"type": 
{
"name": "BILLABLE"
}
}
Update Category

Updates the Category for the given key using the provided input and returns the updated Category

PATH PARAMETERS
key
required
	
string

A set of characters that uniquely identify the category to be updated

REQUEST BODY SCHEMA: application/json
key
required
	
string

A set of characters that uniquely identify the category


name
required
	
string

The name of the category


typeName	
string
Enum: "BILLABLE" "CAPITALIZED" "INTERNAL" "OPERATIONAL"

The type of the category

Responses
200 

SUCCESS

400 

Category cannot be updated due to invalid request

404 

Category not found

PUT
/4/account-categories/{key}
Request samples
Payload
Content type
application/json
Copy
{
"key": "CLOUDBAY_DEVELOPMENT",
"name": "Cloudbay: Development",
"typeName": "BILLABLE"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"id": 14,
"key": "300",
"name": "Development",
"self": "https://api.tempo.io/[...]",
"type": 
{
"name": "BILLABLE"
}
}
Account - Category-Types

Account category type operations

Retrieve Category Types

Retrieves a list of all Category Types

Responses
200 

SUCCESS

GET
/4/account-category-types
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Customers

Customer related operations

Retrieve all Customers

Retrieves a list of all Customers

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

Responses
200 

SUCCESS

GET
/4/customers
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Create Customer

Creates a new Customer using the provided input and returns the newly created Customer

REQUEST BODY SCHEMA: application/json
key
required
	
string

The key of the Customer


name
required
	
string

The name of the Customer

Responses
200 

SUCCESS

400 

Customer cannot be created due to invalid request

POST
/4/customers
Request samples
Payload
Content type
application/json
Copy
{
"key": "CLOUDBAY_DEVELOPMENT",
"name": "Cloudbay: Development"
}
Response samples
200
Content type
application/json
Copy
{
"id": 234,
"key": "CLOUDBAY_DEVELOPMENT",
"name": "Cloudbay: Development",
"self": "https://api.tempo.io/[...]"
}
Search Customers

Retrieves a list of existing Customers that matches the given search parameters

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

REQUEST BODY SCHEMA: application/json
ids	
Array of integers <int32> [ items <int32 > ]

A list of Customer ids


keys	
Array of strings

A list of Customer keys

Responses
200 

SUCCESS

POST
/4/customers/search
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"ids": 
[
1,
2
],
"keys": 
[
"CLOUDBAY_DEVELOPMENT"
]
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Retrieve Customer

Retrieves an existing Customer for the given id

PATH PARAMETERS
id
required
	
integer <int32>
Responses
200 

SUCCESS

404 

Customer not found

GET
/4/customers/{id}
Response samples
200
Content type
application/json
Copy
{
"id": 234,
"key": "CLOUDBAY_DEVELOPMENT",
"name": "Cloudbay: Development",
"self": "https://api.tempo.io/[...]"
}
Retrieve Accounts associated with the Customer

Retrieves a list of Accounts associated with the given Customer

PATH PARAMETERS
id
required
	
integer <int32>

An integer uniquely identifying the customer

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

Responses
200 

SUCCESS

400 

Accounts associated with customer cannot be retrieved due to invalid request

404 

Customer not found

GET
/4/customers/{id}/accounts
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Delete Customer

Deletes the Customer with the given key

PATH PARAMETERS
key
required
	
string
Responses
204 

SUCCESS

400 

Customer cannot be deleted due to invalid request

404 

Customer not found

DELETE
/4/customers/{key}
Update Customer

Updates the Customer with the given key using the provided input and returns the updated Customer

PATH PARAMETERS
key
required
	
string
REQUEST BODY SCHEMA: application/json
key
required
	
string

The key of the Customer


name
required
	
string

The name of the Customer

Responses
200 

SUCCESS

400 

Customer cannot be updated due to invalid request

404 

Customer not found

PUT
/4/customers/{key}
Request samples
Payload
Content type
application/json
Copy
{
"key": "CLOUDBAY_DEVELOPMENT",
"name": "Cloudbay: Development"
}
Response samples
200
Content type
application/json
Copy
{
"id": 234,
"key": "CLOUDBAY_DEVELOPMENT",
"name": "Cloudbay: Development",
"self": "https://api.tempo.io/[...]"
}
Plan Approvals

Operations related to plan approvals

Get plans for review

Get plans for review based on the search criteria.

REQUEST BODY SCHEMA: application/json
includePastPlans	
boolean

If true, we will include past plans in the search.


statuses	
Array of strings

The list of approval statuses to filter by.

Responses
200 

SUCCESS

POST
/4/plan-approvals/plans-for-review
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"includePastPlans": true,
"statuses": 
[
"APPROVED",
"REJECTED"
]
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Update plan approval

Update plan approval for the given Plan (Resource Allocation).

PATH PARAMETERS
allocationId
required
	
integer <int32>
REQUEST BODY SCHEMA: application/json
reviewerId	
string

A unique identifier of the user in Jira who will review this PlanApproval.


status	
string
Enum: "APPROVED" "REJECTED" "REQUESTED"

The status of the PlanApproval.

Responses
200 

Plan approval updated successfully.

PUT
/4/plan-approvals/{allocationId}
Request samples
Payload
Content type
application/json
Copy
{
"reviewerId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"status": "APPROVED"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"actor": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"requester": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"reviewer": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"status": "APPROVED"
}
Get Possible Plan Reviewers

Retrieves a list of account IDs for users who can approve plans for a given user within a date range.

QUERY PARAMETERS
accountId
required
	
string

The account ID of the user to find reviewers for


from	
string

Start date in yyyy-MM-dd format


to	
string

End date in yyyy-MM-dd format

Responses
200 

SUCCESS

GET
/4/plan-permissions/plan-reviewers
Response samples
200
Content type
application/json
Copy
"string"
Project Time Approval

Project time approval related operations

Get latest project time approvals
        Get the current approval status of each project the given user has logged time against in the given period.
        Note: period provided should align with the period set in Tempo settings > Period Configuration.
        

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
teamMemberId
required
	
string

User ID of the team member (Jira account ID and Tempo user ID are accepted)

QUERY PARAMETERS
from
required
	
string

The start date in format yyyy-mm-dd


to
required
	
string

The end date in format yyyy-mm-dd

Responses
200 

SUCCESS

GET
/4/projects/time-approvals/team-member/{teamMemberId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
[
{
"billableSeconds": 3600,
"laborCosts": 
{},
"period": 
{},
"projectId": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"reviewer": 
{},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/time-approvals?from=2022-06-01&to-2022-06-30&teamMemberId=40dfdcd1-d387-4147-ac79-3f21e9908b43",
"status": 
{},
"timeSpentSeconds": 3600,
"totalCost": 
{},
"totalRevenue": 
{},
"user": 
{}
}
]
Remove project time approvers

Removes project time approvers of a project in bulk

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
QUERY PARAMETERS
approverIds	
Array of strings unique

A set of user IDs (Jira account IDs and Tempo user IDs are accepted)

Responses
204 

Project time approvers have been successfully removed

DELETE
/4/projects/{projectId}/project-time-approvers
Get Project Time Approvers

Lists all project time approvers for a project

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
Responses
200 

SUCCESS

GET
/4/projects/{projectId}/project-time-approvers
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
[
{
"projectTimeApprovers": 
[]
}
]
Add Project Time Approvers

Add project time approvers in bulk.

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
REQUEST BODY SCHEMA: application/json
approverUserIds
required
	
Array of strings unique

A set of user IDs (Jira account IDs and Tempo user IDs are accepted) to be added as project time approvers

Responses
200 

SUCCESS

POST
/4/projects/{projectId}/project-time-approvers
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"approverUserIds": 
[
"611d7562a3e00f00687fd506",
"734k9556b4e99f45690pg787"
]
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
[
{
"projectTimeApprovers": 
[]
}
]
Set Default Project Time Approver

Sets the default project time approver for a project

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

approverId
required
	
string
Responses
200 

SUCCESS

PUT
/4/projects/{projectId}/project-time-approvers/default/{approverId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"approver": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"invalid": "USER_IS_INACTIVE",
"isDefault": true
}
Get project time approvals
        Get a list of Project Time Approvals for a given project and period.
        Note: period provided should align with the period set in Tempo settings > Period Configuration.
        

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project

QUERY PARAMETERS
from
required
	
string

The start date in format yyyy-mm-dd


to
required
	
string

The end date in format yyyy-mm-dd


teamMemberId	
string

Filter the approvals by the teamMemberId when provided


status	
string

Filter the approvals by status (OPEN, IN_REVIEW, APPROVED, REJECTED) when provided. Note: WAITING FOR APPROVAL status in UI is represented as IN_REVIEW in public API.


offset	
integer <int32>
Default: 0

limit	
integer <int32>
Default: 50
Responses
200 

SUCCESS

GET
/4/projects/{projectId}/time-approvals
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Approve Project Time

Approve hours for a certain period and team member(s)

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
REQUEST BODY SCHEMA: application/json
comment	
string

A comment to add when approving/rejecting/reopening a project time


period
required
	
object (Period)

The timesheet period of this project time approval


teamMemberIds
required
	
Array of strings

A list of team member IDs (Jira account IDs and Tempo user IDs are accepted)

Responses
200 

SUCCESS

POST
/4/projects/{projectId}/time-approvals/approve
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"teamMemberIds": 
[
"40dfdcd1-d387-4147-ac79-3f21e9908b43",
"598cda20-0076-4b89-a9f4-37b3ce1e688c"
],
"period": 
{
"from": "yyyy-MM-dd",
"to": "yyyy-MM-dd"
},
"comment": "A comment"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
[
{
"billableSeconds": 3600,
"laborCosts": 
{},
"period": 
{},
"projectId": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"reviewer": 
{},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/time-approvals?from=2022-06-01&to-2022-06-30&teamMemberId=40dfdcd1-d387-4147-ac79-3f21e9908b43",
"status": 
{},
"timeSpentSeconds": 3600,
"totalCost": 
{},
"totalRevenue": 
{},
"user": 
{}
}
]
Get labor costs associated to an approval
        Get a list of Labor Costs for a given project, period and team member.
        NOTE: Cost rate and billing rate are not returned for a time-based project.
    

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project

QUERY PARAMETERS
from
required
	
string

The start date in format yyyy-mm-dd


to
required
	
string

The end date in format yyyy-mm-dd


teamMemberId
required
	
string

Filter the approvals by the teamMemberId

Responses
200 

SUCCESS

GET
/4/projects/{projectId}/time-approvals/labor-costs
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Reject Project Time

Reject hours for a certain period and team member(s)

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
REQUEST BODY SCHEMA: application/json
comment	
string

A comment to add when approving/rejecting/reopening a project time


period
required
	
object (Period)

The timesheet period of this project time approval


teamMemberIds
required
	
Array of strings

A list of team member IDs (Jira account IDs and Tempo user IDs are accepted)

Responses
200 

SUCCESS

POST
/4/projects/{projectId}/time-approvals/reject
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"teamMemberIds": 
[
"40dfdcd1-d387-4147-ac79-3f21e9908b43",
"598cda20-0076-4b89-a9f4-37b3ce1e688c"
],
"period": 
{
"from": "yyyy-MM-dd",
"to": "yyyy-MM-dd"
},
"comment": "A comment"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
[
{
"billableSeconds": 3600,
"laborCosts": 
{},
"period": 
{},
"projectId": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"reviewer": 
{},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/time-approvals?from=2022-06-01&to-2022-06-30&teamMemberId=40dfdcd1-d387-4147-ac79-3f21e9908b43",
"status": 
{},
"timeSpentSeconds": 3600,
"totalCost": 
{},
"totalRevenue": 
{},
"user": 
{}
}
]
Reopen Project Time

Reopen hours after they were approved for a certain period and team member(s)

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
REQUEST BODY SCHEMA: application/json
comment	
string

A comment to add when approving/rejecting/reopening a project time


period
required
	
object (Period)

The timesheet period of this project time approval


teamMemberIds
required
	
Array of strings

A list of team member IDs (Jira account IDs and Tempo user IDs are accepted)

Responses
200 

SUCCESS

POST
/4/projects/{projectId}/time-approvals/reopen
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"teamMemberIds": 
[
"40dfdcd1-d387-4147-ac79-3f21e9908b43",
"598cda20-0076-4b89-a9f4-37b3ce1e688c"
],
"period": 
{
"from": "yyyy-MM-dd",
"to": "yyyy-MM-dd"
},
"comment": "A comment"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
[
{
"billableSeconds": 3600,
"laborCosts": 
{},
"period": 
{},
"projectId": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"reviewer": 
{},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/time-approvals?from=2022-06-01&to-2022-06-30&teamMemberId=40dfdcd1-d387-4147-ac79-3f21e9908b43",
"status": 
{},
"timeSpentSeconds": 3600,
"totalCost": 
{},
"totalRevenue": 
{},
"user": 
{}
}
]
Timesheet Approvals

Timesheet Approvals operations

Retrieve Timesheet Approval for Team

Retrieves the current Timesheet Approval for a Team in the given period

PATH PARAMETERS
teamId
required
	
string
QUERY PARAMETERS
from
required
	
string

The Start Date in format yyyy-mm-dd


to	
string

The End Date in format yyyy-mm-dd

Responses
200 

SUCCESS

404 

Team cannot be found in the system

GET
/4/timesheet-approvals/team/{teamId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Retrieve current Timesheet approval

Retrieves the current Timesheet approval for a User in the given period

PATH PARAMETERS
accountId
required
	
string
QUERY PARAMETERS
from
required
	
string

The Start Date in format yyyy-mm-dd


to	
string

The End Date in format yyyy-mm-dd

Responses
200 

SUCCESS

400 

Non valid date '2022-05-011': format must be yyyy-MM-dd

404 

User is invalid

GET
/4/timesheet-approvals/user/{accountId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"actions": 
{
"approve": 
{},
"reject": 
{},
"reopen": 
{},
"submit": 
{}
},
"period": 
{
"from": "2019-08-24",
"to": "2019-08-24"
},
"requiredSeconds": 633600,
"reviewer": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"self": "https://api.tempo.io/[...]",
"status": 
{
"actor": 
{},
"comment": "Hey, do it now!",
"key": "OPEN",
"requiredSecondsAtSubmit": 633600,
"timeSpentSecondsAtSubmit": 633600,
"updatedAt": "2022-01-01T00:00:00.000Z"
},
"timeSpentSeconds": 633600,
"user": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"worklogs": 
{
"self": "https://api.tempo.io/[...]"
}
}
Approve Timesheet

Approves a Timesheet for the given User in the given period and returns the approved Timesheet

PATH PARAMETERS
accountId
required
	
string
QUERY PARAMETERS
from
required
	
string

The Start Date in format yyyy-mm-dd


to	
string

The End Date in format yyyy-mm-dd

REQUEST BODY SCHEMA: application/json
comment	
string

The comment about timesheet to approval


reviewerAccountId	
string

The Account id of the reviewer

Responses
200 

SUCCESS

400 

Non valid date '2022-05-011': format must be yyyy-MM-dd

404 

User is invalid

POST
/4/timesheet-approvals/user/{accountId}/approve
Request samples
Payload
Content type
application/json
Copy
{
"comment": "This is a generic comment about this timesheet.",
"reviewerAccountId": "123456:01234567-89ab-cdef-0123-456789abcdef"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"actions": 
{
"approve": 
{},
"reject": 
{},
"reopen": 
{},
"submit": 
{}
},
"period": 
{
"from": "2019-08-24",
"to": "2019-08-24"
},
"requiredSeconds": 633600,
"reviewer": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"self": "https://api.tempo.io/[...]",
"status": 
{
"actor": 
{},
"comment": "Hey, do it now!",
"key": "OPEN",
"requiredSecondsAtSubmit": 633600,
"timeSpentSecondsAtSubmit": 633600,
"updatedAt": "2022-01-01T00:00:00.000Z"
},
"timeSpentSeconds": 633600,
"user": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"worklogs": 
{
"self": "https://api.tempo.io/[...]"
}
}
Reject Timesheet

Rejects a Timesheet for the given User in the given period and returns the rejected Timesheet

PATH PARAMETERS
accountId
required
	
string
QUERY PARAMETERS
from
required
	
string

The Start Date in format yyyy-mm-dd


to	
string

The End Date in format yyyy-mm-dd

REQUEST BODY SCHEMA: application/json
comment	
string

The comment about timesheet to approval


reviewerAccountId	
string

The Account id of the reviewer

Responses
200 

SUCCESS

400 

Non valid date '2022-05-011': format must be yyyy-MM-dd

404 

User is invalid

POST
/4/timesheet-approvals/user/{accountId}/reject
Request samples
Payload
Content type
application/json
Copy
{
"comment": "This is a generic comment about this timesheet.",
"reviewerAccountId": "123456:01234567-89ab-cdef-0123-456789abcdef"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"actions": 
{
"approve": 
{},
"reject": 
{},
"reopen": 
{},
"submit": 
{}
},
"period": 
{
"from": "2019-08-24",
"to": "2019-08-24"
},
"requiredSeconds": 633600,
"reviewer": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"self": "https://api.tempo.io/[...]",
"status": 
{
"actor": 
{},
"comment": "Hey, do it now!",
"key": "OPEN",
"requiredSecondsAtSubmit": 633600,
"timeSpentSecondsAtSubmit": 633600,
"updatedAt": "2022-01-01T00:00:00.000Z"
},
"timeSpentSeconds": 633600,
"user": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"worklogs": 
{
"self": "https://api.tempo.io/[...]"
}
}
Reopen Timesheet

Reopens a Timesheet for the given User in the given period and returns the reopened Timesheet

PATH PARAMETERS
accountId
required
	
string
QUERY PARAMETERS
from
required
	
string

The Start Date in format yyyy-mm-dd


to	
string

The End Date in format yyyy-mm-dd

REQUEST BODY SCHEMA: application/json
comment	
string

The comment about timesheet to approval


reviewerAccountId	
string

The Account id of the reviewer

Responses
200 

SUCCESS

400 

Non valid date '2022-05-011': format must be yyyy-MM-dd

404 

User is invalid

POST
/4/timesheet-approvals/user/{accountId}/reopen
Request samples
Payload
Content type
application/json
Copy
{
"comment": "This is a generic comment about this timesheet.",
"reviewerAccountId": "123456:01234567-89ab-cdef-0123-456789abcdef"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"actions": 
{
"approve": 
{},
"reject": 
{},
"reopen": 
{},
"submit": 
{}
},
"period": 
{
"from": "2019-08-24",
"to": "2019-08-24"
},
"requiredSeconds": 633600,
"reviewer": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"self": "https://api.tempo.io/[...]",
"status": 
{
"actor": 
{},
"comment": "Hey, do it now!",
"key": "OPEN",
"requiredSecondsAtSubmit": 633600,
"timeSpentSecondsAtSubmit": 633600,
"updatedAt": "2022-01-01T00:00:00.000Z"
},
"timeSpentSeconds": 633600,
"user": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"worklogs": 
{
"self": "https://api.tempo.io/[...]"
}
}
Retrieve Timesheet reviewers for User

Retrieves a list of the Timesheet reviewers for the given User

PATH PARAMETERS
accountId
required
	
string
Responses
200 

SUCCESS

404 

User is invalid

GET
/4/timesheet-approvals/user/{accountId}/reviewers
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Submit Timesheet

Submits a Timesheet for the given User in the given period and returns the submitted Timesheet

PATH PARAMETERS
accountId
required
	
string
QUERY PARAMETERS
from
required
	
string

The Start Date in format yyyy-mm-dd


to	
string

The End Date in format yyyy-mm-dd

REQUEST BODY SCHEMA: application/json
comment	
string

The comment about timesheet to approval


reviewerAccountId	
string

The Account id of the reviewer

Responses
200 

SUCCESS

400 

Non valid date '2022-05-011': format must be yyyy-MM-dd

404 

User is invalid

POST
/4/timesheet-approvals/user/{accountId}/submit
Request samples
Payload
Content type
application/json
Copy
{
"comment": "This is a generic comment about this timesheet.",
"reviewerAccountId": "123456:01234567-89ab-cdef-0123-456789abcdef"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"actions": 
{
"approve": 
{},
"reject": 
{},
"reopen": 
{},
"submit": 
{}
},
"period": 
{
"from": "2019-08-24",
"to": "2019-08-24"
},
"requiredSeconds": 633600,
"reviewer": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"self": "https://api.tempo.io/[...]",
"status": 
{
"actor": 
{},
"comment": "Hey, do it now!",
"key": "OPEN",
"requiredSecondsAtSubmit": 633600,
"timeSpentSecondsAtSubmit": 633600,
"updatedAt": "2022-01-01T00:00:00.000Z"
},
"timeSpentSeconds": 633600,
"user": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"worklogs": 
{
"self": "https://api.tempo.io/[...]"
}
}
Retrieve Timesheets waiting for approval

Retrieves a list of all Timesheets within past 12 months waiting for approval where the user is a reviewer

Responses
200 

SUCCESS

GET
/4/timesheet-approvals/waiting
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Audit Events

Audit Events related operations

Deleted allocation audit events

Retrieves a list of Audit events of deleted allocations after a given updated from date

QUERY PARAMETERS
updatedFrom
required
	
string <date-time>

A date to retrieve deleted audit records from


limit	
integer <int32> [ 50 .. 1000 ]
Default: 50

The maximum number of items to be returned in a paginated response


lastEvaluatedKey	
string

The starting item to be read in a paginated response

Responses
200 

SUCCESS

400 

ERROR

GET
/papertrail/1/events/deleted/types/allocation
Response samples
200400
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 50,
"lastEvaluatedKey": "string",
"limit": 1000,
"next": "string"
},
"results": 
[
{}
],
"self": "string"
}
Deleted worklog audit events

Retrieves a list of Audit events of deleted worklogs after a given updated from date

QUERY PARAMETERS
updatedFrom
required
	
string <date-time>

A date to retrieve deleted audit records from


limit	
integer <int32> [ 50 .. 1000 ]
Default: 50

The maximum number of items to be returned in a paginated response


lastEvaluatedKey	
string

The starting item to be read in a paginated response

Responses
200 

SUCCESS

400 

ERROR

GET
/papertrail/1/events/deleted/types/worklog
Response samples
200400
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 50,
"lastEvaluatedKey": "string",
"limit": 1000,
"next": "string"
},
"results": 
[
{}
],
"self": "string"
}
Global Configurations

Global configuration related operations

Retrieve Global Configurations

Retrieves the Global Configurations

Responses
200 

SUCCESS

GET
/4/globalconfiguration
Response samples
200
Content type
application/json
Copy
{
"allowLoggingOnClosedAccount": true,
"approvalPeriod": "WEEK",
"approvalWeekStart": 1,
"maxHoursPerDayPerUser": 8,
"numberOfDaysAllowedIntoFuture": 90,
"planApprovalEnabled": true,
"remainingEstimateOptional": true,
"startAndEndTimesEnabled": false,
"startAndEndTimesForPlanningEnabled": true,
"weekStart": 1,
"worklogDescriptionOptional": true
}
Holiday Schemes

Holiday operations

Get holiday schemes

List all holiday schemes

Responses
200 

SUCCESS

GET
/4/holiday-schemes
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Add holiday scheme

Add holiday scheme of a given input

REQUEST BODY SCHEMA: application/json
description	
string

The description of the Holiday Scheme


name
required
	
string

The name of the Holiday Scheme

Responses
200 

SUCCESS

400 

Holiday scheme cannot be created for some reasons.

POST
/4/holiday-schemes
Request samples
Payload
Content type
application/json
Copy
{
"description": "Default holiday scheme for all employees",
"name": "Default Holiday Scheme"
}
Response samples
200
Content type
application/json
Copy
{
"defaultScheme": true,
"description": "Default holiday scheme for all employees",
"id": 1,
"memberCount": 67,
"name": "Default Holiday Scheme",
"self": "https://api.tempo.io/[...]"
}
Get user scheme

Get an user scheme with the given id

PATH PARAMETERS
accountId
required
	
string

A unique identifier of the user in Jira

Responses
200 

SUCCESS

GET
/4/holiday-schemes/users/{accountId}
Response samples
200
Content type
application/json
Copy
{
"defaultScheme": true,
"description": "Default holiday scheme for all employees",
"id": 1,
"memberCount": 67,
"name": "Default Holiday Scheme",
"self": "https://api.tempo.io/[...]"
}
Delete a holiday scheme

Delete a holiday scheme with the given id

PATH PARAMETERS
schemeId
required
	
string

The id of the Scheme

Responses
204 

SUCCESS

400 

Holiday scheme cannot be deleted for some reasons.

404 

Holiday scheme cannot be found in the system

DELETE
/4/holiday-schemes/{schemeId}
Get holiday scheme

Get Holiday scheme of a given scheme id

PATH PARAMETERS
schemeId
required
	
string

The id of the Scheme

Responses
200 

SUCCESS

404 

Holiday scheme cannot be found in the system

GET
/4/holiday-schemes/{schemeId}
Response samples
200
Content type
application/json
Copy
{
"defaultScheme": true,
"description": "Default holiday scheme for all employees",
"id": 1,
"memberCount": 67,
"name": "Default Holiday Scheme",
"self": "https://api.tempo.io/[...]"
}
Update a holiday scheme

Update a holiday scheme with the given id using the provided input

PATH PARAMETERS
schemeId
required
	
string

The id of the Scheme

REQUEST BODY SCHEMA: application/json
description	
string

The description of the Holiday Scheme


name
required
	
string

The name of the Holiday Scheme

Responses
200 

SUCCESS

400 

Holiday scheme cannot be updated for some reasons.

404 

Holiday scheme cannot be found in the system

PUT
/4/holiday-schemes/{schemeId}
Request samples
Payload
Content type
application/json
Copy
{
"description": "Default holiday scheme for all employees",
"name": "Default Holiday Scheme"
}
Response samples
200
Content type
application/json
Copy
{
"defaultScheme": true,
"description": "Default holiday scheme for all employees",
"id": 1,
"memberCount": 67,
"name": "Default Holiday Scheme",
"self": "https://api.tempo.io/[...]"
}
Set the default holiday scheme

Set the default holiday scheme

PATH PARAMETERS
schemeId
required
	
string

The id of the Scheme

Responses
200 

SUCCESS

404 

Holiday scheme cannot be found in the system

PUT
/4/holiday-schemes/{schemeId}/default
Response samples
200
Content type
application/json
Copy
{
"defaultScheme": true,
"description": "Default holiday scheme for all employees",
"id": 1,
"memberCount": 67,
"name": "Default Holiday Scheme",
"self": "https://api.tempo.io/[...]"
}
Get holidays

List all holidays of a given scheme and year

PATH PARAMETERS
schemeId
required
	
string

The id of the Scheme

QUERY PARAMETERS
year	
integer <int32>

Year for holidays to be retrieved for. Returns holidays for current year if omitted.

Responses
200 

SUCCESS

404 

Holiday scheme cannot be found in the system

GET
/4/holiday-schemes/{schemeId}/holidays
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Add holiday

Add a holiday using the provided input

PATH PARAMETERS
schemeId
required
	
string

The id of the Scheme

REQUEST BODY SCHEMA: application/json
date
required
	
string <date>

The date of the Holiday


description	
string

The description of the Holiday


durationSeconds
required
	
integer <int64> >= 1

The duration in seconds of the Holiday


name
required
	
string

The name of the Holiday


type
required
	
string
Enum: "FIXED" "FLOATING"

The type of the Holiday

Responses
200 

SUCCESS

400 

Holiday cannot be created for some reasons

POST
/4/holiday-schemes/{schemeId}/holidays
Request samples
Payload
Content type
application/json
Copy
{
"date": "2019-08-24",
"description": "Holiday to celebrate all good things",
"durationSeconds": 18000,
"name": "National Holiday",
"type": "FIXED"
}
Response samples
200
Content type
application/json
Copy
{
"date": "2019-08-24",
"description": "Holiday to celebrate all good things",
"durationSeconds": 18000,
"id": 1,
"name": "National Holiday",
"schemeId": 2,
"self": "https://api.tempo.io/[...]",
"type": "FIXED"
}
Get floating holidays

List all floating holidays of a given scheme

PATH PARAMETERS
schemeId
required
	
string

The id of the Scheme

Responses
200 

SUCCESS

404 

Holiday scheme cannot be found in the system

GET
/4/holiday-schemes/{schemeId}/holidays/floating
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Delete holiday

Delete a holiday with the given id

PATH PARAMETERS
schemeId
required
	
string

The id of the Scheme


holidayId
required
	
string

The id of the holiday

Responses
204 

SUCCESS

404 

Holiday cannot be found in the system

DELETE
/4/holiday-schemes/{schemeId}/holidays/{holidayId}
Get holiday

Get holiday information

PATH PARAMETERS
schemeId
required
	
string

The id of the holiday scheme


holidayId
required
	
string

The id of the holiday

Responses
200 

SUCCESS

404 

Holiday scheme cannot be found in the system

GET
/4/holiday-schemes/{schemeId}/holidays/{holidayId}
Response samples
200
Content type
application/json
Copy
{
"date": "2019-08-24",
"description": "Holiday to celebrate all good things",
"durationSeconds": 18000,
"id": 1,
"name": "National Holiday",
"schemeId": 2,
"self": "https://api.tempo.io/[...]",
"type": "FIXED"
}
Update a holiday

Update a holiday with the given id using the provided input

PATH PARAMETERS
schemeId
required
	
string

The id of the Scheme


holidayId
required
	
string

The id of the holiday

REQUEST BODY SCHEMA: application/json
date
required
	
string <date>

The date of the Holiday


description	
string

The description of the Holiday


durationSeconds
required
	
integer <int64> >= 1

The duration in seconds of the Holiday


name
required
	
string

The name of the Holiday


type
required
	
string
Enum: "FIXED" "FLOATING"

The type of the Holiday

Responses
200 

SUCCESS

400 

Holiday cannot be created for some reasons

404 

Holiday cannot be found in the system

PUT
/4/holiday-schemes/{schemeId}/holidays/{holidayId}
Request samples
Payload
Content type
application/json
Copy
{
"date": "2019-08-24",
"description": "Holiday to celebrate all good things",
"durationSeconds": 18000,
"name": "National Holiday",
"type": "FIXED"
}
Response samples
200
Content type
application/json
Copy
{
"date": "2019-08-24",
"description": "Holiday to celebrate all good things",
"durationSeconds": 18000,
"id": 1,
"name": "National Holiday",
"schemeId": 2,
"self": "https://api.tempo.io/[...]",
"type": "FIXED"
}
Get members in a holiday scheme

Get holiday scheme members with the given id

PATH PARAMETERS
schemeId
required
	
string

The id of the Scheme

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

Responses
200 

SUCCESS

404 

Holiday scheme cannot be found in the system

GET
/4/holiday-schemes/{schemeId}/members
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Set holiday scheme to members

Assign a holiday scheme with the given id to members using the provided input

PATH PARAMETERS
schemeId
required
	
string

The id of the Scheme

REQUEST BODY SCHEMA: application/json
accountIds	
Array of strings [ 1 .. 2147483647 ] items

A list of account ids

Responses
204 

Users have been successfully added to the holiday scheme

400 

Holiday scheme membership cannot be updated for some reasons.

404 

Holiday scheme cannot be found in the system

POST
/4/holiday-schemes/{schemeId}/members
Request samples
Payload
Content type
application/json
Copy
{
"accountIds": "123456:01234567-89ab-cdef-0123-456789abcdef"
}
Periods

Period related operations

Retrieve Periods

Retrieves a list of all Periods for the given date range

QUERY PARAMETERS
from
required
	
string

The start date in format yyyy-mm-dd


to
required
	
string

The end date in format yyyy-mm-dd

Responses
200 

SUCCESS

GET
/4/periods
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"periods": 
[
{}
]
}
User Schedule

User Schedule operations

Retrieve logged User Schedule

Retrieves the Schedule of the logged-in User

QUERY PARAMETERS
from
required
	
string

The start date in format yyyy-mm-dd


to
required
	
string

The end date in format yyyy-mm-dd

Responses
200 

SUCCESS

GET
/4/user-schedule
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Retrieve User Schedule

Retrieves Schedule for the given User

PATH PARAMETERS
accountId
required
	
string
QUERY PARAMETERS
from
required
	
string

The start date in format yyyy-mm-dd


to
required
	
string

The end date in format yyyy-mm-dd

Responses
200 

SUCCESS

GET
/4/user-schedule/{accountId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Work Attributes

Work Attributes operations

Retrieve Work Attributes

Retrieves a list of all Work Attributes

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

Responses
200 

SUCCESS

GET
/4/work-attributes
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Create Work Attribute

Creates a new Work Attribute using the provided input and returns the newly created Work Attribute

REQUEST BODY SCHEMA: application/json
key
required
	
string

The key of the WorkAttribute


name
required
	
string [ 1 .. 255 ] characters

The name of the WorkAttribute


required	
boolean

Whether this WorkAttribute is required. If not provided, the default value is false


type
required
	
string
Enum: "ACCOUNT" "CHECKBOX" "INPUT_FIELD" "INPUT_NUMERIC" "STATIC_LIST"

The type of the WorkAttribute


values	
Array of strings

Only relevant when type is STATIC_LIST. These values are immutable. Their UI representation can be looked up in the names object below

Responses
200 

SUCCESS

400 

Work attribute cannot be created for some reasons

POST
/4/work-attributes
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"key": "_Attr_1_",
"name": "Attr 1",
"required": false,
"type": "STATIC_LIST",
"values": 
[
"Some Value"
]
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"key": "_Attr_1_",
"name": "Attr 1",
"names": 
{
"00000000-00000000-00000000-00000000": "Some Value"
},
"required": false,
"self": "https://api.tempo.io/[...]",
"type": "STATIC_LIST",
"values": 
[
"00000000-00000000-00000000-00000000"
]
}
Delete Work Attribute

Deletes an existing Work Attribute for the given key

PATH PARAMETERS
key
required
	
string
Responses
204 

SUCCESS

404 

Work attribute cannot be found in the system

DELETE
/4/work-attributes/{key}
Retrieve Work Attribute

Retrieves an existing Work Attribute for the given key

PATH PARAMETERS
key
required
	
string
Responses
200 

SUCCESS

404 

Work attribute cannot be found in the system

GET
/4/work-attributes/{key}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"key": "_Attr_1_",
"name": "Attr 1",
"names": 
{
"00000000-00000000-00000000-00000000": "Some Value"
},
"required": false,
"self": "https://api.tempo.io/[...]",
"type": "STATIC_LIST",
"values": 
[
"00000000-00000000-00000000-00000000"
]
}
Update Work Attribute

Updates an existing Work Attribute for the given key using the provided input and returns the updated Work Attribute

PATH PARAMETERS
key
required
	
string
REQUEST BODY SCHEMA: application/json
name
required
	
string

The name of the WorkAttribute


required	
boolean

Whether this WorkAttribute is required. If not provided, the default value is false


type
required
	
string
Enum: "ACCOUNT" "CHECKBOX" "INPUT_FIELD" "INPUT_NUMERIC" "STATIC_LIST"

The type of the WorkAttribute


values	
Array of strings

Only relevant when type is STATIC_LIST. These values are immutable. Their UI representation can be looked up in the names object below

Responses
200 

SUCCESS

400 

Work attribute cannot be updated for some reasons

404 

Work attribute cannot be found in the system

PUT
/4/work-attributes/{key}
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"name": "Attr 1",
"required": false,
"type": "STATIC_LIST",
"values": 
[
"Some Value"
]
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"key": "_Attr_1_",
"name": "Attr 1",
"names": 
{
"00000000-00000000-00000000-00000000": "Some Value"
},
"required": false,
"self": "https://api.tempo.io/[...]",
"type": "STATIC_LIST",
"values": 
[
"00000000-00000000-00000000-00000000"
]
}
Workload Schemes

Workload Schemes operations

Retrieve Workload Schemes

Retrieves a list of all Workload Schemes

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

Responses
200 

SUCCESS

404 

Workload scheme cannot be found in the system

GET
/4/workload-schemes
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Create Workload Scheme

Creates a new Workload Scheme using the provided input and returns the newly created Workload Scheme

REQUEST BODY SCHEMA: application/json
days	
Array of objects (WorkloadSchemeDayInput) = 7 items

The list of days and their required hours in the workload scheme. This list must be unique and contains all weekdays [Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday]


description	
string

The description of the workload scheme


name
required
	
string

The name of the workload scheme

Responses
200 

SUCCESS

POST
/4/workload-schemes
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"days": 
[
{},
{},
{},
{},
{},
{},
{}
],
"description": "Employees working 50%",
"name": "Part-time Workload Scheme"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"days": 
[
{}
],
"defaultScheme": false,
"description": "Employees working 50%",
"id": 1,
"memberCount": 100,
"name": "Part-time Workload Scheme",
"self": "https://api.tempo.io/[...]"
}
Retrieve Workload Scheme for User

Retrieves an existing Workload Scheme for the given User

PATH PARAMETERS
accountId
required
	
string

A unique identifier of the user in Jira

Responses
200 

SUCCESS

404 

Workload scheme cannot be found in the system

GET
/4/workload-schemes/users/{accountId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"days": 
[
{}
],
"defaultScheme": false,
"description": "Employees working 50%",
"id": 1,
"memberCount": 100,
"name": "Part-time Workload Scheme",
"self": "https://api.tempo.io/[...]"
}
Delete Workload Scheme

Deletes a Workload Scheme for the given id

PATH PARAMETERS
id
required
	
string

ID of the workload scheme

Responses
204 

Workload scheme been successfully deleted

404 

Workload scheme cannot be found in the system

DELETE
/4/workload-schemes/{id}
Retrieve Workload Scheme

Retrieves an existing Workload Scheme for the given id

PATH PARAMETERS
id
required
	
string

ID of the workload scheme

Responses
200 

SUCCESS

404 

Workload scheme cannot be found in the system

GET
/4/workload-schemes/{id}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"days": 
[
{}
],
"defaultScheme": false,
"description": "Employees working 50%",
"id": 1,
"memberCount": 100,
"name": "Part-time Workload Scheme",
"self": "https://api.tempo.io/[...]"
}
Update Workload Scheme

Updates an existing Workload Scheme for the given id using the provided input and returns the updated Workload Scheme

PATH PARAMETERS
id
required
	
string

ID of the workload scheme

REQUEST BODY SCHEMA: application/json
days	
Array of objects (WorkloadSchemeDayInput) = 7 items

The list of days and their required hours in the workload scheme. This list must be unique and contains all weekdays [Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday]


description	
string

The description of the workload scheme


name
required
	
string

The name of the workload scheme

Responses
200 

SUCCESS

404 

Workload scheme cannot be found in the system

PUT
/4/workload-schemes/{id}
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"days": 
[
{},
{},
{},
{},
{},
{},
{}
],
"description": "Employees working 50%",
"name": "Part-time Workload Scheme"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"days": 
[
{}
],
"defaultScheme": false,
"description": "Employees working 50%",
"id": 1,
"memberCount": 100,
"name": "Part-time Workload Scheme",
"self": "https://api.tempo.io/[...]"
}
Set default Workload Scheme

Sets the given Workload Scheme as default

PATH PARAMETERS
id
required
	
string

ID of the workload scheme

Responses
200 

SUCCESS

404 

Workload scheme cannot be found in the system

PUT
/4/workload-schemes/{id}/default
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"days": 
[
{}
],
"defaultScheme": false,
"description": "Employees working 50%",
"id": 1,
"memberCount": 100,
"name": "Part-time Workload Scheme",
"self": "https://api.tempo.io/[...]"
}
Retrieve Members of Workload Scheme

Retrieves a list of all the Members for the given Workload Scheme

PATH PARAMETERS
id
required
	
string

ID of the workload scheme

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

Responses
200 

SUCCESS

404 

Workload scheme cannot be found in the system

GET
/4/workload-schemes/{id}/members
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Add Users to Workload Scheme

Adds a list of Users to the given Workload Scheme using the provided input

PATH PARAMETERS
id
required
	
string

ID of the workload scheme

REQUEST BODY SCHEMA: application/json
accountIds
required
	
Array of strings [ 1 .. 2147483647 ] items

The list of account ids in the workload scheme

Responses
204 

Users have been successfully added to the workload scheme

404 

Workload scheme cannot be found in the system

POST
/4/workload-schemes/{id}/members
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"accountIds": 
[
"111aaaa2222bbbb3333cccc",
"555dddd2222bbbb5656cccc"
]
}
Budget

Project budget related operations

Delete project's budget
Financial Manager
Deletes the budget of an existing project without milestones
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
Responses
204 

Project budget has been successfully deleted

DELETE
/4/projects/{projectId}/budget
Get project's budget
Financial Manager
Gets the fixed or calculated budget of a Project using following logic:
If the Project has a timeframe, the last budget-milestone within the timeframe is returned.
If the Project has no timeframe, the very last budget-milestone is returned.
If the Project has no budget-milestones, then the fixed budget is returned, if it exists.
If none of the above applies, "204 No Content" is returned.
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project

Responses
200 

SUCCESS

204 

Project has no budget or budget milestones

GET
/4/projects/{projectId}/budget
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"amount": 
{
"currencyCode": "USD",
"value": 1234.56
},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/budget"
}
Set project's budget
Financial Manager
Sets a budget of an existing project without milestones
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project


newValue
required
	
number
Responses
200 

SUCCESS

PUT
/4/projects/{projectId}/budget/{newValue}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"amount": 
{
"currencyCode": "USD",
"value": 1234.56
},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/budget"
}
Budget Milestones

Project budget milestones related operations

Get project budget milestones
Financial Manager
List all budget milestones of a given project
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project

Responses
200 

SUCCESS

GET
/4/projects/{projectId}/budget-milestones
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"milestones": 
[
{}
],
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/budget-milestones"
}
Create budget milestone
Financial Manager
Adds a budget milestone to an existing project
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
REQUEST BODY SCHEMA: application/json
budget
required
	
number

The value of the milestone


date
required
	
string <date>

The date of the milestone in yyyy-MM-dd format


description	
string

The description of the milestone

Responses
200 

SUCCESS

POST
/4/projects/{projectId}/budget-milestones
Request samples
Payload
Content type
application/json
Copy
{
"budget": 1234.56,
"date": "yyyy-MM-dd",
"description": "This is a description"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"budget": 
{
"currencyCode": "USD",
"value": 1234.56
},
"date": "2019-08-24",
"description": "This is a description",
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9"
}
Delete project's budget milestone
Financial Manager
Deletes the budget milestone of an existing project
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

milestoneId
required
	
string
Responses
204 

Project budget milestone has been successfully deleted

DELETE
/4/projects/{projectId}/budget-milestones/{milestoneId}
Update budget milestone
Financial Manager
Updates a budget milestone of an existing project
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

milestoneId
required
	
string
REQUEST BODY SCHEMA: application/json
budget
required
	
number

The value of the milestone


date
required
	
string <date>

The date of the milestone in yyyy-MM-dd format


description	
string

The description of the milestone

Responses
200 

SUCCESS

PUT
/4/projects/{projectId}/budget-milestones/{milestoneId}
Request samples
Payload
Content type
application/json
Copy
{
"budget": 1234.56,
"date": "yyyy-MM-dd",
"description": "This is a description"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"budget": 
{
"currencyCode": "USD",
"value": 1234.56
},
"date": "2019-08-24",
"description": "This is a description",
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9"
}
Cost

Project cost related operations

List all expenses actuals within a project
Financial Manager
Gets a paginated list of all expenses actuals within a Project
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project

QUERY PARAMETERS
to	
string

offset	
integer <int32>
Default: 0

limit	
integer <int32>
Default: 50
Responses
200 

SUCCESS

GET
/4/projects/{projectId}/actuals/expenses
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
List all labor actuals within a project

Gets a paginated list of all labor actuals within a Project

NOTE: Cost rate and billing rate are not returned for a time-based project.

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project

QUERY PARAMETERS
to	
string

Optional parameter representing the user's today. If left blank will default the current date on the server (UTC)


offset	
integer <int32>
Default: 0

limit	
integer <int32>
Default: 50
Responses
200 

SUCCESS

GET
/4/projects/{projectId}/actuals/labor
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
List all planned labors within a project

Gets a paginated list of all planned labors within a Project

NOTE: Cost rate and billing rate are not returned for a time-based project.

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project

QUERY PARAMETERS
from	
string

The start date in format yyyy-mm-dd


to	
string

The end date in format yyyy-mm-dd


offset	
integer <int32>
Default: 0

limit	
integer <int32>
Default: 50
Responses
200 

SUCCESS

GET
/4/projects/{projectId}/plans/labor
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Expense

Project expense related operations

Get project expenses
Financial Manager
List all expenses of a given project
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

limit	
integer <int32>
Default: 50
Responses
200 

SUCCESS

GET
/4/projects/{projectId}/expenses
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Add expense to project
Financial Manager
Add expense to project
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
REQUEST BODY SCHEMA: application/json
accountKey	
string

category	
string

The category of the Expense


date
required
	
string <date>

The date of the Expense in yyyy-MM-dd format. In the case of a recurrent expense, the date of the first occurrence of that expense.


description
required
	
string

The description of the Expense


recurrence	
object (Recurrence)

The recurrence specified for the revenue. Note: this field will default to no recurrence if either type, monthlyBy, or interval are not provided.


value
required
	
number

The amount of the Expense in project's currency

Responses
200 

SUCCESS

POST
/4/projects/{projectId}/expenses
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"value": 1250,
"category": "Office Space",
"date": "yyyy-MM-dd",
"description": "Additional office space rental",
"recurrence": 
{
"count": 12,
"interval": 3,
"monthlyBy": "DAY_OF_MONTH",
"type": "MonthlyRecurrence"
},
"accountKey": "ACCOUNT-123"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"account": 
{
"key": "ACCOUNT-123",
"self": "https://api.tempo.io/4/accounts/ACCOUNT-123"
},
"amount": 
{
"currencyCode": "USD",
"value": 1234.56
},
"category": 
{
"name": "Office Space"
},
"date": "2019-08-24",
"description": "Additional office space rental",
"id": "1a9a8a45-a39a-4d44-a2c1-6c189d5d9135",
"recurrence": 
{
"count": 12,
"endDate": "2019-08-24",
"interval": 3,
"monthlyBy": "DAY_OF_MONTH",
"type": "MonthlyRecurrence"
},
"self": "https://api.tempo.io/[...]"
}
Delete expense from project
Financial Manager
Delete expense from project
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

expenseId
required
	
string
Responses
204 

Expense has been successfully deleted

DELETE
/4/projects/{projectId}/expenses/{expenseId}
Get project expense
Financial Manager
Get expense information
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project


expenseId
required
	
string

A unique identifier for an Expense

Responses
200 

SUCCESS

GET
/4/projects/{projectId}/expenses/{expenseId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"account": 
{
"key": "ACCOUNT-123",
"self": "https://api.tempo.io/4/accounts/ACCOUNT-123"
},
"amount": 
{
"currencyCode": "USD",
"value": 1234.56
},
"category": 
{
"name": "Office Space"
},
"date": "2019-08-24",
"description": "Additional office space rental",
"id": "1a9a8a45-a39a-4d44-a2c1-6c189d5d9135",
"recurrence": 
{
"count": 12,
"endDate": "2019-08-24",
"interval": 3,
"monthlyBy": "DAY_OF_MONTH",
"type": "MonthlyRecurrence"
},
"self": "https://api.tempo.io/[...]"
}
Update an expense
Financial Manager
Update an expense
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

expenseId
required
	
string
REQUEST BODY SCHEMA: application/json
accountKey	
string

category	
string

The category of the Expense


date
required
	
string <date>

The date of the Expense in yyyy-MM-dd format. In the case of a recurrent expense, the date of the first occurrence of that expense.


description
required
	
string

The description of the Expense


recurrence	
object (Recurrence)

The recurrence specified for the revenue. Note: this field will default to no recurrence if either type, monthlyBy, or interval are not provided.


value
required
	
number

The amount of the Expense in project's currency

Responses
200 

SUCCESS

PUT
/4/projects/{projectId}/expenses/{expenseId}
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"value": 1250,
"category": "Office Space",
"date": "yyyy-MM-dd",
"description": "Additional office space rental",
"recurrence": 
{
"count": 12,
"interval": 3,
"monthlyBy": "DAY_OF_MONTH",
"type": "MonthlyRecurrence"
},
"accountKey": "ACCOUNT-123"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"account": 
{
"key": "ACCOUNT-123",
"self": "https://api.tempo.io/4/accounts/ACCOUNT-123"
},
"amount": 
{
"currencyCode": "USD",
"value": 1234.56
},
"category": 
{
"name": "Office Space"
},
"date": "2019-08-24",
"description": "Additional office space rental",
"id": "1a9a8a45-a39a-4d44-a2c1-6c189d5d9135",
"recurrence": 
{
"count": 12,
"endDate": "2019-08-24",
"interval": 3,
"monthlyBy": "DAY_OF_MONTH",
"type": "MonthlyRecurrence"
},
"self": "https://api.tempo.io/[...]"
}
Financials

Project financials related operations

Get the financial summary of a project at a given date
Financial Manager
Gets the cost, expenses and revenue (if revenue tracking is on) of a project at a given date. A date in the future will use projected values.
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project

QUERY PARAMETERS
date	
string

The date of the Project's financial summary in format yyyy-mm-dd

Responses
200 

SUCCESS

GET
/4/projects/{projectId}/financials/summary
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"cost": 
{
"actual": 
{},
"budget": 
{}
},
"revenue": 
{
"actual": 
{}
},
"self": "https://api.tempo.io/[...]"
}
Fixed Revenue

Project fixed revenue related operations

Get project fixed revenues
Financial Manager
List all fixed revenues of a given project
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

limit	
integer <int32>
Default: 50
Responses
200 

SUCCESS

GET
/4/projects/{projectId}/fixed-revenues
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Add fixed revenue to project
Financial Manager
Add fixed revenue to project
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
REQUEST BODY SCHEMA: application/json
accountKey	
string

category	
string

The category of the Fixed Revenue


date
required
	
string <date>

The date of the Fixed Revenue in yyyy-MM-dd format. In the case of a recurrent revenue, the date of the first occurrence of that revenue.


description
required
	
string

The description of the Fixed Revenue


recurrence	
object (Recurrence)

The recurrence specified for the revenue. Note: this field will default to no recurrence if either type, monthlyBy, or interval are not provided.


value
required
	
number

The amount of the Fixed Revenue in project's currency

Responses
200 

SUCCESS

POST
/4/projects/{projectId}/fixed-revenues
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"value": 1250,
"category": "Office Space",
"date": "yyyy-MM-dd",
"description": "Additional office space rental",
"recurrence": 
{
"count": 12,
"interval": 3,
"monthlyBy": "DAY_OF_MONTH",
"type": "MonthlyRecurrence"
},
"accountKey": "ACCOUNT-123"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"account": 
{
"key": "ACCOUNT-123",
"self": "https://api.tempo.io/4/accounts/ACCOUNT-123"
},
"amount": 
{
"currencyCode": "USD",
"value": 1234.56
},
"category": 
{
"name": "Office Space"
},
"date": "2019-08-24",
"description": "Additional office space rental",
"id": "1a9a8a45-a39a-4d44-a2c1-6c189d5d9135",
"recurrence": 
{
"count": 12,
"endDate": "2019-08-24",
"interval": 3,
"monthlyBy": "DAY_OF_MONTH",
"type": "MonthlyRecurrence"
},
"self": "https://api.tempo.io/[...]"
}
Delete fixed revenue from project
Financial Manager
Delete fixed revenue from project
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

fixedRevenueId
required
	
string
Responses
204 

Fixed revenue has been successfully deleted

DELETE
/4/projects/{projectId}/fixed-revenues/{fixedRevenueId}
Get project fixed revenue
Financial Manager
Get fixed revenue information
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project


fixedRevenueId
required
	
string

A unique identifier for a Fixed Revenue

Responses
200 

SUCCESS

GET
/4/projects/{projectId}/fixed-revenues/{fixedRevenueId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"account": 
{
"key": "ACCOUNT-123",
"self": "https://api.tempo.io/4/accounts/ACCOUNT-123"
},
"amount": 
{
"currencyCode": "USD",
"value": 1234.56
},
"category": 
{
"name": "Office Space"
},
"date": "2019-08-24",
"description": "Additional office space rental",
"id": "1a9a8a45-a39a-4d44-a2c1-6c189d5d9135",
"recurrence": 
{
"count": 12,
"endDate": "2019-08-24",
"interval": 3,
"monthlyBy": "DAY_OF_MONTH",
"type": "MonthlyRecurrence"
},
"self": "https://api.tempo.io/[...]"
}
Update a fixed revenue
Financial Manager
Update a fixed revenue
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

fixedRevenueId
required
	
string
REQUEST BODY SCHEMA: application/json
accountKey	
string

category	
string

The category of the Fixed Revenue


date
required
	
string <date>

The date of the Fixed Revenue in yyyy-MM-dd format. In the case of a recurrent revenue, the date of the first occurrence of that revenue.


description
required
	
string

The description of the Fixed Revenue


recurrence	
object (Recurrence)

The recurrence specified for the revenue. Note: this field will default to no recurrence if either type, monthlyBy, or interval are not provided.


value
required
	
number

The amount of the Fixed Revenue in project's currency

Responses
200 

SUCCESS

PUT
/4/projects/{projectId}/fixed-revenues/{fixedRevenueId}
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"value": 1250,
"category": "Office Space",
"date": "yyyy-MM-dd",
"description": "Additional office space rental",
"recurrence": 
{
"count": 12,
"interval": 3,
"monthlyBy": "DAY_OF_MONTH",
"type": "MonthlyRecurrence"
},
"accountKey": "ACCOUNT-123"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"account": 
{
"key": "ACCOUNT-123",
"self": "https://api.tempo.io/4/accounts/ACCOUNT-123"
},
"amount": 
{
"currencyCode": "USD",
"value": 1234.56
},
"category": 
{
"name": "Office Space"
},
"date": "2019-08-24",
"description": "Additional office space rental",
"id": "1a9a8a45-a39a-4d44-a2c1-6c189d5d9135",
"recurrence": 
{
"count": 12,
"endDate": "2019-08-24",
"interval": 3,
"monthlyBy": "DAY_OF_MONTH",
"type": "MonthlyRecurrence"
},
"self": "https://api.tempo.io/[...]"
}
Portfolio

Portfolio related operations

Get list of portfolios
Financial Manager
Get a paginated list of portfolios through the public API
AUTHORIZATIONS:
bearerAuth
QUERY PARAMETERS
offset	
integer <int32>

limit	
integer <int32>
Responses
200 

SUCCESS

GET
/4/portfolios
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Create portfolio
Financial Manager
Create a portfolio
AUTHORIZATIONS:
bearerAuth
REQUEST BODY SCHEMA: application/json
colorKey	
string
Enum: "NO_COLOR" "ORANGE" "YELLOW" "PURPLE" "GREEN" "BLUE_NAVY" "BLUE_LIGHT" "SLATE"

The color key of the Portfolio


description	
string

The description of the Portfolio


name
required
	
string

The name of the Portfolio

Responses
200 

SUCCESS

POST
/4/portfolios
Request samples
Payload
Content type
application/json
Copy
{
"name": "Portfolio ABC",
"description": "A description for Portfolio ABC",
"colorKey": "BLUE_NAVY"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"averageRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"colorKey": "BLUE_NAVY",
"description": "A description for Portfolio ABC",
"editable": true,
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"name": "Portfolio ABC",
"owner": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"projects": 
{
"self": "https://api.tempo.io/[...]"
},
"scope": 
{
"completedTaskCount": 36,
"totalTaskCount": 36
},
"self": "https://api.tempo.io/4/portfolios/dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"shared": true,
"staff": 
{
"totalUniqueCount": 12
},
"totalBudget": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalCost": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalLaborCost": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalRevenue": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalTimeSpentSeconds": 3600
}
Delete portfolio
Financial Manager
Delete a portfolio
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
portfolioId
required
	
string
Responses
204 

Portfolio has been successfully deleted

DELETE
/4/portfolios/{portfolioId}
Get a portfolio
Financial Manager
Gets the details of a single instance of a Portfolio
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
portfolioId
required
	
string
Responses
200 

SUCCESS

GET
/4/portfolios/{portfolioId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"averageRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"colorKey": "BLUE_NAVY",
"description": "A description for Portfolio ABC",
"editable": true,
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"name": "Portfolio ABC",
"owner": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"projects": 
{
"self": "https://api.tempo.io/[...]"
},
"scope": 
{
"completedTaskCount": 36,
"totalTaskCount": 36
},
"self": "https://api.tempo.io/4/portfolios/dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"shared": true,
"staff": 
{
"totalUniqueCount": 12
},
"totalBudget": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalCost": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalLaborCost": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalRevenue": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalTimeSpentSeconds": 3600
}
Update a portfolio
Financial Manager
Updates the details of a single instance of a Portfolio
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
portfolioId
required
	
string
REQUEST BODY SCHEMA: application/json
colorKey
required
	
string
Enum: "NO_COLOR" "ORANGE" "YELLOW" "PURPLE" "GREEN" "BLUE_NAVY" "BLUE_LIGHT" "SLATE"

The color key of the Portfolio


description
required
	
string

The description of the Portfolio


name
required
	
string

The name of the Portfolio

Responses
200 

SUCCESS

PUT
/4/portfolios/{portfolioId}
Request samples
Payload
Content type
application/json
Copy
{
"name": "Portfolio ABC",
"description": "",
"colorKey": "ORANGE"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"averageRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"colorKey": "BLUE_NAVY",
"description": "A description for Portfolio ABC",
"editable": true,
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"name": "Portfolio ABC",
"owner": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"projects": 
{
"self": "https://api.tempo.io/[...]"
},
"scope": 
{
"completedTaskCount": 36,
"totalTaskCount": 36
},
"self": "https://api.tempo.io/4/portfolios/dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"shared": true,
"staff": 
{
"totalUniqueCount": 12
},
"totalBudget": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalCost": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalLaborCost": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalRevenue": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalTimeSpentSeconds": 3600
}
Remove projects from a portfolio
Financial Manager
Remove projects from a portfolio
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
portfolioId
required
	
string
QUERY PARAMETERS
projectIds	
Array of strings unique
Responses
200 

Portfolio projects have been successfully removed

DELETE
/4/portfolios/{portfolioId}/projects
List all projects of a Portfolio
Financial Manager
Gets a paginated list of all Project entities of a Portfolio.

NOTE: Default cost rates and default billing rates are not returned for time-based projects.

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
portfolioId
required
	
string
QUERY PARAMETERS
offset	
integer <int32>
Default: 0

limit	
integer <int32>
Default: 50
Responses
200 

SUCCESS

GET
/4/portfolios/{portfolioId}/projects
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Add projects to a portfolio
Financial Manager
Add projects to a portfolio
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
portfolioId
required
	
string
REQUEST BODY SCHEMA: application/json
projectIds
required
	
Array of strings unique

A set of project ids

Responses
200 

SUCCESS

POST
/4/portfolios/{portfolioId}/projects
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"projectIds": 
[
"3f6b7271-487c-478d-8741-6b9d8b161200",
"d0b68f36-108d-47c4-9982-91b6cb82664b"
]
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"averageRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"colorKey": "BLUE_NAVY",
"description": "A description for Portfolio ABC",
"editable": true,
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"name": "Portfolio ABC",
"owner": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"projects": 
{
"self": "https://api.tempo.io/[...]"
},
"scope": 
{
"completedTaskCount": 36,
"totalTaskCount": 36
},
"self": "https://api.tempo.io/4/portfolios/dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"shared": true,
"staff": 
{
"totalUniqueCount": 12
},
"totalBudget": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalCost": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalLaborCost": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalRevenue": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalTimeSpentSeconds": 3600
}
Update a portfolio flag for sharing.
Financial Manager
Updates a portfolio to whether it is shared or not.
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
portfolioId
required
	
string
REQUEST BODY SCHEMA: application/json
shared
required
	
boolean

Indicates whether the Portfolio is shared or not

Responses
200 

SUCCESS

PUT
/4/portfolios/{portfolioId}/shared
Request samples
Payload
Content type
application/json
Copy
{
"shared": true
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"averageRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"colorKey": "BLUE_NAVY",
"description": "A description for Portfolio ABC",
"editable": true,
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"name": "Portfolio ABC",
"owner": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"projects": 
{
"self": "https://api.tempo.io/[...]"
},
"scope": 
{
"completedTaskCount": 36,
"totalTaskCount": 36
},
"self": "https://api.tempo.io/4/portfolios/dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"shared": true,
"staff": 
{
"totalUniqueCount": 12
},
"totalBudget": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalCost": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalLaborCost": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalRevenue": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalTimeSpentSeconds": 3600
}
Project

Project related operations

List all projects

Gets a paginated list of all Project entities.

NOTE: Default cost rates and default billing rates are not returned for time-based projects.

NOTE: Financial information is only returned when Financial Manager is installed and licensed.

AUTHORIZATIONS:
bearerAuth
QUERY PARAMETERS
offset	
integer <int32>
Default: 0

limit	
integer <int32>
Default: 50
Responses
200 

SUCCESS

GET
/4/projects
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Create project

Create a project through the public API. The project's owner is determined by the authorization token provided when calling the endpoint. If a scope element is included,an import will be triggered to load tasks and worklogs into the project. If the project data is valid but the provided scope is invalid, the project will be created but the scope import will fail and an error status will be returned.

NOTES:

The maximum size of the initial scope is 10,000 tasks.
The default cost rate and default billing rate are not returned for a time-based project.
If the default configuration for the auto-sync is On, the timezone offset to use for scheduling will be retrieved from Jira (https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-users/#api-rest-api-3-user-get)
AUTHORIZATIONS:
bearerAuth
REQUEST BODY SCHEMA: application/json
currencyCode	
string
Financial Manager
The project currency. Not applicable if project's type is TIME_BASED. Default value from the Project Default Configuration will be applied if currency code is not specified.

defaultCostRate	
number
Financial Manager
The default cost rate for the Project. Not applicable if project's type is TIME_BASED.

name
required
	
string

The name of the Project


scope	
object (ScopeSourceApiInputBean)

The scope source of the project


trackingRevenue	
boolean
Financial Manager
Indicates whether the Project is using revenue tracking. Default value from the Project Default Configuration will be applied if revenue tracking is not specified.

type	
string
Enum: "MONETARY_BASED" "TIME_BASED"
Financial Manager
The project type. Default value from the Project Default Configuration will be applied if type is not specified.
Responses
200 

SUCCESS

POST
/4/projects
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"name": "Project ABC",
"defaultCostRate": 1234.56,
"currencyCode": "USD",
"type": "MONETARY_BASED",
"trackingRevenue": true,
"scope": 
{
"reference": "10001",
"type": "filter"
}
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"attributeValues": 
[
{}
],
"autoSync": 
{
"nextScheduledSyncAt": "2023-12-31T21:00:00.000Z",
"schedule": "DAILY",
"timeZoneOffsetInHours": -5
},
"budget": 
{
"amount": 
{},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/budget"
},
"budgetMilestones": 
{
"self": "https://api.tempo.io/[...]"
},
"defaultBillingRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"defaultCostRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"editable": true,
"expenseActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"expenses": 
{
"self": "https://api.tempo.io/[...]"
},
"generalAccess": "RESTRICTED",
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"isTrackingRevenue": true,
"isUsingAccountRates": true,
"isUsingApproval": true,
"isUsingGlobalCostRates": true,
"laborActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"name": "Operation Bedlam",
"owner": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"rates": 
{
"self": "https://api.tempo.io/[...]"
},
"roles": 
{
"self": "https://api.tempo.io/[...]"
},
"scope": 
{
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/scope",
"source": 
{},
"tasks": 
{}
},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"status": "IN_PROGRESS",
"tags": 
[
"Q1",
"Marketing"
],
"timeframe": 
{
"self": "https://api.tempo.io/[...]"
},
"type": "MONETARY_BASED"
}
Get a project

Gets the details of a single instance of a Project.

NOTE: Default cost rate and default billing rate are not returned for a time-based project.

NOTE: Financial information is only returned when Financial Manager is installed and licensed.

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
id
required
	
string

A unique identifier for a Project

Responses
200 

SUCCESS

GET
/4/projects/{id}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"attributeValues": 
[
{}
],
"autoSync": 
{
"nextScheduledSyncAt": "2023-12-31T21:00:00.000Z",
"schedule": "DAILY",
"timeZoneOffsetInHours": -5
},
"budget": 
{
"amount": 
{},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/budget"
},
"budgetMilestones": 
{
"self": "https://api.tempo.io/[...]"
},
"defaultBillingRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"defaultCostRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"editable": true,
"expenseActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"expenses": 
{
"self": "https://api.tempo.io/[...]"
},
"generalAccess": "RESTRICTED",
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"isTrackingRevenue": true,
"isUsingAccountRates": true,
"isUsingApproval": true,
"isUsingGlobalCostRates": true,
"laborActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"name": "Operation Bedlam",
"owner": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"rates": 
{
"self": "https://api.tempo.io/[...]"
},
"roles": 
{
"self": "https://api.tempo.io/[...]"
},
"scope": 
{
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/scope",
"source": 
{},
"tasks": 
{}
},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"status": "IN_PROGRESS",
"tags": 
[
"Q1",
"Marketing"
],
"timeframe": 
{
"self": "https://api.tempo.io/[...]"
},
"type": "MONETARY_BASED"
}
Delete project

Delete a project

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
Responses
204 

Project has been successfully deleted

DELETE
/4/projects/{projectId}
Update a project basic information

Updates the basic details of a single instance of a Project.

NOTE: Fields set to null or not provided will be ignored in the request.

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
REQUEST BODY SCHEMA: application/json
name	
string

The name of the Project


status	
string
Enum: "IN_PLANNING" "IN_PROGRESS" "ON_HOLD" "COMPLETED"

The status of the Project


tags	
Array of strings
Financial Manager
The tags of the Project

trackingRevenue	
boolean
Financial Manager
Indicates whether the Project is using revenue tracking

usingApproval	
boolean

Indicates whether the Project is using project time approval

Responses
200 

SUCCESS

PUT
/4/projects/{projectId}
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"name": "Project ABC",
"status": "IN_PROGRESS",
"tags": 
[
"Q1",
"Marketing"
],
"trackingRevenue": true,
"usingApproval": true
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"attributeValues": 
[
{}
],
"autoSync": 
{
"nextScheduledSyncAt": "2023-12-31T21:00:00.000Z",
"schedule": "DAILY",
"timeZoneOffsetInHours": -5
},
"budget": 
{
"amount": 
{},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/budget"
},
"budgetMilestones": 
{
"self": "https://api.tempo.io/[...]"
},
"defaultBillingRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"defaultCostRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"editable": true,
"expenseActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"expenses": 
{
"self": "https://api.tempo.io/[...]"
},
"generalAccess": "RESTRICTED",
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"isTrackingRevenue": true,
"isUsingAccountRates": true,
"isUsingApproval": true,
"isUsingGlobalCostRates": true,
"laborActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"name": "Operation Bedlam",
"owner": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"rates": 
{
"self": "https://api.tempo.io/[...]"
},
"roles": 
{
"self": "https://api.tempo.io/[...]"
},
"scope": 
{
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/scope",
"source": 
{},
"tasks": 
{}
},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"status": "IN_PROGRESS",
"tags": 
[
"Q1",
"Marketing"
],
"timeframe": 
{
"self": "https://api.tempo.io/[...]"
},
"type": "MONETARY_BASED"
}
Update project auto-sync

Updates the project's scope auto-sync configuration.

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
REQUEST BODY SCHEMA: application/json
schedule
required
	
string
Enum: "OFF" "DAILY" "WEEKLY"

The schedule of auto-sync. Daily sync occurs Monday through Friday while weekly sync occurs on the weekend.


timeZoneOffsetInHours	
integer <int32>

The time offset in whole hours (from Coordinated Universal Time (UTC)) to use to determine when the auto-sync should be executed. The auto-sync will be executed some time after midnight based on the provided timezone offset. If no offset is provided, the Jira API endpoint will be used to retrieve the default timezone offset value

Responses
200 

SUCCESS

PUT
/4/projects/{projectId}/auto-sync
Request samples
Payload
Content type
application/json
Copy
{
"schedule": "DAILY",
"timeZoneOffsetInHours": -5
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"attributeValues": 
[
{}
],
"autoSync": 
{
"nextScheduledSyncAt": "2023-12-31T21:00:00.000Z",
"schedule": "DAILY",
"timeZoneOffsetInHours": -5
},
"budget": 
{
"amount": 
{},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/budget"
},
"budgetMilestones": 
{
"self": "https://api.tempo.io/[...]"
},
"defaultBillingRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"defaultCostRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"editable": true,
"expenseActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"expenses": 
{
"self": "https://api.tempo.io/[...]"
},
"generalAccess": "RESTRICTED",
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"isTrackingRevenue": true,
"isUsingAccountRates": true,
"isUsingApproval": true,
"isUsingGlobalCostRates": true,
"laborActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"name": "Operation Bedlam",
"owner": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"rates": 
{
"self": "https://api.tempo.io/[...]"
},
"roles": 
{
"self": "https://api.tempo.io/[...]"
},
"scope": 
{
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/scope",
"source": 
{},
"tasks": 
{}
},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"status": "IN_PROGRESS",
"tags": 
[
"Q1",
"Marketing"
],
"timeframe": 
{
"self": "https://api.tempo.io/[...]"
},
"type": "MONETARY_BASED"
}
Update project currency
Financial Manager
Updates the project's currency.
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

currencyCode
required
	
string

The new currency code as per ISO 4217. (e.g. USD, CAD)

Responses
200 

SUCCESS

PUT
/4/projects/{projectId}/currency/{currencyCode}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"attributeValues": 
[
{}
],
"autoSync": 
{
"nextScheduledSyncAt": "2023-12-31T21:00:00.000Z",
"schedule": "DAILY",
"timeZoneOffsetInHours": -5
},
"budget": 
{
"amount": 
{},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/budget"
},
"budgetMilestones": 
{
"self": "https://api.tempo.io/[...]"
},
"defaultBillingRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"defaultCostRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"editable": true,
"expenseActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"expenses": 
{
"self": "https://api.tempo.io/[...]"
},
"generalAccess": "RESTRICTED",
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"isTrackingRevenue": true,
"isUsingAccountRates": true,
"isUsingApproval": true,
"isUsingGlobalCostRates": true,
"laborActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"name": "Operation Bedlam",
"owner": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"rates": 
{
"self": "https://api.tempo.io/[...]"
},
"roles": 
{
"self": "https://api.tempo.io/[...]"
},
"scope": 
{
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/scope",
"source": 
{},
"tasks": 
{}
},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"status": "IN_PROGRESS",
"tags": 
[
"Q1",
"Marketing"
],
"timeframe": 
{
"self": "https://api.tempo.io/[...]"
},
"type": "MONETARY_BASED"
}
Update general access of a project.

Updates the general access of a project to be either available to all users with application access permission or restricted to those with individual access.

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
REQUEST BODY SCHEMA: application/json
generalAccess
required
	
string
Enum: "RESTRICTED" "USERS_WITH_APP_ACCESS"

The general access of the Project

Responses
200 

SUCCESS

PUT
/4/projects/{projectId}/generalAccess
Request samples
Payload
Content type
application/json
Copy
{
"generalAccess": "RESTRICTED"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"attributeValues": 
[
{}
],
"autoSync": 
{
"nextScheduledSyncAt": "2023-12-31T21:00:00.000Z",
"schedule": "DAILY",
"timeZoneOffsetInHours": -5
},
"budget": 
{
"amount": 
{},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/budget"
},
"budgetMilestones": 
{
"self": "https://api.tempo.io/[...]"
},
"defaultBillingRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"defaultCostRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"editable": true,
"expenseActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"expenses": 
{
"self": "https://api.tempo.io/[...]"
},
"generalAccess": "RESTRICTED",
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"isTrackingRevenue": true,
"isUsingAccountRates": true,
"isUsingApproval": true,
"isUsingGlobalCostRates": true,
"laborActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"name": "Operation Bedlam",
"owner": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"rates": 
{
"self": "https://api.tempo.io/[...]"
},
"roles": 
{
"self": "https://api.tempo.io/[...]"
},
"scope": 
{
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/scope",
"source": 
{},
"tasks": 
{}
},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"status": "IN_PROGRESS",
"tags": 
[
"Q1",
"Marketing"
],
"timeframe": 
{
"self": "https://api.tempo.io/[...]"
},
"type": "MONETARY_BASED"
}
Update project owner

Transfers project ownership to another user. If the new owner was a collaborator, ownership is transferred to that user and former owner becomes collaborator. NOTE: the new owner must see the same number of issues as the current owner.

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

newOwnerId
required
	
string

User ID of the new owner (Jira account ID and Tempo user ID are accepted)

Responses
200 

SUCCESS

PUT
/4/projects/{projectId}/owner/{newOwnerId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"attributeValues": 
[
{}
],
"autoSync": 
{
"nextScheduledSyncAt": "2023-12-31T21:00:00.000Z",
"schedule": "DAILY",
"timeZoneOffsetInHours": -5
},
"budget": 
{
"amount": 
{},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/budget"
},
"budgetMilestones": 
{
"self": "https://api.tempo.io/[...]"
},
"defaultBillingRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"defaultCostRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"editable": true,
"expenseActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"expenses": 
{
"self": "https://api.tempo.io/[...]"
},
"generalAccess": "RESTRICTED",
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"isTrackingRevenue": true,
"isUsingAccountRates": true,
"isUsingApproval": true,
"isUsingGlobalCostRates": true,
"laborActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"name": "Operation Bedlam",
"owner": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"rates": 
{
"self": "https://api.tempo.io/[...]"
},
"roles": 
{
"self": "https://api.tempo.io/[...]"
},
"scope": 
{
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/scope",
"source": 
{},
"tasks": 
{}
},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"status": "IN_PROGRESS",
"tags": 
[
"Q1",
"Marketing"
],
"timeframe": 
{
"self": "https://api.tempo.io/[...]"
},
"type": "MONETARY_BASED"
}
Update project attribute value for a project
Financial Manager
Update a project attribute value.
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

projectAttributeId
required
	
string
REQUEST BODY SCHEMA: application/json
value
required
	
string

The project attribute value.

NOTE: The value is validated based on its project attribute type.

TEXT: Must be 256 characters or less.
NUMBER and AMOUNT: Must be a numeric value and not exceed JavaScript's Number.MAX_SAFE_INTEGER (9,007,199,254,740,991)
USER: Must be a Tempo User ID (UUID) or Jira Account ID (non-UUID).
DATE: Must be on format 'yyyy-MM-dd'.
SELECT LIST: Must be the Option ID (UUID) that exists in the Select List options.
Responses
200 

SUCCESS

PUT
/4/projects/{projectId}/project-attributes/{projectAttributeId}
Request samples
Payload
Content type
application/json
Copy
{
"value": "Updated value"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"attributeValues": 
[
{}
],
"autoSync": 
{
"nextScheduledSyncAt": "2023-12-31T21:00:00.000Z",
"schedule": "DAILY",
"timeZoneOffsetInHours": -5
},
"budget": 
{
"amount": 
{},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/budget"
},
"budgetMilestones": 
{
"self": "https://api.tempo.io/[...]"
},
"defaultBillingRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"defaultCostRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"editable": true,
"expenseActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"expenses": 
{
"self": "https://api.tempo.io/[...]"
},
"generalAccess": "RESTRICTED",
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"isTrackingRevenue": true,
"isUsingAccountRates": true,
"isUsingApproval": true,
"isUsingGlobalCostRates": true,
"laborActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"name": "Operation Bedlam",
"owner": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"rates": 
{
"self": "https://api.tempo.io/[...]"
},
"roles": 
{
"self": "https://api.tempo.io/[...]"
},
"scope": 
{
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/scope",
"source": 
{},
"tasks": 
{}
},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"status": "IN_PROGRESS",
"tags": 
[
"Q1",
"Marketing"
],
"timeframe": 
{
"self": "https://api.tempo.io/[...]"
},
"type": "MONETARY_BASED"
}
Update project default rates
Financial Manager
Updates the project's default rate.
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
REQUEST BODY SCHEMA: application/json
category
required
	
string
Enum: "BILLING" "COST"

The rate category.


value
required
	
number

The rate value. The project's currency is used.

Responses
200 

SUCCESS

PUT
/4/projects/{projectId}/rate
Request samples
Payload
Content type
application/json
Copy
{
"value": 100,
"category": "COST"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"attributeValues": 
[
{}
],
"autoSync": 
{
"nextScheduledSyncAt": "2023-12-31T21:00:00.000Z",
"schedule": "DAILY",
"timeZoneOffsetInHours": -5
},
"budget": 
{
"amount": 
{},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/budget"
},
"budgetMilestones": 
{
"self": "https://api.tempo.io/[...]"
},
"defaultBillingRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"defaultCostRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"editable": true,
"expenseActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"expenses": 
{
"self": "https://api.tempo.io/[...]"
},
"generalAccess": "RESTRICTED",
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"isTrackingRevenue": true,
"isUsingAccountRates": true,
"isUsingApproval": true,
"isUsingGlobalCostRates": true,
"laborActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"name": "Operation Bedlam",
"owner": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"rates": 
{
"self": "https://api.tempo.io/[...]"
},
"roles": 
{
"self": "https://api.tempo.io/[...]"
},
"scope": 
{
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/scope",
"source": 
{},
"tasks": 
{}
},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"status": "IN_PROGRESS",
"tags": 
[
"Q1",
"Marketing"
],
"timeframe": 
{
"self": "https://api.tempo.io/[...]"
},
"type": "MONETARY_BASED"
}
Update a project to use account rates or not.
Financial Manager
Updates a project to use or unset account rates. This is only applicable if the project is tracking revenue.
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
REQUEST BODY SCHEMA: application/json
usingAccountRates
required
	
boolean

Indicates whether the Project is using account rates

Responses
200 

SUCCESS

PUT
/4/projects/{projectId}/usingAccountRates
Request samples
Payload
Content type
application/json
Copy
{
"usingAccountRates": true
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"attributeValues": 
[
{}
],
"autoSync": 
{
"nextScheduledSyncAt": "2023-12-31T21:00:00.000Z",
"schedule": "DAILY",
"timeZoneOffsetInHours": -5
},
"budget": 
{
"amount": 
{},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/budget"
},
"budgetMilestones": 
{
"self": "https://api.tempo.io/[...]"
},
"defaultBillingRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"defaultCostRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"editable": true,
"expenseActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"expenses": 
{
"self": "https://api.tempo.io/[...]"
},
"generalAccess": "RESTRICTED",
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"isTrackingRevenue": true,
"isUsingAccountRates": true,
"isUsingApproval": true,
"isUsingGlobalCostRates": true,
"laborActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"name": "Operation Bedlam",
"owner": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"rates": 
{
"self": "https://api.tempo.io/[...]"
},
"roles": 
{
"self": "https://api.tempo.io/[...]"
},
"scope": 
{
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/scope",
"source": 
{},
"tasks": 
{}
},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"status": "IN_PROGRESS",
"tags": 
[
"Q1",
"Marketing"
],
"timeframe": 
{
"self": "https://api.tempo.io/[...]"
},
"type": "MONETARY_BASED"
}
Update a project flag for global cost rates
Financial Manager
Updates a project to whether use the global cost rates or not.
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
REQUEST BODY SCHEMA: application/json
usingGlobalCostRates
required
	
boolean

Indicates whether the Project is using global cost rates

Responses
200 

SUCCESS

PUT
/4/projects/{projectId}/usingGlobalCostRates
Request samples
Payload
Content type
application/json
Copy
{
"usingGlobalCostRates": true
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"attributeValues": 
[
{}
],
"autoSync": 
{
"nextScheduledSyncAt": "2023-12-31T21:00:00.000Z",
"schedule": "DAILY",
"timeZoneOffsetInHours": -5
},
"budget": 
{
"amount": 
{},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/budget"
},
"budgetMilestones": 
{
"self": "https://api.tempo.io/[...]"
},
"defaultBillingRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"defaultCostRate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"editable": true,
"expenseActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"expenses": 
{
"self": "https://api.tempo.io/[...]"
},
"generalAccess": "RESTRICTED",
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"isTrackingRevenue": true,
"isUsingAccountRates": true,
"isUsingApproval": true,
"isUsingGlobalCostRates": true,
"laborActuals": 
{
"self": "https://api.tempo.io/[...]"
},
"name": "Operation Bedlam",
"owner": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"rates": 
{
"self": "https://api.tempo.io/[...]"
},
"roles": 
{
"self": "https://api.tempo.io/[...]"
},
"scope": 
{
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/scope",
"source": 
{},
"tasks": 
{}
},
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"status": "IN_PROGRESS",
"tags": 
[
"Q1",
"Marketing"
],
"timeframe": 
{
"self": "https://api.tempo.io/[...]"
},
"type": "MONETARY_BASED"
}
Project Attributes

Project attributes related operations

List all project attributes
Financial Manager
Gets a list of all the project attributes
AUTHORIZATIONS:
bearerAuth
Responses
200 

SUCCESS

GET
/4/project-attributes
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"projectAttributes": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Create project attribute
Financial Manager
Create a project attribute
AUTHORIZATIONS:
bearerAuth
REQUEST BODY SCHEMA: application/json
name
required
	
string

The name of the project attribute


selectListOptions	
Array of objects (SelectListOptionApiPostInputBean)

A list of all the options for a project attribute of type Select List


type
required
	
string
Enum: "TEXT" "NUMBER" "DATE_PICKER" "SELECT_LIST" "AMOUNT" "USER_PICKER"

The type of the project attribute

Responses
200 

SUCCESS

POST
/4/project-attributes
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"name": "Country",
"type": "SELECT_LIST",
"selectListOptions": 
[
{},
{}
]
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"id": "6388c3bd-6e69-49c6-8724-c23408386d4c",
"name": "Country",
"selectListOptions": 
[
{}
],
"self": "https://api.tempo.io/4/project-attributes/6388c3bd-6e69-49c6-8724-c23408386d4c",
"type": "SELECT_LIST"
}
Delete project attribute
Financial Manager
Delete a project attribute by its id

NOTE: Existing project attribute values for all projects using it will also be removed.

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectAttributeId
required
	
string
Responses
204 

Project attribute has been successfully deleted

DELETE
/4/project-attributes/{projectAttributeId}
Update project attribute
Financial Manager
Update a project attribute given its id
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectAttributeId
required
	
string
REQUEST BODY SCHEMA: application/json
name
required
	
string

The name of the project attribute


selectListOptions	
Array of objects (SelectListOptionApiPutInputBean)

A list of all the options for a project attribute of type Select List.

NOTE: This field should be set and non-empty when updating a project attribute of type 'SELECT_LIST'.

Responses
200 

SUCCESS

PUT
/4/project-attributes/{projectAttributeId}
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"name": "Country",
"selectListOptions": 
[
{},
{}
]
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"id": "6388c3bd-6e69-49c6-8724-c23408386d4c",
"name": "Country",
"selectListOptions": 
[
{}
],
"self": "https://api.tempo.io/4/project-attributes/6388c3bd-6e69-49c6-8724-c23408386d4c",
"type": "SELECT_LIST"
}
Project Shares

Project shares related operations

Remove project shares

Revoke access of users to a project

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
QUERY PARAMETERS
collaboratorIds	
Array of strings unique

A set of user IDs (Jira account IDs and Tempo user IDs are accepted)

Responses
204 

Project shares have been successfully removed

DELETE
/4/projects/{projectId}/shares
List all project shares

Gets a list of all the project shares for a given project

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project

Responses
200 

SUCCESS

GET
/4/projects/{projectId}/shares
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"projectShares": 
[
{}
]
}
Add project shares

Share a project with users in bulk.

NOTE: The project shares in the response are only the ones that were just created.

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
REQUEST BODY SCHEMA: application/json
collaboratorIds
required
	
Array of strings unique

A set of user IDs (Jira account IDs and Tempo user IDs are accepted)


permissionType	
string
Enum: "VIEW" "EDIT"

The permission type for the selected collaborators. It defaults to EDIT if not provided

Responses
200 

SUCCESS

POST
/4/projects/{projectId}/shares
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"collaboratorIds": 
[
"611d7562a3e00f00687fd506",
"734k9556b4e99f45690pg787"
],
"permissionType": "EDIT"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"projectShares": 
[
{}
]
}
Report

Report related operations

Get a list of cost and revenue reports
Financial Manager
Get a paginated list of cost and revenue reports
AUTHORIZATIONS:
bearerAuth
QUERY PARAMETERS
offset	
integer <int32>

limit	
integer <int32>
Responses
200 

SUCCESS

GET
/4/reports/costs-and-revenues
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Create costs and revenues report
Financial Manager
Create a costs and revenues report
AUTHORIZATIONS:
bearerAuth
REQUEST BODY SCHEMA: application/json
dateFrom
required
	
string <date>

The start date of the Report in yyyy-MM-dd format


dateTo
required
	
string <date>

The end date of the Report in yyyy-MM-dd format


entity
required
	
object (CostRevenueReportEntityApiInputBean)

The entity of the Report


filterBy	
object (CostRevenueReportFilterByApiInputBean)

The filters for the Report


periodBreakdown
required
	
string
Enum: "WEEK" "MONTH" "QUARTER" "NONE"

The period breakdown of the Report


reportName	
string

The name of the Report


reportType
required
	
string
Enum: "ACTUAL_COST" "ACTUAL_REVENUE" "PLANNED_COST" "PLANNED_REVENUE"

The type of the Report

Responses
200 

SUCCESS

POST
/4/reports/costs-and-revenues
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"dateFrom": "yyyy-MM-dd",
"dateTo": "yyyy-MM-dd",
"entity": 
{
"id": "b1ff4d77-824c-4062-92f5-d57e8da6a7f2",
"type": "PROJECT"
},
"reportName": "New report",
"reportType": "ACTUAL_COST",
"filterBy": 
{
"accountIds": 
[],
"roleIds": 
[],
"accountCategoryIds": 
[],
"expenseCategories": 
[]
},
"periodBreakdown": "WEEK"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"data": 
{
"self": "https://api.tempo.io/[...]"
},
"dateFrom": "2019-08-24",
"dateTo": "2019-08-24",
"entity": 
{
"id": "b1ff4d77-824c-4062-92f5-d57e8da6a7f2",
"self": "https://api.tempo.io/projects/b1ff4d77-824c-4062-92f5-d57e8da6a7f2",
"type": "PROJECT"
},
"filterBy": 
{
"accountCategoryIds": 
[],
"accountIds": 
[],
"expenseCategories": 
[],
"roleIds": 
[]
},
"id": "d6d80273-6a74-480b-ae8f-2044f53bf0c3",
"owner": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"periodBreakdown": "WEEK",
"reportName": "New Report",
"reportType": "ACTUAL_COST",
"requestedAt": "2023-01-01T00:00:00.000Z",
"self": "https://api.tempo.io/reports/costs-and-revenues/d6d80273-6a74-480b-ae8f-2044f53bf0c3",
"status": "REQUESTED"
}
Delete a costs and revenues report
Financial Manager
Deletes a costs and revenues report given its id
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
reportId
required
	
string
Responses
204 

Cost and Revenue Report has been successfully deleted

DELETE
/4/reports/costs-and-revenues/{reportId}
Get a costs and revenues report
Financial Manager
Gets the basic details of a costs and revenues report given its id
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
reportId
required
	
string
Responses
200 

SUCCESS

GET
/4/reports/costs-and-revenues/{reportId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"data": 
{
"self": "https://api.tempo.io/[...]"
},
"dateFrom": "2019-08-24",
"dateTo": "2019-08-24",
"entity": 
{
"id": "b1ff4d77-824c-4062-92f5-d57e8da6a7f2",
"self": "https://api.tempo.io/projects/b1ff4d77-824c-4062-92f5-d57e8da6a7f2",
"type": "PROJECT"
},
"filterBy": 
{
"accountCategoryIds": 
[],
"accountIds": 
[],
"expenseCategories": 
[],
"roleIds": 
[]
},
"id": "d6d80273-6a74-480b-ae8f-2044f53bf0c3",
"owner": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
},
"periodBreakdown": "WEEK",
"reportName": "New Report",
"reportType": "ACTUAL_COST",
"requestedAt": "2023-01-01T00:00:00.000Z",
"self": "https://api.tempo.io/reports/costs-and-revenues/d6d80273-6a74-480b-ae8f-2044f53bf0c3",
"status": "REQUESTED"
}
Get Report generated data
Financial Manager
Get the Report generated data based on the Report id.

NOTE: Reports containing totals calculated from amounts with multiple currencies will have currency MIX

NOTE: Expenses with no category will be classified as UNCATEGORIZED

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
reportId
required
	
string
Responses
200 

SUCCESS

GET
/4/reports/costs-and-revenues/{reportId}/data
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"id": "675c407c-cf98-4a68-a1b4-d446812351c1",
"periods": 
[
{}
],
"report": 
{
"id": "d6d80273-6a74-480b-ae8f-2044f53bf0c3",
"self": "https://api.tempo.io/reports/costs-and-revenues/d6d80273-6a74-480b-ae8f-2044f53bf0c3"
},
"self": "https://api.tempo.io/reports/costs-and-revenues/675c407c-cf98-4a68-a1b4-d446812351c1/data",
"totalAmount": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalEffortInSeconds": 3600,
"totalExpense": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalFixedRevenue": 
{
"currencyCode": "USD",
"value": 1234.56
},
"totalLaborAmount": 
{
"currencyCode": "USD",
"value": 1234.56
}
}
Scope

Project scope related operations

Get project's scope

Gets the details of the project scope

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project

Responses
200 

SUCCESS

GET
/4/projects/{projectId}/scope
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/scope",
"source": 
{
"reference": "10001",
"title": "On-going Epics",
"type": "filter",
"url": "https://greenplan.atlassian.net/issues/?filter=10001"
},
"tasks": 
{
"self": "https://api.tempo.io/[...]"
}
}
List all tasks of the project's scope

Gets a paginated list of all Task

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

limit	
integer <int32>
Default: 50
Responses
200 

SUCCESS

GET
/4/projects/{projectId}/scope/tasks
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Team Member

Team Member related operations

Get project's team members with their rates
Financial Manager
Get project's team members with their rates
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project

Responses
200 

SUCCESS

GET
/4/projects/{projectId}/team-members/rates
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"rates": 
[
{}
]
}
Delete a single project user rate
Financial Manager
Delete a single project user rate by its id through API
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

rateId
required
	
string
Responses
204 

Rate has been successfully deleted

DELETE
/4/projects/{projectId}/team-members/rates/{rateId}
Update project team member rate value
Financial Manager
Update a team member rate value
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

rateId
required
	
string

Rate Id

REQUEST BODY SCHEMA: application/json
rate
required
	
number
Responses
200 

SUCCESS

PUT
/4/projects/{projectId}/team-members/rates/{rateId}
Request samples
Payload
Content type
application/json
Copy
{
"rate": 1234.56
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"effectiveDate": "2019-08-24",
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"rate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"source": "TEAM_MEMBER"
}
Get project's team members with their roles

Get project's team members (who has logged time) with their roles

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project

Responses
200 

SUCCESS

GET
/4/projects/{projectId}/team-members/roles
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"roles": 
[
{}
]
}
Update project's team member role

Set the role of a specific team member of a given project.

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

teamMemberId
required
	
string

User ID of the team member (Jira account ID and Tempo user ID are accepted)

REQUEST BODY SCHEMA: application/json
roleId	
integer <int32>

The id of the role

Responses
200 

SUCCESS

PUT
/4/projects/{projectId}/team-members/roles/{teamMemberId}
Request samples
Payload
Content type
application/json
Copy
{
"roleId": 1
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"role": 
{
"id": 1,
"self": "https://api.tempo.io/[...]"
},
"teamMember": 
{
"id": "598cda20-0076-4b89-a9f4-37b3ce1e688c",
"userLink": 
{}
}
}
Delete project team member rates
Financial Manager
Delete all rates set on a team member
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

teamMemberId
required
	
string

User ID of the team member (Jira account ID and Tempo user ID are accepted)

Responses
204 

Team member rates have been deleted successfully

DELETE
/4/projects/{projectId}/team-members/{teamMemberId}/rates
Create project team member rate
Financial Manager
Create a team member rate
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

teamMemberId
required
	
string

User ID of the team member (Jira account ID and Tempo user ID are accepted)

REQUEST BODY SCHEMA: application/json
category	
string
Enum: "BILLING" "COST"

Is it a Cost or a Billing rate


effectiveDate	
string <date>

Effective date of the rate in yyyy-MM-dd format


rate
required
	
number
Responses
200 

SUCCESS

POST
/4/projects/{projectId}/team-members/{teamMemberId}/rates
Request samples
Payload
Content type
application/json
Copy
{
"rate": 1234.56,
"category": "COST",
"effectiveDate": "yyyy-MM-dd"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"effectiveDate": "2019-08-24",
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"rate": 
{
"currencyCode": "USD",
"value": 1234.56
},
"source": "TEAM_MEMBER"
}
Timeframe

Project timeframe related operations

Delete project's timeframe

Deletes the timeframe of a Project.

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
Responses
204 

Timeframe has been successfully deleted

DELETE
/4/projects/{projectId}/timeframe
Get project's timeframe
        Gets the fixed or calculated timeframe of a Project:
        * If the project has a fixed timeframe, it is returned.
        * If the project has worklogs or expenses, the timeframe is calculated from those,
        using the date of the earliest worklog/expense as the "from" date and the latest
        worklog/expense as the "to" date. However the "to" date will never extend beyond today's date.
        (the user can provide this date, if it differs from what the server considers to be "today".)
        * If none of the above applies, "204 No Content" is returned.
        

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string

A unique identifier for a Project

QUERY PARAMETERS
to	
string

This param is deprecated and no longer used. System time is used to determine the timeframe of a calculated project.

Responses
200 

SUCCESS

204 

Project has no timeframe, worklogs, or expenses

GET
/4/projects/{projectId}/timeframe
Response samples
200
Content type
application/json
Copy
{
"endDate": "2019-08-24",
"isCalculated": true,
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/timeframe",
"startDate": "2019-08-24"
}
Update project's timeframe

Updates the timeframe of a Project.

AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
projectId
required
	
string
REQUEST BODY SCHEMA: application/json
endDate
required
	
string <date>

The end date of the Timeframe in yyyy-MM-dd format


startDate
required
	
string <date>

The start date of the Timeframe in yyyy-MM-dd format

Responses
200 

SUCCESS

204 

Project has no timeframe, worklogs, or expenses

PUT
/4/projects/{projectId}/timeframe
Request samples
Payload
Content type
application/json
Copy
{
"startDate": "yyyy-MM-dd",
"endDate": "yyyy-MM-dd"
}
Response samples
200
Content type
application/json
Copy
{
"endDate": "2019-08-24",
"isCalculated": true,
"self": "https://api.tempo.io/4/projects/dd442e10-75d1-4b80-9be3-9d1293ad23b9/timeframe",
"startDate": "2019-08-24"
}
Billing Rates Table

Billing rates table related operations

Get list of billing rates tables
Financial Manager
Gets a paginated list of billing rates tables. To retrieve the rates of a Billing Rates Table, you can refer to Billing Rates Table API
AUTHORIZATIONS:
bearerAuth
QUERY PARAMETERS
offset	
integer <int32>
Default: 0

limit	
integer <int32>
Default: 50

accountKey	
string

Tempo Account key associated with a billing rates table.

Responses
200 

SUCCESS

GET
/4/billing-rates-tables
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Create billing rates table
Financial Manager
Create a billing rates table. Note that default billing rates will be applied to newly created billing rates table.
AUTHORIZATIONS:
bearerAuth
REQUEST BODY SCHEMA: application/json
name
required
	
string

The name of the Billing Rates Table

Responses
200 

SUCCESS

POST
/4/billing-rates-tables
Request samples
Payload
Content type
application/json
Copy
{
"name": "A Billing Rates Table"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"name": "A Billing Rates Table",
"rates": 
[
{}
],
"self": "https://api.tempo.io/4/billing-rates-tables/dd442e10-75d1-4b80-9be3-9d1293ad23b9"
}
Delete billing rates table
Financial Manager
Delete a billing rates table
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
billingRatesTableId
required
	
string

The unique ID of an existing Billing Rates Table. The Default billing rates table cannot be deleted.

Responses
204 

Billing Rates Table has been successfully deleted

DELETE
/4/billing-rates-tables/{billingRatesTableId}
Get a billing rates table
Financial Manager
Gets the details of a single instance of a Billing Rates Table with its rates.
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
billingRatesTableId
required
	
string

The unique ID of an existing Billing Rates Table. Set to default to get the Default Billing Rates Table.

Responses
200 

SUCCESS

GET
/4/billing-rates-tables/{billingRatesTableId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"id": "dd442e10-75d1-4b80-9be3-9d1293ad23b9",
"name": "A Billing Rates Table",
"rates": 
[
{}
],
"self": "https://api.tempo.io/4/billing-rates-tables/dd442e10-75d1-4b80-9be3-9d1293ad23b9"
}
Sets the billing rates table of an account
Financial Manager
Set the billing rates table of an account to one of the existing billing rates tables.
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
billingRatesTableId
required
	
string

The unique ID of an existing Billing Rates Table. Set to default to set the Default Billing Rates Table to the specified account.

REQUEST BODY SCHEMA: application/json
accountKey
required
	
string

Account key to which associate the specified billing rate table.

Responses
204 

Billing rates table has been successfully assigned to account

PUT
/4/billing-rates-tables/{billingRatesTableId}/account
Request samples
Payload
Content type
application/json
Copy
{
"accountKey": "ACC1234"
}
Sets role rates of a billing rates table
Financial Manager
Set role rates of an existing billing rates table. Note: The changes will asynchronously be applied to related projects
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
billingRatesTableId
required
	
string

The unique ID of an existing Billing Rates Table. Set to default to set the Default Billing Rates Table to the specified account. Use null roleId to set the Billing Rates Table's default rate.

REQUEST BODY SCHEMA: application/json
update
required
	
Array of objects (BillingRatesTableRatesForRoleApiInputBean)

A list of updated rates by role

Responses
200 

Rates have been successfully updated on Billing rates table. The rates changes are propagated to projects asynchronously.

PUT
/4/billing-rates-tables/{billingRatesTableId}/rates
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"update": 
[
{},
{}
]
}
Response samples
200
Content type
application/json
Copy
{
"updateId": "d6d80273-6a74-480b-ae8f-2044f53bf0c3"
}
Global Rates

Global rates related operations

List global cost or billing rates for each role
Financial Manager
Gets a list of global cost or billing rates for each role
AUTHORIZATIONS:
bearerAuth
QUERY PARAMETERS
rateCategory
required
	
string
Enum: "BILLING" "COST"

The category of rates.

Responses
200 

SUCCESS

GET
/4/global-rates/by-role
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"results": 
[
{}
]
}
List global cost or billing rates by role
Financial Manager
Gets a list of global cost or billing rates by role
AUTHORIZATIONS:
bearerAuth
PATH PARAMETERS
roleId
required
	
integer <int32>
QUERY PARAMETERS
rateCategory
required
	
string
Enum: "BILLING" "COST"

The category of rates.

Responses
200 

SUCCESS

204 

Specified role has no associated rates

GET
/4/global-rates/by-role/{roleId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"rates": 
[
{}
],
"roleId": 5
}
Set Global Cost Rates By Role In Bulk
Financial Manager
Sets the Global Cost Rates by role in bulk. For any given role, the input must contain exactly one rate without effectiveDate, which serves as the initial rate.Thereafter, the input can contain any number of rates with a unique effectiveDate. It will then replace all rates of that role with the specified ones. Note: The changes will asynchronously be applied to related projects.
AUTHORIZATIONS:
bearerAuth
REQUEST BODY SCHEMA: application/json
update
required
	
Array of objects (GlobalCostRatesForRoleApiInputBean)

A list of all updated rates by role

Responses
200 

SUCCESS

PUT
/4/global-rates/cost/by-role
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"update": 
[
{},
{}
]
}
Response samples
200
Content type
application/json
Copy
{
"updateId": "d6d80273-6a74-480b-ae8f-2044f53bf0c3"
}
Flex Plans

Flex Plan operations

Create Flex Plan

Creates a new Flex Plan using the provided input and returns the newly created Flex Plan

REQUEST BODY SCHEMA: application/json
description	
string

endDate	
string

issueId	
integer <int64>

plannedSeconds	
integer <int64> >= 0

startDate	
string

teamId	
integer <int32>

title	
string
Responses
200 

SUCCESS

400 

Flex Plan cannot be created due to invalid request

POST
/4/flex-plans
Request samples
Payload
Content type
application/json
Copy
{
"description": "string",
"endDate": "string",
"issueId": 0,
"plannedSeconds": 0,
"startDate": "string",
"teamId": 0,
"title": "string"
}
Response samples
200
Content type
application/json
Copy
{
"description": "My Flex Plan Description",
"endDate": "2022-05-17T00:00:00.000Z",
"id": 598,
"issueId": 598,
"plannedSeconds": 3600,
"self": "https://api.tempo.io/[...]",
"startDate": "2022-05-17T00:00:00.000Z",
"teamId": 598,
"title": "My Flex Plan"
}
Search Flex Plans

Searches for Flex Plans using the provided input and returns the search results

REQUEST BODY SCHEMA: application/json
flexPlanIds	
Array of integers <int32> [ items <int32 > ]

from	
string

includeUnassigned	
boolean

issueIds	
Array of integers <int64> [ items <int64 > ]

teamIds	
Array of integers <int32> [ items <int32 > ]

to	
string
Responses
200 

SUCCESS

400 

Flex Plans cannot be searched due to invalid request

POST
/4/flex-plans/search
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"flexPlanIds": 
[
0
],
"from": "string",
"includeUnassigned": true,
"issueIds": 
[
0
],
"teamIds": 
[
0
],
"to": "string"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"flexPlans": 
[
{}
],
"issueIds": 
[
0
]
}
Delete Flex Plan

Deletes an existing Flex Plan for the given id

PATH PARAMETERS
id
required
	
integer <int32>

An id that uniquely identifies the Flex Plan

Responses
204 

SUCCESS

DELETE
/4/flex-plans/{id}
Get Flex Plan by ID

Fetches a Flex Plan by its ID and returns the corresponding Flex Plan

PATH PARAMETERS
id
required
	
integer <int32>

An id that uniquely identifies the Flex Plan

Responses
200 

SUCCESS

404 

Flex Plan not found

GET
/4/flex-plans/{id}
Response samples
200
Content type
application/json
Copy
{
"description": "My Flex Plan Description",
"endDate": "2022-05-17T00:00:00.000Z",
"id": 598,
"issueId": 598,
"plannedSeconds": 3600,
"self": "https://api.tempo.io/[...]",
"startDate": "2022-05-17T00:00:00.000Z",
"teamId": 598,
"title": "My Flex Plan"
}
Update FlexPlan

Updates an existing Flex Plan for the given id using the provided input and returns the updated Flex Plan

PATH PARAMETERS
id
required
	
integer <int32>

An id that uniquely identifies the Plan

REQUEST BODY SCHEMA: application/json
description	
string

endDate	
string

issueId	
integer <int64>

plannedSeconds	
integer <int64> >= 0

startDate	
string

teamId	
integer <int32>

title	
string
Responses
200 

SUCCESS

400 

Plan cannot be updated due to invalid request

PUT
/4/flex-plans/{id}
Request samples
Payload
Content type
application/json
Copy
{
"description": "string",
"endDate": "string",
"issueId": 0,
"plannedSeconds": 0,
"startDate": "string",
"teamId": 0,
"title": "string"
}
Response samples
200
Content type
application/json
Copy
{
"description": "My Flex Plan Description",
"endDate": "2022-05-17T00:00:00.000Z",
"id": 598,
"issueId": 598,
"plannedSeconds": 3600,
"self": "https://api.tempo.io/[...]",
"startDate": "2022-05-17T00:00:00.000Z",
"teamId": 598,
"title": "My Flex Plan"
}
Generic Resources

Generic resource related operations

Create Generic Resource

Creates a new Generic Resource using the provided input and returns the newly created Generic Resource

REQUEST BODY SCHEMA: application/json
name
required
	
string

The name of the Generic Resource

Responses
200 

SUCCESS

400 

Generic resource cannot be created due to invalid request

POST
/4/generic-resources
Request samples
Payload
Content type
application/json
Copy
{
"name": "Backend Developer"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"createdAt": "2022-02-22T15:09:00.000Z",
"createdBy": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"id": 7,
"name": "Backend Developer",
"self": "https://api.tempo.io/[...]",
"updatedAt": "2022-02-25T12:13:00.000Z",
"updatedBy": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
}
}
Search Generic Resources

Retrieves a list of existing Generic Resources that matches the search parameters

REQUEST BODY SCHEMA: application/json
ids	
Array of integers <int32> [ items <int32 > ]

A list of Generic Resource ids


limit	
integer <int32>

Maximum number of results on each page


offset	
integer <int32>

Number of skipped results


query	
string

A query to be used for string matching against name of Generic Resources

Responses
200 

SUCCESS

POST
/4/generic-resources/search
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"ids": 
[
1,
2
],
"limit": 50,
"offset": 0,
"query": "java"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
]
}
Delete Generic Resource

Deletes an existing Generic Resource for the given id

PATH PARAMETERS
id
required
	
integer <int32>

An id that uniquely identifies the Generic Resource

Responses
204 

SUCCESS

404 

Generic resource not found

DELETE
/4/generic-resources/{id}
Retrieve Generic Resource

Retrieves an existing Generic Resource for the given id

PATH PARAMETERS
id
required
	
integer <int32>

An id that uniquely identifies the Generic Resource

Responses
200 

SUCCESS

404 

Generic resource not found

GET
/4/generic-resources/{id}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"createdAt": "2022-02-22T15:09:00.000Z",
"createdBy": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"id": 7,
"name": "Backend Developer",
"self": "https://api.tempo.io/[...]",
"updatedAt": "2022-02-25T12:13:00.000Z",
"updatedBy": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
}
}
Update Generic Resource

Updates an existing Generic Resource for the given id using the provided input and returns the updated Generic Resource

PATH PARAMETERS
id
required
	
integer <int32>

An id that uniquely identifies the Generic Resource

REQUEST BODY SCHEMA: application/json
name
required
	
string

The name of the Generic Resource

Responses
200 

SUCCESS

400 

Generic resource cannot be updated due to invalid request

404 

Generic resource not found

PUT
/4/generic-resources/{id}
Request samples
Payload
Content type
application/json
Copy
{
"name": "Backend Developer"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"createdAt": "2022-02-22T15:09:00.000Z",
"createdBy": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"id": 7,
"name": "Backend Developer",
"self": "https://api.tempo.io/[...]",
"updatedAt": "2022-02-25T12:13:00.000Z",
"updatedBy": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
}
}
Generic Resource Team Members

Generic Resource Team Member operations

Retrieve Generic Resources for Team

Retrieves a list of all Generic Resources that are members of the given Team

PATH PARAMETERS
teamId
required
	
integer <int32>

An id that uniquely identifies the Team from which generic resources are to be retrieved

Responses
200 

SUCCESS

404 

Team not found

GET
/4/teams/{teamId}/generic-resources
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"count": 3,
"members": 
[
{}
],
"self": "https://api.tempo.io/[...]",
"team": 
{
"id": 12345,
"self": "https://api.tempo.io/[...]"
}
}
Add Generic Resource to Team

Adds Generic Resource to the given Team

PATH PARAMETERS
teamId
required
	
integer <int32>

An id that uniquely identifies the Team which the generic resource is to be a member of

REQUEST BODY SCHEMA: application/json
genericResourceId
required
	
integer <int32>

The id of the Generic Resource itself

Responses
200 

SUCCESS

400 

Generic resource cannot be added to team to invalid request

404 

Team not found

POST
/4/teams/{teamId}/generic-resources
Request samples
Payload
Content type
application/json
Copy
{
"genericResourceId": 7
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"assignedToTeamAt": "2022-02-22T15:09:00.000Z",
"assignedToTeamBy": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"member": 
{
"id": 7,
"name": "Backend Developer",
"self": "https://api.tempo.io/[...]"
},
"self": "https://api.tempo.io/[...]",
"team": 
{
"id": 12345,
"self": "https://api.tempo.io/[...]"
}
}
Delete Generic Resource from Team

Deletes an existing Generic Resource from the given Team

PATH PARAMETERS
teamId
required
	
integer <int32>

An id that uniquely identifies the Team


resourceId
required
	
integer <int32>

An id that uniquely identifies the Generic Resource

Responses
204 

SUCCESS

404 

Team not found

DELETE
/4/teams/{teamId}/generic-resources/{resourceId}
Retrieve Generic Resource for Team

Retrieves an existing Generic Resource from the given Team

PATH PARAMETERS
teamId
required
	
integer <int32>

An id that uniquely identifies the Team


resourceId
required
	
integer <int32>

An id that uniquely identifies the Generic Resource

Responses
200 

SUCCESS

404 

Team not found

GET
/4/teams/{teamId}/generic-resources/{resourceId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"assignedToTeamAt": "2022-02-22T15:09:00.000Z",
"assignedToTeamBy": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"member": 
{
"id": 7,
"name": "Backend Developer",
"self": "https://api.tempo.io/[...]"
},
"self": "https://api.tempo.io/[...]",
"team": 
{
"id": 12345,
"self": "https://api.tempo.io/[...]"
}
}
Plans

Plan operations

Retrieve Plans

Retrieves a list of existing Plans (Resource Allocations) that matches the given search parameters

QUERY PARAMETERS
accountIds	
Array of strings

Ids of the user assignees you want to search plans for.


assigneeTypes	
Array of strings
Items Enum: "USER" "GENERIC"

Types of the assignees you want to search plans for.


from
required
	
string

Retrieve plans starting with this date.


genericResourceIds	
Array of integers <int32> [ items <int32 > ]

Ids of the generic resources you want to search plans for.


limit	
integer <int32> <= 5000

Maximum number of results on each page.


offset	
integer <int32>

Number of skipped results.


planIds	
Array of integers <int32> [ items <int32 > ]

Ids of the plans you want to search for.


planItemIds	
Array of integers <int32> [ items <int32 > ]

Ids of the items you want to search plans for.


planItemTypes	
Array of strings
Items Enum: "ISSUE" "PROJECT"

Types of the items you want to search plans for.


plannedTimeBreakdown	
Array of strings
Items Enum: "DAILY" "PERIOD"

Defines how detailed you would like to see the breakdown of the planned time for each Plan.


to
required
	
string

Retrieve plans that ends up to and including this date.


updatedFrom	
string

Retrieve plans that have been updated from this date.

Responses
200 

SUCCESS

GET
/4/plans
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Create Plan

Creates a new Plan (Resource Allocation) using the provided input and returns the newly created Plan

REQUEST BODY SCHEMA: application/json
assigneeId
required
	
string

The id of the Assignee for the Plan.


assigneeType
required
	
string
Enum: "USER" "GENERIC"

The type of the Assignee for the Plan.


description	
string

A description containing details of the Plan.


effortPersistenceType	
string
Enum: "SECONDS_PER_DAY" "TOTAL_SECONDS"

Persistance type of the Plan.


endDate
required
	
string

The ending date of the Plan.


includeNonWorkingDays	
boolean

Boolean value that informs whether non-working days are included in the Plan.


planApproval	
object (PlanApprovalInput)

Reference to an approval linked to the Plan.


planItemId
required
	
string

The id of the Plan Item for the Plan.


planItemType
required
	
string
Enum: "ISSUE" "PROJECT"

The type of the Plan Item for the Plan.


plannedSeconds	
integer <int64> >= 1

The amount of seconds that will be invested on the Plan.


plannedSecondsPerDay	
integer <int64> >= 1

The amount of seconds that will be invested daily on the Plan.


recurrenceEndDate	
string

End date for the recurrence of the Plan.


rule	
string
Enum: "NEVER" "WEEKLY" "BI_WEEKLY" "MONTHLY"

Recurrence rule of the Plan.


startDate
required
	
string

The starting date of the Plan.


startTime	
string^([0-1]?[0-9]|2[0-3])(:[0-5][0-9])$

The start time of the Plan.

Responses
200 

SUCCESS

400 

Plan cannot be created due to invalid request

POST
/4/plans
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"assigneeId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"assigneeType": "USER",
"description": "I will do some tests on this task tomorrow",
"effortPersistenceType": "SECONDS_PER_DAY",
"endDate": "2022-05-17T00:00:00.000Z",
"includeNonWorkingDays": true,
"planApproval": 
{
"reviewerId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"status": "APPROVED"
},
"planItemId": "598",
"planItemType": "ISSUE",
"plannedSeconds": 28800,
"plannedSecondsPerDay": 28800,
"recurrenceEndDate": "2020-05-17T00:00:00.000Z",
"rule": "WEEKLY",
"startDate": "2022-05-17T00:00:00.000Z",
"startTime": "08:15"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"assignee": 
{
"id": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]",
"type": "USER"
},
"createdAt": "2022-04-06T16:11:18.000Z",
"description": "I will do some tests on this task tomorrow",
"effortPersistenceType": "28800",
"endDate": "2022-05-17T00:00:00.000Z",
"id": 1,
"includeNonWorkingDays": true,
"planApproval": 
{
"actor": 
{},
"requester": 
{},
"reviewer": 
{},
"status": "APPROVED"
},
"planCreatorId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"planItem": 
{
"id": "598",
"self": "https://api.tempo.io/[...]",
"type": "ISSUE"
},
"plannedSecondsPerDay": 28800,
"plannedTime": 
{
"days": 
{},
"metadata": 
{},
"periods": 
{}
},
"recurrenceEndDate": "2020-05-17T00:00:00.000Z",
"rule": "WEEKLY",
"self": "https://api.tempo.io/[...]",
"startDate": "2022-05-17T00:00:00.000Z",
"startTime": "08:15",
"syncSource": "NONE",
"totalPlannedSeconds": 28800,
"totalPlannedSecondsInScope": 28800,
"updatedAt": "2022-06-03T15:19:09.000Z"
}
Retrieve Plans (Resource Allocations) for Generic Resource

Retrieves a list of existing Plans (Resource Allocations) for the given Generic Resource

PATH PARAMETERS
genericResourceId
required
	
integer <int32>

Id of the generic resource you want to search plans for

QUERY PARAMETERS
plannedTimeBreakdown	
Array of strings

Defines how detailed you would like to see the breakdown of the planned time for each plan.You can add one or both of these values as query params [DAILY, PERIOD] to see more detailed breakdown of planned time.


from	
string

Retrieve plans starting with this date


to	
string

Retrieve plans that ends up to and including this date


updatedFrom	
string

Retrieve plans that have been updated from this date

Responses
200 

SUCCESS

GET
/4/plans/generic-resource/{genericResourceId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Search Plans

Retrieves a list of existing Plans (Resource Allocations) that matches the given search parameters

REQUEST BODY SCHEMA: application/json
accountIds	
Array of strings

Ids of the user assignees you want to search plans for.


assigneeTypes	
Array of strings
Items Enum: "USER" "GENERIC"

Types of the assignees you want to search plans for.


from
required
	
string

Retrieve plans starting with this date.


genericResourceIds	
Array of integers <int32> [ items <int32 > ]

Ids of the generic resources you want to search plans for.


limit	
integer <int32> <= 5000

Maximum number of results on each page.


offset	
integer <int32>

Number of skipped results.


planIds	
Array of integers <int32> [ items <int32 > ]

Ids of the plans you want to search for.


planItemIds	
Array of integers <int32> [ items <int32 > ]

Ids of the items you want to search plans for.


planItemTypes	
Array of strings
Items Enum: "ISSUE" "PROJECT"

Types of the items you want to search plans for.


plannedTimeBreakdown	
Array of strings
Items Enum: "DAILY" "PERIOD"

Defines how detailed you would like to see the breakdown of the planned time for each Plan.


to
required
	
string

Retrieve plans that ends up to and including this date.


updatedFrom	
string

Retrieve plans that have been updated from this date.

Responses
200 

SUCCESS

POST
/4/plans/search
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"accountIds": 
[
"123456:01234567-89ab-cdef-0123-456789abcdef",
"123456:01234567-89ab-cdef-0123-456789abcdef"
],
"assigneeTypes": 
[
"USER",
"GENERIC"
],
"from": "2022-05-17T00:00:00.000Z",
"genericResourceIds": 
[
"1",
"2"
],
"limit": 50,
"offset": 0,
"planIds": 
[
"1",
"2"
],
"planItemIds": 
[
"10000",
"10001"
],
"planItemTypes": 
[
"ISSUE",
"PROJECT"
],
"plannedTimeBreakdown": 
[
"DAILY",
"PERIOD"
],
"to": "2022-05-17T00:00:00.000Z",
"updatedFrom": "2022-05-17T00:00:00.000Z"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"offset": 0
},
"results": 
[
{}
]
}
Retrieve Plans (Resource Allocations) for User

Retrieves a list of Plans (Resource Allocations) for the given User

PATH PARAMETERS
accountId
required
	
string

Id of the user you want to search plans for

QUERY PARAMETERS
plannedTimeBreakdown	
Array of strings

Defines how detailed you would like to see the breakdown of the planned time for each plan.You can add one or both of these values as query params [DAILY, PERIOD] to see more detailed breakdown of planned time.


from	
string

Retrieve plans starting with this date


to	
string

Retrieve plans that ends up to and including this date


updatedFrom	
string

Retrieve plans that have been updated from this date

Responses
200 

SUCCESS

GET
/4/plans/user/{accountId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Delete Plan

Deletes an existing Plan (Resource Allocation) for the given id

PATH PARAMETERS
id
required
	
integer <int32>

An id that uniquely identifies the Plan

Responses
204 

SUCCESS

404 

Plan not found

DELETE
/4/plans/{id}
Retrieve Plan

Retrieves an existing Plan (Resource Allocation) for the given id

PATH PARAMETERS
id
required
	
integer <int32>

An id that uniquely identifies the Plan

QUERY PARAMETERS
from	
string

to	
string
Responses
200 

SUCCESS

404 

Plan not found

GET
/4/plans/{id}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"assignee": 
{
"id": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]",
"type": "USER"
},
"createdAt": "2022-04-06T16:11:18.000Z",
"description": "I will do some tests on this task tomorrow",
"effortPersistenceType": "28800",
"endDate": "2022-05-17T00:00:00.000Z",
"id": 1,
"includeNonWorkingDays": true,
"planApproval": 
{
"actor": 
{},
"requester": 
{},
"reviewer": 
{},
"status": "APPROVED"
},
"planCreatorId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"planItem": 
{
"id": "598",
"self": "https://api.tempo.io/[...]",
"type": "ISSUE"
},
"plannedSecondsPerDay": 28800,
"plannedTime": 
{
"days": 
{},
"metadata": 
{},
"periods": 
{}
},
"recurrenceEndDate": "2020-05-17T00:00:00.000Z",
"rule": "WEEKLY",
"self": "https://api.tempo.io/[...]",
"startDate": "2022-05-17T00:00:00.000Z",
"startTime": "08:15",
"syncSource": "NONE",
"totalPlannedSeconds": 28800,
"totalPlannedSecondsInScope": 28800,
"updatedAt": "2022-06-03T15:19:09.000Z"
}
Update Plan

Updates an existing Plan (Resource Allocation) for the given id using the provided input and returns the updated Plan

PATH PARAMETERS
id
required
	
integer <int32>

An id that uniquely identifies the Plan

REQUEST BODY SCHEMA: application/json
assigneeId
required
	
string

The id of the Assignee for the Plan.


assigneeType
required
	
string
Enum: "USER" "GENERIC"

The type of the Assignee for the Plan.


description	
string

A description containing details of the Plan.


effortPersistenceType	
string
Enum: "SECONDS_PER_DAY" "TOTAL_SECONDS"

Persistance type of the Plan.


endDate
required
	
string

The ending date of the Plan.


includeNonWorkingDays	
boolean

Boolean value that informs whether non-working days are included in the Plan.


planApproval	
object (PlanApprovalInput)

Reference to an approval linked to the Plan.


planItemId
required
	
string

The id of the Plan Item for the Plan.


planItemType
required
	
string
Enum: "ISSUE" "PROJECT"

The type of the Plan Item for the Plan.


plannedSeconds	
integer <int64> >= 1

The amount of seconds that will be invested on the Plan.


plannedSecondsPerDay	
integer <int64> >= 1

The amount of seconds that will be invested daily on the Plan.


recurrenceEndDate	
string

End date for the recurrence of the Plan.


rule	
string
Enum: "NEVER" "WEEKLY" "BI_WEEKLY" "MONTHLY"

Recurrence rule of the Plan.


startDate
required
	
string

The starting date of the Plan.


startTime	
string^([0-1]?[0-9]|2[0-3])(:[0-5][0-9])$

The start time of the Plan.

Responses
200 

SUCCESS

400 

Plan cannot be updated due to invalid request

404 

Plan not found

PUT
/4/plans/{id}
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"assigneeId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"assigneeType": "USER",
"description": "I will do some tests on this task tomorrow",
"effortPersistenceType": "SECONDS_PER_DAY",
"endDate": "2022-05-17T00:00:00.000Z",
"includeNonWorkingDays": true,
"planApproval": 
{
"reviewerId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"status": "APPROVED"
},
"planItemId": "598",
"planItemType": "ISSUE",
"plannedSeconds": 28800,
"plannedSecondsPerDay": 28800,
"recurrenceEndDate": "2020-05-17T00:00:00.000Z",
"rule": "WEEKLY",
"startDate": "2022-05-17T00:00:00.000Z",
"startTime": "08:15"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"assignee": 
{
"id": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]",
"type": "USER"
},
"createdAt": "2022-04-06T16:11:18.000Z",
"description": "I will do some tests on this task tomorrow",
"effortPersistenceType": "28800",
"endDate": "2022-05-17T00:00:00.000Z",
"id": 1,
"includeNonWorkingDays": true,
"planApproval": 
{
"actor": 
{},
"requester": 
{},
"reviewer": 
{},
"status": "APPROVED"
},
"planCreatorId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"planItem": 
{
"id": "598",
"self": "https://api.tempo.io/[...]",
"type": "ISSUE"
},
"plannedSecondsPerDay": 28800,
"plannedTime": 
{
"days": 
{},
"metadata": 
{},
"periods": 
{}
},
"recurrenceEndDate": "2020-05-17T00:00:00.000Z",
"rule": "WEEKLY",
"self": "https://api.tempo.io/[...]",
"startDate": "2022-05-17T00:00:00.000Z",
"startTime": "08:15",
"syncSource": "NONE",
"totalPlannedSeconds": 28800,
"totalPlannedSecondsInScope": 28800,
"updatedAt": "2022-06-03T15:19:09.000Z"
}
Delete Day From Plan

Deletes a day from an existing Plan (Resource Allocation) for the given id

PATH PARAMETERS
id
required
	
integer <int32>

An id that uniquely identifies the Plan


day
required
	
string

The day to delete in format yyyy-MM-dd

Responses
200 

SUCCESS

404 

Plan not found

DELETE
/4/plans/{id}/partial/{day}
Update Day In Plan

Updates a day in an existing Plan (Resource Allocation) for the given id

PATH PARAMETERS
id
required
	
integer <int32>

An id that uniquely identifies the Plan


day
required
	
string

The day to update in format yyyy-MM-dd

REQUEST BODY SCHEMA: application/json
assigneeId
required
	
string

The id of the Assignee for the Plan.


assigneeType
required
	
string
Enum: "USER" "GENERIC"

The type of the Assignee for the Plan.


description	
string

A description containing details of the Plan.


effortPersistenceType	
string
Enum: "SECONDS_PER_DAY" "TOTAL_SECONDS"

Persistance type of the Plan.


endDate
required
	
string

The ending date of the Plan.


includeNonWorkingDays	
boolean

Boolean value that informs whether non-working days are included in the Plan.


planApproval	
object (PlanApprovalInput)

Reference to an approval linked to the Plan.


planItemId
required
	
string

The id of the Plan Item for the Plan.


planItemType
required
	
string
Enum: "ISSUE" "PROJECT"

The type of the Plan Item for the Plan.


plannedSeconds	
integer <int64> >= 1

The amount of seconds that will be invested on the Plan.


plannedSecondsPerDay	
integer <int64> >= 1

The amount of seconds that will be invested daily on the Plan.


recurrenceEndDate	
string

End date for the recurrence of the Plan.


rule	
string
Enum: "NEVER" "WEEKLY" "BI_WEEKLY" "MONTHLY"

Recurrence rule of the Plan.


startDate
required
	
string

The starting date of the Plan.


startTime	
string^([0-1]?[0-9]|2[0-3])(:[0-5][0-9])$

The start time of the Plan.

Responses
200 

SUCCESS

404 

Plan not found

PUT
/4/plans/{id}/partial/{day}
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"assigneeId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"assigneeType": "USER",
"description": "I will do some tests on this task tomorrow",
"effortPersistenceType": "SECONDS_PER_DAY",
"endDate": "2022-05-17T00:00:00.000Z",
"includeNonWorkingDays": true,
"planApproval": 
{
"reviewerId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"status": "APPROVED"
},
"planItemId": "598",
"planItemType": "ISSUE",
"plannedSeconds": 28800,
"plannedSecondsPerDay": 28800,
"recurrenceEndDate": "2020-05-17T00:00:00.000Z",
"rule": "WEEKLY",
"startDate": "2022-05-17T00:00:00.000Z",
"startTime": "08:15"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"assignee": 
{
"id": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]",
"type": "USER"
},
"createdAt": "2022-04-06T16:11:18.000Z",
"description": "I will do some tests on this task tomorrow",
"effortPersistenceType": "28800",
"endDate": "2022-05-17T00:00:00.000Z",
"id": 1,
"includeNonWorkingDays": true,
"planApproval": 
{
"actor": 
{},
"requester": 
{},
"reviewer": 
{},
"status": "APPROVED"
},
"planCreatorId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"planItem": 
{
"id": "598",
"self": "https://api.tempo.io/[...]",
"type": "ISSUE"
},
"plannedSecondsPerDay": 28800,
"plannedTime": 
{
"days": 
{},
"metadata": 
{},
"periods": 
{}
},
"recurrenceEndDate": "2020-05-17T00:00:00.000Z",
"rule": "WEEKLY",
"self": "https://api.tempo.io/[...]",
"startDate": "2022-05-17T00:00:00.000Z",
"startTime": "08:15",
"syncSource": "NONE",
"totalPlannedSeconds": 28800,
"totalPlannedSecondsInScope": 28800,
"updatedAt": "2022-06-03T15:19:09.000Z"
}
Permission Roles

Permission role related operations

Retrieve Permission Roles

Retrieves a list of the Permission Roles for a given Team if ID is informed, or retrieves a list of all Permission Roles

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response


teamId	
string

An ID that uniquely identifies the Team for which you want to retrieve Permissions

Responses
200 

SUCCESS

GET
/4/permission-roles
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Create Permission Role

Creates a new editable Permission Role using the provided input and returns the newly created Permission Role

REQUEST BODY SCHEMA: application/json
accessEntityIds	
Array of integers <int32> [ items <int32 > ]

A list of access entity ids


accessType
required
	
string
Enum: "TEAM" "GLOBAL"

The type of the PermissionRole which can be TEAM or GLOBAL. GLOBAL permission roles don't have entities.


name
required
	
string

Name of the permission role


permissionKeys	
Array of strings

A list of permission keys


permittedAccountIds	
Array of strings

A list of permitted account ids

Responses
200 

SUCCESS

400 

Team with specified id does not exist.

POST
/4/permission-roles
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"accessEntityIds": 
[
1
],
"accessType": "TEAM",
"name": "The Role",
"permissionKeys": 
[
"permissions.worklog.view"
],
"permittedAccountIds": "jira-account-id"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"accessEntities": 
[
{}
],
"accessType": "TEAM",
"editable": false,
"id": 6,
"name": "The Role",
"permissions": 
[
{}
],
"permittedUsers": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Retrieve Global Permission Roles

Retrieves the Global Permission Roles

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

Responses
200 

SUCCESS

GET
/4/permission-roles/global
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Delete Permission Role

Deletes an editable Permission Role.

PATH PARAMETERS
id
required
	
integer <int32>
Responses
204 

SUCCESS

404 

Permission role cannot be found in the system.

DELETE
/4/permission-roles/{id}
Retrieve Permission Role

Retrieves a Permission Role for the given id

PATH PARAMETERS
id
required
	
string

ID of the permission role

Responses
200 

SUCCESS

404 

Permission role cannot be found in the system.

GET
/4/permission-roles/{id}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"accessEntities": 
[
{}
],
"accessType": "TEAM",
"editable": false,
"id": 6,
"name": "The Role",
"permissions": 
[
{}
],
"permittedUsers": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Update Permission Role

Updates a Permission Role for the given id using the provided input and returns the updated Permission Role. Only editable roles can be updated.

PATH PARAMETERS
id
required
	
integer <int32>
REQUEST BODY SCHEMA: application/json
accessEntityIds	
Array of integers <int32> [ items <int32 > ]

A list of access entity ids


accessType
required
	
string
Enum: "TEAM" "GLOBAL"

The type of the PermissionRole which can be TEAM or GLOBAL. GLOBAL permission roles don't have entities.


name
required
	
string

Name of the permission role


permissionKeys	
Array of strings

A list of permission keys


permittedAccountIds	
Array of strings

A list of permitted account ids

Responses
200 

SUCCESS

400 

Team with specified id does not exist.

404 

Permission role cannot be found in the system.

PUT
/4/permission-roles/{id}
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"accessEntityIds": 
[
1
],
"accessType": "TEAM",
"name": "The Role",
"permissionKeys": 
[
"permissions.worklog.view"
],
"permittedAccountIds": "jira-account-id"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"accessEntities": 
[
{}
],
"accessType": "TEAM",
"editable": false,
"id": 6,
"name": "The Role",
"permissions": 
[
{}
],
"permittedUsers": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Program

Program operations

Retrieve all Programs

Retrieves a list of all Programs

Responses
200 

SUCCESS

GET
/4/programs
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Create Program

Creates a new Program using the provided input and returns the newly created Program

REQUEST BODY SCHEMA: application/json
managerAccountId	
string

The key of the Manager Account


name
required
	
string

Name of the Program


teamIds	
Array of integers <int32> [ items <int32 > ]

The list of keys of Teams associated to the Program

Responses
200 

SUCCESS

400 

Program cannot be created due to invalid request

POST
/4/programs
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"managerAccountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"name": "Program: new Season",
"teamIds": 
[
1,
4,
6,
8
]
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"id": 100201,
"manager": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"name": "Program: new Season",
"self": "https://api.tempo.io/[...]",
"teams": 
{
"self": "https://api.tempo.io/[...]",
"values": 
[]
}
}
Delete Program

Deletes an existing Program for the given id

PATH PARAMETERS
id
required
	
string
Responses
204 

SUCCESS

400 

Program cannot be deleted due to invalid request

404 

Program not found

DELETE
/4/programs/{id}
Retrieve Program

Retrieves an existing Program for the given id

PATH PARAMETERS
id
required
	
string
Responses
200 

SUCCESS

404 

Program not found

GET
/4/programs/{id}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"id": 100201,
"manager": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"name": "Program: new Season",
"self": "https://api.tempo.io/[...]",
"teams": 
{
"self": "https://api.tempo.io/[...]",
"values": 
[]
}
}
Update Program

Updates an existing Program for the given id using the provided input and returns the updated Program

PATH PARAMETERS
id
required
	
string
REQUEST BODY SCHEMA: application/json
managerAccountId	
string

The key of the Manager Account


name
required
	
string

Name of the Program


teamIds	
Array of integers <int32> [ items <int32 > ]

The list of keys of Teams associated to the Program

Responses
200 

SUCCESS

400 

Program cannot be updated due to invalid request

404 

Program not found

PUT
/4/programs/{id}
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"managerAccountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"name": "Program: new Season",
"teamIds": 
[
1,
4,
6,
8
]
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"id": 100201,
"manager": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"name": "Program: new Season",
"self": "https://api.tempo.io/[...]",
"teams": 
{
"self": "https://api.tempo.io/[...]",
"values": 
[]
}
}
Retrieve Teams associated with Program

Retrieves a list of Teams associated with the given Program

PATH PARAMETERS
id
required
	
string
Responses
200 

SUCCESS

400 

Team associated with program cannot be retrieved due to invalid request

404 

Team not found

GET
/4/programs/{id}/teams
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Roles

Roles operations

Retrieve Roles

Retrieves a list of all Roles

Responses
200 

SUCCESS

GET
/4/roles
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Create new Role

Creates a new Role and returns the newly created Role

REQUEST BODY SCHEMA: application/json
name
required
	
string

The name of the Role

Responses
200 

SUCCESS

400 

Role cannot be created because the name already exists

POST
/4/roles
Request samples
Payload
Content type
application/json
Copy
{
"name": "Developer"
}
Response samples
200
Content type
application/json
Copy
{
"default": true,
"id": 126,
"name": "Developer",
"self": "https://api.tempo.io/[...]"
}
Retrieve default Role

Retrieves the default Role

Responses
200 

SUCCESS

GET
/4/roles/default
Response samples
200
Content type
application/json
Copy
{
"default": true,
"id": 126,
"name": "Developer",
"self": "https://api.tempo.io/[...]"
}
Delete Role

Deletes an existing Role for the given id

PATH PARAMETERS
id
required
	
string

An id that uniquely identifies the Role

Responses
204 

Role has been successfully deleted

DELETE
/4/roles/{id}
Retrieve Role by id

Retrieves an existing Role for the given id

PATH PARAMETERS
id
required
	
string

An id that uniquely identifies the Role

Responses
200 

SUCCESS

404 

Role cannot be found in the system

GET
/4/roles/{id}
Response samples
200
Content type
application/json
Copy
{
"default": true,
"id": 126,
"name": "Developer",
"self": "https://api.tempo.io/[...]"
}
Update Role

Updates an existing Role for the given id with the given parameters

PATH PARAMETERS
id
required
	
string

An id that uniquely identifies the Role

REQUEST BODY SCHEMA: application/json
name
required
	
string

The name of the Role

Responses
200 

SUCCESS

400 

Role cannot be updated because the name already exists

PUT
/4/roles/{id}
Request samples
Payload
Content type
application/json
Copy
{
"name": "Developer"
}
Response samples
200
Content type
application/json
Copy
{
"default": true,
"id": 126,
"name": "Developer",
"self": "https://api.tempo.io/[...]"
}
Skills

Skills operations

Retrieve Skills

Retrieves a list of existing Skills that matches the given search parameters

QUERY PARAMETERS
id	
Array of integers <int32> [ items <int32 > ]

Ids of the Skills you want to retrieve


query	
string

A query to be used for string matching against name of Skills


offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

Responses
200 

SUCCESS

GET
/4/skills
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Create Skill

Creates a new Skill using the provided input and returns the newly created Skill

REQUEST BODY SCHEMA: application/json
name
required
	
string

Name of the Skill

Responses
200 

SUCCESS

400 

Skill cannot be created due to invalid request

POST
/4/skills
Request samples
Payload
Content type
application/json
Copy
{
"name": "Java"
}
Response samples
200
Content type
application/json
Copy
{
"id": 9,
"name": "Java",
"self": "https://api.tempo.io/[...]"
}
Delete Skill

Deletes an existing Skill for the given id

PATH PARAMETERS
id
required
	
integer <int32>

An id that uniquely identifies the Skill

Responses
204 

SUCCESS

404 

Skill not found

DELETE
/4/skills/{id}
Retrieve Skill

Retrieves an existing Skill for the given id

PATH PARAMETERS
id
required
	
integer <int32>

An id that uniquely identifies the Skill

Responses
200 

SUCCESS

404 

Skill not found

GET
/4/skills/{id}
Response samples
200
Content type
application/json
Copy
{
"id": 9,
"name": "Java",
"self": "https://api.tempo.io/[...]"
}
Update Skill

Updates an existing Skill for the given id using the provided input and returns the updated Skill

PATH PARAMETERS
id
required
	
integer <int32>

An id that uniquely identifies the Skill

REQUEST BODY SCHEMA: application/json
name
required
	
string

Name of the Skill

Responses
200 

SUCCESS

400 

Skill cannot be updated due to invalid request

404 

Skill not found

PUT
/4/skills/{id}
Request samples
Payload
Content type
application/json
Copy
{
"name": "Java"
}
Response samples
200
Content type
application/json
Copy
{
"id": 9,
"name": "Java",
"self": "https://api.tempo.io/[...]"
}
Skill Assignments

Skill assignment operations

Assign Skills for Resource

Assigns a list of Skills for the given Resource using the provided input and returns a list of the Resource's assigned Skills.

REQUEST BODY SCHEMA: application/json
assigneeId
required
	
string

A set of characters that uniquely identify a resource


assigneeType
required
	
string
Enum: "USER" "GENERIC"

A string that identify the resource type


skillIds	
Array of integers <int32> [ items <int32 > ]

A list of Skill ids

Responses
200 

SUCCESS

400 

Skill cannot be assigned due to invalid request

POST
/4/skill-assignments
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"assigneeId": "123456:01234567-89ab-cdef-0123-456789abcdef | 5",
"assigneeType": "USER",
"skillIds": 
[
1,
2,
3,
4,
5
]
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
[
{
"id": 9,
"name": "Java",
"self": "https://api.tempo.io/[...]"
}
]
Replace skills for Resource

Replaces Skills for the given Resource using the provided input and returns a list of the Resource's assigned Skills.

REQUEST BODY SCHEMA: application/json
assigneeId
required
	
string

A set of characters that uniquely identify a resource


assigneeType
required
	
string
Enum: "USER" "GENERIC"

A string that identify the resource type


skillIds	
Array of integers <int32> [ items <int32 > ]

A list of Skill ids

Responses
200 

SUCCESS

400 

Skill cannot be replaced due to invalid request

POST
/4/skill-assignments/replace
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"assigneeId": "123456:01234567-89ab-cdef-0123-456789abcdef | 5",
"assigneeType": "USER",
"skillIds": 
[
1,
2,
3,
4,
5
]
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
[
{
"id": 9,
"name": "Java",
"self": "https://api.tempo.io/[...]"
}
]
Retrieve Skill Assignments for Resource

Retrieves a list of Skill Assignments for the given Resource

PATH PARAMETERS
assigneeId
required
	
string

A string that uniquely identifies the resource


assigneeType
required
	
string

A string that identifies the resource type, which can be USER or GENERIC

Responses
200 

SUCCESS

400 

Skill cannot be found due to invalid request

GET
/4/skill-assignments/{assigneeId}/{assigneeType}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
[
{
"id": 9,
"name": "Java",
"self": "https://api.tempo.io/[...]"
}
]
Delete skill of the Resource

Deletes an existing Skill for the given Resource

PATH PARAMETERS
assigneeId
required
	
string

A string that uniquely identifies the resource


assigneeType
required
	
string

A string that identifies the resource type, which can be USER or GENERIC


skillId
required
	
integer <int32>

An id that uniquely identify the Skill

Responses
204 

SUCCESS

DELETE
/4/skill-assignments/{assigneeId}/{assigneeType}/{skillId}
Team

Team operations

Retrieve Teams

Retrieves a list of all existing Teams

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query.


limit	
integer <int32>
Default: 50

Limit the number of elements on the response.


teamMembers	
Array of strings

Jira user account ids of the user team members you want to get teams for.


name	
string

The name of the teams you are looking for.

Responses
200 

SUCCESS

GET
/4/teams
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Create Team

Creates a new Team using the provided input and returns the newly created Team

REQUEST BODY SCHEMA: application/json
administrative	
boolean
Default: false

Determine if this is an administrative team


leadAccountId	
string^[a-zA-Z0-9-:_.]*$

The id of Lead Account related to the Team


name
required
	
string

The Team name


programId	
integer <int32> >= 1

The id of program related to the Team


public	
boolean
Default: true

Determine if this entity could be public


summary	
string

The summary of the Team

Responses
200 

SUCCESS

400 

Team cannot be created for some reasons

POST
/4/teams
Request samples
Payload
Content type
application/json
Copy
{
"administrative": false,
"leadAccountId": "string",
"name": "string",
"programId": 132,
"public": true,
"summary": "This team was created to help different areas of the company"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"administrative": true,
"id": 123,
"lead": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"links": 
{
"self": "https://api.tempo.io/[...]"
},
"members": 
{
"self": "https://api.tempo.io/[...]"
},
"name": "Team Alpha",
"permissions": 
{
"self": "https://api.tempo.io/[...]"
},
"program": 
{
"id": 100201,
"name": "Program new Customer",
"self": "https://api.tempo.io/[...]"
},
"self": "https://api.tempo.io/[...]",
"summary": "Team created to solve the challenges in the company"
}
Delete Team

Deletes the Team for the given id

PATH PARAMETERS
id
required
	
string

An id that uniquely identifies the Team.

Responses
204 

SUCCESS

400 

Team cannot be deleted due to invalid request

404 

Team not found

DELETE
/4/teams/{id}
Retrieve Team

Retrieves an existing Team for the given id

PATH PARAMETERS
id
required
	
string

An id that uniquely identifies the Team.

Responses
200 

SUCCESS

404 

Team not found.

GET
/4/teams/{id}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"administrative": true,
"id": 123,
"lead": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"links": 
{
"self": "https://api.tempo.io/[...]"
},
"members": 
{
"self": "https://api.tempo.io/[...]"
},
"name": "Team Alpha",
"permissions": 
{
"self": "https://api.tempo.io/[...]"
},
"program": 
{
"id": 100201,
"name": "Program new Customer",
"self": "https://api.tempo.io/[...]"
},
"self": "https://api.tempo.io/[...]",
"summary": "Team created to solve the challenges in the company"
}
Update Team

Updates the Team for the given id using the provided input, and returns the updated Team

PATH PARAMETERS
id
required
	
string

An id that uniquely identifies the Team.

REQUEST BODY SCHEMA: application/json
administrative	
boolean
Default: false

Determine if this is an administrative team


leadAccountId	
string^[a-zA-Z0-9-:_.]*$

The id of Lead Account related to the Team


name
required
	
string

The Team name


programId	
integer <int32> >= 1

The id of program related to the Team


public	
boolean
Default: true

Determine if this entity could be public


summary	
string

The summary of the Team

Responses
200 

SUCCESS

400 

Team cannot be updated for some reasons

404 

Team cannot be found in the system

PUT
/4/teams/{id}
Request samples
Payload
Content type
application/json
Copy
{
"administrative": false,
"leadAccountId": "string",
"name": "string",
"programId": 132,
"public": true,
"summary": "This team was created to help different areas of the company"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"administrative": true,
"id": 123,
"lead": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"links": 
{
"self": "https://api.tempo.io/[...]"
},
"members": 
{
"self": "https://api.tempo.io/[...]"
},
"name": "Team Alpha",
"permissions": 
{
"self": "https://api.tempo.io/[...]"
},
"program": 
{
"id": 100201,
"name": "Program new Customer",
"self": "https://api.tempo.io/[...]"
},
"self": "https://api.tempo.io/[...]",
"summary": "Team created to solve the challenges in the company"
}
Retrieve Links from Team

Retrieves a list of all Links for the given Team

PATH PARAMETERS
id
required
	
string

An id that uniquely identifies the Team.

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query.


limit	
integer <int32>
Default: 50

Limit the number of elements on the response.

Responses
200 

SUCCESS

404 

Team cannot be found in the system

GET
/4/teams/{id}/links
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Retrieve active team members

Retrieves a list of users with their active membership. Meaning that they are currently (today) members of this team via said membership

PATH PARAMETERS
id
required
	
integer <int32>
Responses
200 

SUCCESS

404 

Team cannot be found in the system

GET
/4/teams/{id}/members
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Team Links

Team link operations

Create Team Link

Creates a new Team Link using the provided input and returns the newly created Team Link

REQUEST BODY SCHEMA: application/json
scopeId
required
	
integer <int32> >= 1

The id of the scope


scopeType
required
	
string
Value: "PROJECT"

The type of scope of the Team Link


teamId
required
	
integer <int32> >= 1

The id of the Team Link

Responses
200 

SUCCESS

400 

Team-link cannot be created for some reasons

POST
/4/team-links
Request samples
Payload
Content type
application/json
Copy
{
"scopeId": 1,
"scopeType": "PROJECT",
"teamId": 1
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"id": 100201,
"scope": 
{
"id": 100201,
"self": "https://api.tempo.io/[...]",
"type": "BOARD"
},
"self": "https://api.tempo.io/[...]",
"team": 
{
"administrative": true,
"id": 123,
"lead": 
{},
"links": 
{},
"members": 
{},
"name": "Team Alpha",
"permissions": 
{},
"program": 
{},
"self": "https://api.tempo.io/[...]",
"summary": "Team created to solve the challenges in the company"
}
}
Retrieve Team Link by Project

Retrieves an existing Team Link for the given Project id

PATH PARAMETERS
id
required
	
integer <int64>
Responses
200 

SUCCESS

GET
/4/team-links/project/{id}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Delete Team Link

Deletes an existing Team Link for the given id

PATH PARAMETERS
linkId
required
	
string
Responses
204 

Team-link has been successfully deleted

404 

Team-link cannot be found in the system

DELETE
/4/team-links/{linkId}
Retrieve Team Link

Retrieves an existing Team Link for the given id

PATH PARAMETERS
linkId
required
	
string
Responses
200 

SUCCESS

404 

Team-link cannot be found in the system

GET
/4/team-links/{linkId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"id": 100201,
"scope": 
{
"id": 100201,
"self": "https://api.tempo.io/[...]",
"type": "BOARD"
},
"self": "https://api.tempo.io/[...]",
"team": 
{
"administrative": true,
"id": 123,
"lead": 
{},
"links": 
{},
"members": 
{},
"name": "Team Alpha",
"permissions": 
{},
"program": 
{},
"self": "https://api.tempo.io/[...]",
"summary": "Team created to solve the challenges in the company"
}
}
Team Memberships

Team membership operations

Create Membership

Creates a new Membership using the provided input and returns the newly created Membership

REQUEST BODY SCHEMA: application/json
accountId
required
	
string

The account id of the Member


commitmentPercent	
integer <int32> [ 0 .. 100 ]

The percentage of the Commitment


from	
string <date>

The start date of the Membership


roleId	
integer <int32>

The role id of the Member


teamId
required
	
integer <int32>

The id of the Team


to	
string <date>

The end date of the Membership


useInclusiveEndDate	
boolean

For backwards compatibility reasons the to (end date) field is exclusive, meaning that it represents the day after the last day of the membership. Set this param to true if you want to use an inclusive end date instead.

Responses
200 

SUCCESS

400 

Membership cannot be created for some reasons

POST
/4/team-memberships
Request samples
Payload
Content type
application/json
Copy
{
"accountId": "1111aaaa2222bbbb3333cccc",
"commitmentPercent": 50,
"from": "2019-08-24",
"roleId": 2,
"teamId": 1,
"to": "2019-08-24",
"useInclusiveEndDate": true
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"commitmentPercent": 50,
"from": "2019-08-24",
"id": 2,
"inclusiveTo": "2019-08-24",
"member": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"role": 
{
"id": 2,
"name": "Developer",
"self": "https://api.tempo.io/[...]"
},
"self": "https://api.tempo.io/[...]",
"team": 
{
"id": 12345,
"name": "Team new adventure",
"self": "https://api.tempo.io/[...]"
},
"to": "2019-08-24"
}
Search Memberships

Retrieves a list of existing Team Memberships that matches the search parameters.Inactive memberships will also be included in the list.Only teams that the user can view will be accounted.

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

REQUEST BODY SCHEMA: application/json
accountIds	
Array of strings

A list of Jira account ids


roleIds	
Array of integers <int32> [ items <int32 > ]

A list of Tempo role ids


teamIds	
Array of integers <int32> [ items <int32 > ]

A list of Tempo team ids

Responses
200 

SUCCESS

POST
/4/team-memberships/search
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"accountIds": 
[
"123456:01234567-89ab-cdef-0123-456789abcdef"
],
"roleIds": 
[
1,
2
],
"teamIds": 
[
10,
20
]
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Retrieve Memberships for Team

Retrieves a list of all the Memberships for the given Team

PATH PARAMETERS
teamId
required
	
string
Responses
200 

SUCCESS

404 

Team cannot be found in the system

GET
/4/team-memberships/team/{teamId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Delete Membership

Deletes an existing Membership for the given id

PATH PARAMETERS
id
required
	
string
Responses
204 

SUCCESS

404 

Membership cannot be found in the system

DELETE
/4/team-memberships/{id}
Retrieve Membership

Retrieves an existing Membership for the given id

PATH PARAMETERS
id
required
	
string
Responses
200 

SUCCESS

404 

Membership cannot be found in the system

GET
/4/team-memberships/{id}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"commitmentPercent": 50,
"from": "2019-08-24",
"id": 2,
"inclusiveTo": "2019-08-24",
"member": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"role": 
{
"id": 2,
"name": "Developer",
"self": "https://api.tempo.io/[...]"
},
"self": "https://api.tempo.io/[...]",
"team": 
{
"id": 12345,
"name": "Team new adventure",
"self": "https://api.tempo.io/[...]"
},
"to": "2019-08-24"
}
Update Membership

Updates an existing Membership using the provided input and returns the updated Membership

PATH PARAMETERS
id
required
	
string
REQUEST BODY SCHEMA: application/json
commitmentPercent	
integer <int32> [ 0 .. 100 ]

from	
string <date>

The start date of the Membership


roleId	
integer <int32>

The Role Id of the Membership


to	
string <date>

The end date of the Membership


useInclusiveEndDate	
boolean

For backwards compatibility reasons the to (end date) field is exclusive, meaning that it represents the day after the last day of the membership. Set this param to true if you want to use an inclusive end date instead.

Responses
200 

SUCCESS

400 

Membership cannot be updated for some reasons

404 

Membership cannot be found in the system

PUT
/4/team-memberships/{id}
Request samples
Payload
Content type
application/json
Copy
{
"commitmentPercent": 100,
"from": "2019-08-24",
"roleId": 2,
"to": "2019-08-24",
"useInclusiveEndDate": true
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"commitmentPercent": 50,
"from": "2019-08-24",
"id": 2,
"inclusiveTo": "2019-08-24",
"member": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"role": 
{
"id": 2,
"name": "Developer",
"self": "https://api.tempo.io/[...]"
},
"self": "https://api.tempo.io/[...]",
"team": 
{
"id": 12345,
"name": "Team new adventure",
"self": "https://api.tempo.io/[...]"
},
"to": "2019-08-24"
}
Overview

Webhooks are a way for applications to receive real-time updates from other systems or applications. Instead of constantly polling for changes or updates, webhooks allow an application to be notified automatically when something changes, reducing the load on both systems and enabling faster response times.

With webhooks, you can register listeners and get notified when an event occurs. A listener is an exposed endpoint URL of an application that receives POST requests with relevant data pertaining to an event. The receiving application can then process this data in real-time and take appropriate action based on the information received. Some common use cases for webhooks include:

Integrations: Webhooks can be used to integrate different systems or applications, allowing data to be shared in real-time and enabling workflows that depend on the data being updated immediately.
Automation: Webhooks can be used to trigger automated workflows based on events that occur in another system or application, enabling more efficient and effective business processes.
Using Tempo Webhooks

You can use webhooks by creating a subscription, which is a way to say you want to listen for a specific event when it happens. Once you've created and validated your subscription, you'll gain the ability to receive these events and integrate them into a service you create.

You can create a subscription by using the POST /webhooks/subscriptions request, as in the following example:

  curl --location 'https://api.tempo.io/4/webhooks/subscriptions' \
  --header 'Accept: application/json' \
  --header 'Content-Type: application/json' \
  --header 'Authorization: Bearer $MY_TOKEN' \
  --data '{
    "url": "https://example.com/your/backend/service",
    "name": "Optional name",
    "description": "Optional description",
    "event": "worklog.created"
  }'


To find out how to obtain an access token, please consult the Authentication documentation.

Rules for creating a Subscription:

You must create a subscription for each event you want to listen to
Subscriptions always use HTTPS
You can not have two subscriptions pointing to the same event and url
You can only have 10 subscriptions
The URL you specify for the subscription must be a valid URL that points to a REST service and must be set up to receive requests sent to it
Subscription verification

Before a webhook subscription can begin receiving requests, Tempo first verifies if the webhook URL provided intends to receive notifications. Newly created webhook subscriptions are inactive until verification is successful.

To verify a webhook subscription, Tempo will make a GET request to your endpoint. This is the only GET request made to your endpoint. The request will contain a query param called randomString:

GET https://example.com/your/backend/service?randomString=SomeLongValue


You must send a text/plain answer with this challenge value, as a response.

HTTP/1.1 200 OK
Content-Type: text/plain

SomeLongValue


Please note that you'll only receive actual events after the validation is complete.

Supported events

Please refer to Create Subscription -> Callbacks -> Webhook -> payload for more details.

This section lists the supported events, and provides a payload example for each:

Plan events

created: plan.created

{
  "eventId": "e5aa362f-4b0d-4953-afa2-abc6bb379974",
  "eventType": "plan.created",
  "payload": {
    "assignee": {
      "id": "636e810fc9b26a8d857d461c",
      "type": "USER"
    },
    "description": "My awesome plan for May 8",
    "endDate": "2023-05-07",
    "id": 17,
    "includeNonWorkingDays": false,
    "planItem": {
      "id": "10000",
      "type": "ISSUE"
    },
    "plannedSecondsPerDay": 3600,
    "plannedTime": {
      "days": {
        "count": 1,
        "values": [
          {
            "date": "2023-05-08",
            "plannedSeconds": 3600
          }
        ]
      }
    },
    "rule": "NEVER",
    "startDate": "2023-05-07"
  }
}


updated: plan.updated

{
  "eventId": "ff069181-580a-4eba-8d9b-e1a48e6cde15",
  "eventType": "plan.updated",
  "payload": {
    "original": {
      "assignee": {
        "id": "ab95dfd2f6da41e89b6335cba2be19c6",
        "type": "USER"
      },
      "description": "My awesome plan for May 8 morning",
      "endDate": "2023-05-07",
      "id": 17,
      "includeNonWorkingDays": false,
      "planItem": {
        "id": "10000",
        "type": "ISSUE"
      },
      "plannedSecondsPerDay": 14400,
      "plannedTime": {
        "days": {
          "count": 1,
          "values": [
            {
              "date": "2023-05-08",
              "plannedSeconds": 14400
            }
          ]
        }
      },
      "rule": "NEVER",
      "startDate": "2023-05-08"
    },
    "changed": {
      "assignee": {
        "id": "636e810fc9b26a8d857d461c",
        "type": "USER"
      },
      "description": "My awesome plan for May 8 morning that has been updated",
      "endDate": "2023-05-07",
      "id": 17,
      "includeNonWorkingDays": false,
      "planItem": {
        "id": "10005",
        "type": "ISSUE"
      },
      "plannedSecondsPerDay": 14400,
      "plannedTime": {
        "days": {
          "count": 1,
          "values": [
            {
              "date": "2023-05-08",
              "plannedSeconds": 14400
            }
          ]
        }
      },
      "rule": "NEVER",
      "startDate": "2023-05-07"
    }
  }
}


deleted: plan.deleted

{
  "eventId": "19b352f9-2998-40c5-96ef-cf9eb3c00ebc",
  "eventType": "plan.deleted",
  "payload": {
    "assignee": {
      "id": "636e810fc9b26a8d857d461c",
      "type": "USER"
    },
    "description": "My awesome plan for May 8 morning",
    "endDate": "2023-05-07",
    "id": 17,
    "includeNonWorkingDays": false,
    "planItem": {
      "id": "10000",
      "type": "ISSUE"
    },
    "plannedSecondsPerDay": 14400,
    "plannedTime": {},
    "rule": "NEVER",
    "startDate": "2023-05-07"
  }
}

Team plan events (flex plans)

created: flexplan.created

{
  "eventId": "a9021efd-70e9-4d66-9fdb-c37ce899431c",
  "eventType": "flexplan.created",
  "payload": {
    "description": "Plan for team 1 to work on issue 10000",
    "endDate": "2023-05-09",
    "id": 12,
    "issueId": 10000,
    "plannedSeconds": 36000,
    "startDate": "2023-05-07",
    "teamId": 1,
    "title": "Team Work makes the Dream Work"
  }
}


updated: flexplan.updated

{
  "eventId": "a9bfcdc3-1840-487b-b6b2-56681345159f",
  "eventType": "flexplan.updated",
  "payload": {
    "original": {
      "description": "Plan for team 1 to work on issue 10000",
      "endDate": "2023-05-09",
      "id": 12,
      "issueId": 10000,
      "plannedSeconds": 36000,
      "startDate": "2023-05-07",
      "teamId": 1,
      "title": "Team Work makes the Dream Work"
    },
    "changed": {
      "description": "Plan for team 2 to work on issue 10000",
      "endDate": "2023-05-10",
      "id": 12,
      "issueId": 10000,
      "plannedSeconds": 43200,
      "startDate": "2023-05-07",
      "teamId": 2,
      "title": "Team Work makes the Dream Work"
    }
  }
}


deleted: flexplan.deleted

{
  "eventId": "70b11053-e91a-44d5-b2cf-3fd97e322f5c",
  "eventType": "flexplan.deleted",
  "payload": {
      "description": "Plan for team 1 to work on issue 10000",
      "endDate": "2023-05-10",
      "id": 12,
      "issueId": 10000,
      "plannedSeconds": 43200,
      "startDate": "2023-05-07",
      "teamId": 1,
      "title": "Team Work makes the Dream Work"
  }
}

Team events
created: team.created
{
"eventId": "a7950bed-bf83-4c6f-b724-bdd40a857833",
"eventType": "team.created",
"payload": {
  "id": 5,
  "name": "New Team",
  "lead": {
    "ecosystemId": "712020:33c2f5ef-5063-4f26-9f7c-21de949205bd",
    "tempoId": "b71301b6-12c7-4843-a969-3147be7b6b2d"
  },
  "programId": 2,
  "isAdministrative": false
}
}

updated: team.updated
{
"eventId": "5bd6997a-ea3b-422d-be19-4e84b5b223e0",
"eventType": "team.updated",
"payload": {
  "original": {
    "id": 3,
    "name": "My Team",
    "lead": {
      "ecosystemId": "712020:33c2f5ef-5063-4f26-9f7c-21de949205bd",
      "tempoId": "b71301b6-12c7-4843-a969-3147be7b6b2d"
    },
    "programId": 3,
    "isAdministrative": false
  },
  "changed": {
    "id": 3,
    "name": "My Updated Team",
    "lead": {
      "ecosystemId": "712020:33c2f5ef-5063-4f26-9f7c-21de949205bd",
      "tempoId": "b71301b6-12c7-4843-a969-3147be7b6b2d"
    },
    "programId": 3,
    "isAdministrative": false
  }
}
}

deleted: team.deleted
{
"eventId": "632a18c3-c232-4d23-9095-cdc8cbe7cbd8",
"eventType": "team.deleted",
"payload": {
  "id": 3,
  "name": "My Team",
  "lead": {
    "ecosystemId": "712020:33c2f5ef-5063-4f26-9f7c-21de949205bd",
    "tempoId": "b71301b6-12c7-4843-a969-3147be7b6b2d"
  },
  "programId": 3,
  "isAdministrative": false
}
}

Worklog events
created: worklog.created
{
  "eventId": "e39e27c7-dcdb-4178-83e4-57254cf13bfa",
  "eventType": "worklog.created",
  "payload": {
    "author": {
      "accountId": "636e810fc9b26a8d857d461c"
    },
    "updater": {
      "accountId": "636e810fc9b26a8d857d461c"
    },
    "billableSeconds": 3600,
    "createdAt": "2023-05-09T10:44:38.173Z",
    "description": "Description",
    "issue": {
      "id": 10001
    },
    "startDate": "2023-05-01",
    "startTime": "16:00:00",
    "tempoWorklogId": 37,
    "timeSpentSeconds": 3600,
    "updatedAt": "2023-05-09T10:44:38.173Z"
  }
}

updated: worklog.updated
{
  "eventId": "fbed7401-64d0-43a2-ae65-7cc8379affc5",
  "eventType": "worklog.updated",
  "payload": {
    "author": {
      "accountId": "636e810fc9b26a8d857d461c"
    },
    "updater": {
      "accountId": "636e810fc9b26a8d857d461c"
    },
    "billableSeconds": 10800,
    "createdAt": "2023-05-09T10:44:38.173Z",
    "description": "Changed description",
    "issue": {
      "id": 10001
    },
    "startDate": "2023-05-01",
    "startTime": "16:00:00",
    "tempoWorklogId": 37,
    "timeSpentSeconds": 10800,
    "updatedAt": "2023-05-09T10:46:33.621Z"
  }
}

deleted: worklog.deleted
{
  "eventId": "5ddeac7e-b823-437f-a7b0-dac7e3268207",
  "eventType": "worklog.deleted",
  "payload": {
    "author": {
      "accountId": "636e810fc9b26a8d857d461c"
    },
    "updater": {
      "accountId": "636e810fc9b26a8d857d461c"
    },
    "billableSeconds": 0,
    "createdAt": "2023-05-09T10:51:10.807Z",
    "description": "my awesome work on a subtask",
    "issue": {
      "id": 10001
    },
    "startDate": "2023-05-01",
    "startTime": "16:00:00",
    "tempoWorklogId": 38,
    "timeSpentSeconds": 3600,
    "updatedAt": "2023-05-09T10:51:10.807Z"
  }
}

Team Membership events
created: team.memberships.created
{
"eventId": "6e0d805c-d3da-4092-ad73-1f59b00de92c",
"eventType": "team.memberships.created",
"payload": {
  "memberships": [
    {
      "id": 2,
      "teamId": 2,
      "userId": {
        "ecosystemId": "712020:96c78530-3e33-444b-a240-fbeaa8198916",
        "tempoId": "e144b00a-fbc7-4693-92a3-92e69b6862fd"
      },
      "fromDate": "2023-10-01",
      "toDate": "2023-11-01",
      "commitmentPercent": 100,
      "role": {
        "id": 2,
        "name": "Member"
      }
    }
  ]
}
}

updated: team.memberships.updated
{
"eventId": "87b448f2-0696-4651-80a5-70639edf890f",
"eventType": "team.memberships.updated",
"payload": {
  "memberships": [
    {
      "id": 2,
      "teamId": 2,
      "userId": {
        "ecosystemId": "712020:96c78530-3e33-444b-a240-fbeaa8198916",
        "tempoId": "e144b00a-fbc7-4693-92a3-92e69b6862fd"
      },
      "fromDate": "2023-10-01",
      "toDate": "2023-11-01",
      "commitmentPercent": 50,
      "role": {
        "id": 2,
        "name": "Member"
      }
    }
  ]
}
}

deleted: team.memberships.deleted
{
"eventId": "1fb353aa-2a20-48b2-91b3-1f2f9f51f0dd",
"eventType": "team.memberships.deleted",
"payload": {
  "memberships": [
    {
      "id": 3,
      "teamId": 2,
      "userId": {
        "ecosystemId": "712020:96c78530-3e33-444b-a240-fbeaa8198916",
        "tempoId": "e144b00a-fbc7-4693-92a3-92e69b6862fd"
      },
      "isRemovedFromTheTeam": false,
      "remainingMemberships": [
        {
          "id": 4,
          "teamId": 2,
          "userId": {
            "ecosystemId": "712020:96c78530-3e33-444b-a240-fbeaa8198916",
            "tempoId": "e144b00a-fbc7-4693-92a3-92e69b6862fd"
          },
          "fromDate": "2023-10-15",
          "toDate": "2023-11-02",
          "commitmentPercent": 100,
          "role": {
            "id": 2,
            "name": "Member"
          }
        }
      ]
    }
  ]
}
}

Holiday events
created: holiday.created
{
"eventId": "d6135d34-1b6e-4053-826b-07018be94436",
"eventType": "holiday.created",
"payload": {
  "id": 13,
  "schemeId": 3,
  "name": "Halloween",
  "description": "Halloween",
  "duration": 86400,
  "type": "fixed",
  "date": "1970-10-31"
}
}

updated: holiday.updated
{
"eventId": "d724ae3d-7174-41cd-a654-901788b12641",
"eventType": "holiday.updated",
"payload": {
  "original": {
    "id": 13,
    "schemeId": 3,
    "name": "Halloween",
    "description": "Halloween",
    "duration": 86400,
    "type": "fixed",
    "date": "1970-10-31"
  },
  "changed": {
    "id": 13,
    "schemeId": 3,
    "name": "Halloween",
    "description": "Happy Halloween",
    "duration": 86400,
    "type": "fixed",
    "date": "1970-10-31"
  }
}
}

deleted: holiday.deleted
{
"eventId": "aa0e8e5f-1630-41d9-89f4-69a5012c4762",
"eventType": "holiday.deleted",
"payload": {
  "id": 13,
  "schemeId": 3,
  "name": "Halloween",
  "description": "Happy Halloween",
  "duration": 86400,
  "type": "fixed",
  "date": "1970-10-31"
}
}

Holiday Scheme events
created: holiday.scheme.created
{
"eventId": "1769233e-9806-49ac-b87b-1febe82d172d",
"eventType": "holiday.scheme.created",
"payload": {
  "id": 4,
  "name": "My Holiday Scheme",
  "description": "My Holiday Scheme Description",
  "isDefaultScheme": false
}
}

updated: holiday.scheme.updated
{
"eventId": "1769233e-9806-49ac-b87b-1febe82d172d",
"eventType": "holiday.scheme.updated",
"payload": {
  "original": {
    "id": 4,
    "name": "My Original Holiday Scheme",
    "description": "My Original Holiday Scheme Description",
    "isDefaultScheme": false
  },
  "changed": {
    "id": 4,
    "name": "My Updated Holiday Scheme",
    "description": "My Updated Holiday Scheme Description",
    "isDefaultScheme": false
  }
}
}

deleted: holiday.scheme.deleted
{
"eventId": "5a14688c-7120-4f8e-bd0c-9c0f7e0cae8d",
"eventType": "holiday.scheme.deleted",
"payload": {
  "id": 3,
  "name": "Old Holiday Scheme",
  "description": "My Description",
  "isDefaultScheme": false
}
}

move: holiday.scheme.move.members.between.schemes
{
"eventId": "5a14688c-7120-4f8e-bd0c-9c0f7e0cae8d",
"eventType": "holiday.scheme.move.members.between.schemes",
"payload": {
  "newSchemeId": 3,
  "accountIds": [
    "123:5643b8dc-ae68-4c26-b158-24c3c1243ee3",
    "234:ad8106b1-9d01-4154-b3c7-2b445e212560"
  ],
  "oldSchemeIds": {
    "123:5643b8dc-ae68-4c26-b158-24c3c1243ee3": 4
    "234:ad8106b1-9d01-4154-b3c7-2b445e212560": 1
  }
}
}

Workload Scheme events
created: workload.scheme.created
{
"eventId": "6c1a9c71-5c85-4d28-a829-83f3b6f001c9",
"eventType": "workload.scheme.created",
"payload": {
  "id": 14,
  "name": "friday afternoons off",
  "description": "friday afternoons off",
  "isDefaultScheme": false,
  "days": {
    "1": {
      "day": 1,
      "requiredSeconds": 28800
    },
    "2": {
      "day": 2,
      "requiredSeconds": 28800
    },
    "3": {
      "day": 3,
      "requiredSeconds": 28800
    },
    "4": {
      "day": 4,
      "requiredSeconds": 28800
    },
    "5": {
      "day": 5,
      "requiredSeconds": 14400
    },
    "6": {
      "day": 6,
      "requiredSeconds": 0
    },
    "7": {
      "day": 7,
      "requiredSeconds": 0
    }
  }
}
}

updated: workload.scheme.updated
{
"eventId": "4d725705-a145-423e-b02b-416b041ae4af",
"eventType": "workload.scheme.updated",
"payload": {
  "id": 14,
  "name": "Fantastic Fridays",
  "description": "friday afternoons off",
  "isDefaultScheme": false,
  "days": {
    "1": {
      "day": 1,
      "requiredSeconds": 28800
    },
    "2": {
      "day": 2,
      "requiredSeconds": 28800
    },
    "3": {
      "day": 3,
      "requiredSeconds": 28800
    },
    "4": {
      "day": 4,
      "requiredSeconds": 28800
    },
    "5": {
      "day": 5,
      "requiredSeconds": 14400
    },
    "6": {
      "day": 6,
      "requiredSeconds": 0
    },
    "7": {
      "day": 7,
      "requiredSeconds": 0
    }
  }
}
}

deleted: workload.scheme.deleted
{
"eventId": "7f98db7f-3dcf-4fbd-a4fd-078000979a0e",
"eventType": "workload.scheme.deleted",
"payload": {
  "id": 12,
  "name": "test",
  "description": "test",
  "isDefaultScheme": false,
  "days": {
    "1": {
      "day": 1,
      "requiredSeconds": 3600
    },
    "2": {
      "day": 2,
      "requiredSeconds": 3600
    },
    "3": {
      "day": 3,
      "requiredSeconds": 3600
    },
    "4": {
      "day": 4,
      "requiredSeconds": 3600
    },
    "5": {
      "day": 5,
      "requiredSeconds": 3600
    },
    "6": {
      "day": 6,
      "requiredSeconds": 0
    },
    "7": {
      "day": 7,
      "requiredSeconds": 0
    }
  }
}
}

moved: workload.scheme.users.moved
{
"eventId": "c5c475d0-04f5-4c66-803a-9a4f88b4d113",
"eventType": "workload.scheme.users.moved",
"payload": {
  "newScheme": {
    "id": 14,
    "name": "Fantastic Fridays",
    "description": "friday afternoons off",
    "isDefaultScheme": false,
    "days": {
      "1": {
        "day": 1,
        "requiredSeconds": 28800
      },
      "2": {
        "day": 2,
        "requiredSeconds": 28800
      },
      "3": {
        "day": 3,
        "requiredSeconds": 28800
      },
      "4": {
        "day": 4,
        "requiredSeconds": 28800
      },
      "5": {
        "day": 5,
        "requiredSeconds": 14400
      },
      "6": {
        "day": 6,
        "requiredSeconds": 0
      },
      "7": {
        "day": 7,
        "requiredSeconds": 0
      }
    }
  },
  "userIds": [
    {
      "ecosystemId": "712020:33c2f5ef-5063-4f26-9f7c-21de949205bd",
      "tempoId": "a105e76b-5b64-47dc-8fcd-cc6dfe1c0cba"
    }
  ],
  "oldWorkloadSchemes": {
    "712020:33c2f5ef-5063-4f26-9f7c-21de949205bd": {
      "id": 2,
      "name": "Tempo Default Workload Scheme",
      "description": "Required working hours per day, as specified in Jira Time Tracking configuration",
      "isDefaultScheme": true,
      "days": {
        "1": {
          "day": 1,
          "requiredSeconds": 28800
        },
        "2": {
          "day": 2,
          "requiredSeconds": 28800
        },
        "3": {
          "day": 3,
          "requiredSeconds": 28800
        },
        "4": {
          "day": 4,
          "requiredSeconds": 28800
        },
        "5": {
          "day": 5,
          "requiredSeconds": 28800
        },
        "6": {
          "day": 6,
          "requiredSeconds": 0
        },
        "7": {
          "day": 7,
          "requiredSeconds": 0
        }
      }
    }
  }
}
}

Workload/holidays events that affect plans
change in what days are working vs non-working days: users.working.days.updated

When a change to workload or holiday results in some day(s) changing from being a working day / non-working day. Plans can be specified to include non-working days or not, when they are not included in a plan this event can impact the planned time as it can change what days are included in the plan. This webhook enables dealing with such changes by specifying what users are affected by the event with the accountIds attribute and to narrow it down to specific days with the days.values attribute when applicable (when floating holiday is changed), in that case days.affecting will be "FIXED". The change will in other cases affect an indeterminate amount of days, so all plans for the specified might be affected, in that case days.affecting will be "INDETERMINATE" and days.values is empty.

{
    "eventId": "e39e27c7-dcdb-4178-83e4-57254cf13bfa",
    "eventType": "users.working.days.updated",
    "payload": {
      "accountIds": ["123456:01234567-89ab-cdef-0123-456789abcdef"],
      "days": {
        affecting: "FIXED",
        values: ["2022-05-17", "2022-05-21"]
      },
      "changeSource": {
        "source": "WORKLOAD_SCHEME",
        "operation": "UPDATE"
      }
    }
}

Global Configuration events
update to jira issue-plan sync configuration: plan.issue.sync.config.updated.

Note: The syncPlansWithJiraIssuesEnabled attribute applies only to the sync of individual plans (resource allocations) with Jira issues where the planAttributeJiraIssueFieldIds represents the issue field configuration for that sync. While team plans are always synced with Jira issues, the teamPlanAttributeJiraIssueFieldIds represents the issue field configuration for that sync.

{
  "eventId": "6e0d805c-d3da-4092-ad73-1f59b00de92c",
  "eventType": "plan.issue.sync.config.updated",
  "payload": {
    "original": {
      "syncPlansWithJiraIssuesEnabled": true,
      "planAttributeJiraIssueFieldIds": {
        "assignee": "assignee",
        "startDate": "customfield_10017",
        "endDate": "duedate",
        "totalPlannedSeconds": "timeoriginalestimate",
      },
      "teamPlanAttributeJiraIssueFieldIds": {
        "assignee": "assignee",
        "startDate": "customfield_10017",
        "endDate": "duedate",
        "totalPlannedSeconds": "timeoriginalestimate",
      }
    },
    "changed": {
      "syncPlansWithJiraIssuesEnabled": true,
      "planAttributeJiraIssueFieldIds": {
        "assignee": "customfield_10032",
        "startDate": "customfield_10033",
        "endDate": "duedate",
        "totalPlannedSeconds": "aggregatetimeoriginalestimate",
      },
      "teamPlanAttributeJiraIssueFieldIds": {
        "assignee": "assignee",
        "startDate": "customfield_10017",
        "endDate": "duedate",
        "totalPlannedSeconds": "timeoriginalestimate",
      }
    }
  }
}

Validation and security

When you create a new subscription you'll receive a sharedSecret. Tempo signs each request made to your webhook endpoint using the sharedSecret.

You can verify a request by:

Extract the payload as a UTF-8 text, and concatenate with the Tempo-Timestamp header.
Generate a hex hash using hmac sha256, using your sharedSecret as secret and the previous value as the message.
Compare it with the Tempo-Signature header.

This is an example using Node Express middleware.

const crypto = require('crypto');

const verifyWebhook = (sharedSecret) => {
    return (req, res, next) => {
        let body = '';

        // Collect data chunks
        req.on('data', chunk => {
            body += chunk.toString();
        });

        // Once the request has been fully received
        req.on('end', () => {
            // Step 1
            const message = body + req.headers['tempo-timestamp'];

            // Step 2
            const computedSignature = crypto.createHmac('sha256', sharedSecret)
                .update(message, 'utf-8')
                .digest('hex');

            // Step 3
            const receivedSignature = req.headers['tempo-signature'];
            if (!crypto.timingSafeEqual(Buffer.from(computedSignature), Buffer.from(receivedSignature))) {
                return res.status(403).send('Invalid Tempo-Signature header');
            }

            // If the hash is valid, continue to the next middleware/handler
            next();
        });

        // Handle errors during request processing
        req.on('error', (err) => {
            return res.status(500).send('Error processing request');
        });
    };
}


For additional examples of HMAC SHA-256 in other languages visit https://github.com/danharper/hmac-examples

Included Headers
'Tempo-Timestamp': This is an string timestamp that represents the time when you first send the request to you, for example Tempo-Timestamp: 2023-05-08T15:03:35.786Z
'Tempo-Signature': This is a HMAC-SHA-256 in hex that allows you to validate if the request came from Tempo. Example: Tempo-Signature: d04ebbc69c30903ccce90862e7bf6fe4e8e0d2b0594e6f183c0709c86f5cfe19
'Tempo-Jira-Client-Key': This points to your jira client key, which identifies your Jira instance.
'Tempo-Tenant-ID': An unique identifier of the Jira Instance in Tempo
Retry policy

If a webhook fails, Tempo will attempt to retry up to ten times. Each attempt following the failure is delayed with a randomized back-off algorithm and can happen between 5 and 15 minutes after the previous one. If your endpoint doesn't respond with a success after all attempts, your subscription will be inactivated and can only receive new events after calling PATCH /webhooks/subscriptions/:id/refresh.

Retries are attempted when any of the following are true:

the webhook answers with a http status greater or equal to 400
the connection fails
the webhook takes more than 30s to answer
Subscription

Maintain subscriptions

Retrieve Subscriptions

Retrieves a list of Subscriptions

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

limit	
integer <int32>
Default: 50
Responses
200 

SUCCESS

GET
/4/webhooks/subscriptions
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Create Subscription

Creates a new Subscription using the provided input, and return the updated Subscription

REQUEST BODY SCHEMA: application/json
description	
string

The description of the subscription


event
required
	
string
Enum: "worklog.created" "worklog.updated" "worklog.deleted" "plan.created" "plan.updated" "plan.deleted" "team.memberships.created" "team.memberships.updated" "team.memberships.deleted" "team.created" "team.updated" "team.deleted" "workload.scheme.created" "workload.scheme.updated" "workload.scheme.deleted" "workload.scheme.users.moved" "users.working.days.updated" "holiday.created" "holiday.deleted" "holiday.updated" "holiday.scheme.deleted" "holiday.scheme.created" "holiday.scheme.updated" "plan.issue.sync.config.updated"

The event of the subscription


name	
string

The name of the subscription


url
required
	
string

The url of the subscription

Responses
200 

SUCCESS

400 

A subscription cannot be saved due to invalid data

409 

A subscription with this url and event already exist

Callbacks
GET
HandshakePOST
Webhook
POST
/4/webhooks/subscriptions
Request samples
Payload
Content type
application/json
Copy
{
"description": "Used by adding new worklogs for PowerBI",
"event": "worklog.created",
"name": "Power BI integration",
"url": "https://example.com/your/backend/service"
}
Response samples
200
Content type
application/json
Copy
{
"active": true,
"createdAt": "2019-08-24T14:15:22Z",
"description": "Used by adding new worklogs for PowerBI",
"event": "worklog.created",
"id": "e157829a-e0d0-43c1-83b0-45b610c73dc5",
"name": "Power BI integration",
"self": "https://api.tempo.io/[...]",
"sharedSecret": "MM08aZbMmzg7B6MvqauvdnvrD22LnANbzCXE5VhckeQyhifXeM4bdkRf3TOSkZf9rMhIgCnup9B4NBGB0V1NYEuB7MnPDNsV61tUOsCVpqluRO5uBd3v0GUt78SzIab6",
"updatedAt": "2019-08-24T14:15:22Z",
"url": "https://example.com/your/backend/service"
}
Callback payload samples
Callback
GET: Handshake
POST: Webhook
GET: Handshake
Delete Subscription

Deletes an existing Subscription for the given id

PATH PARAMETERS
id
required
	
string <uuid>

An id that uniquely identifies the subscription

Responses
204 

SUCCESS

404 

Subscription does not exist

DELETE
/4/webhooks/subscriptions/{id}
Retrieve Subscription

Retrieves an existing Subscription for the given id

PATH PARAMETERS
id
required
	
string <uuid>

An id that uniquely identifies the subscription

Responses
200 

SUCCESS

404 

Subscription does not exist

GET
/4/webhooks/subscriptions/{id}
Response samples
200
Content type
application/json
Copy
{
"active": true,
"createdAt": "2019-08-24T14:15:22Z",
"description": "Used by adding new worklogs for PowerBI",
"event": "worklog.created",
"id": "e157829a-e0d0-43c1-83b0-45b610c73dc5",
"name": "Power BI integration",
"self": "https://api.tempo.io/[...]",
"sharedSecret": "MM08aZbMmzg7B6MvqauvdnvrD22LnANbzCXE5VhckeQyhifXeM4bdkRf3TOSkZf9rMhIgCnup9B4NBGB0V1NYEuB7MnPDNsV61tUOsCVpqluRO5uBd3v0GUt78SzIab6",
"updatedAt": "2019-08-24T14:15:22Z",
"url": "https://example.com/your/backend/service"
}
Refreshes Subscription

Reactivates the webhook if it's inactive

PATH PARAMETERS
id
required
	
string <uuid>

An id that uniquely identifies the subscription

Responses
204 

SUCCESS

404 

Subscription does not exist

PATCH
/4/webhooks/subscriptions/{id}/refresh
Worklogs

Worklogs operations

Retrieve Worklogs

Retrieves a list of Worklogs that matches the given search parameters

QUERY PARAMETERS
projectId	
Array of integers <int64> [ items <int64 > ]

Retrieve only worklogs for the given project ids


issueId	
Array of integers <int64> [ items <int64 > ]

Retrieve only worklogs for the given issue ids


from	
string

Retrieve results starting with this date


to	
string

Retrieve results up to and including this date


updatedFrom	
string <yyyy-MM-dd['T'HH:mm:ss]['Z']>

Retrieve results that have been updated from this date(e.g "2023-11-16") or date time (e.g "2023-11-06T16:48:59Z")


offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response


orderBy	
string
Enum: "ID" "START_DATE_TIME" "UPDATED"

Order results by the specified field descending. If no order is specified, results will by default be ordered by START_DATE_TIME and ID ascending

Responses
200 

SUCCESS

404 

Authenticated user is missing permission to fulfill the request

GET
/4/worklogs
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Create Worklog

Creates a new Worklog using the provided input and returns the newly created Worklog

REQUEST BODY SCHEMA: application/json
attributes	
Array of objects (WorkAttributeValueInput) unique

The list of work attribute of this Worklog


authorAccountId
required
	
string

The Account id of the user author


billableSeconds	
integer <int64>

The amount of seconds billable


bypassPeriodClosuresAndApprovals	
boolean

Bypass period closures and approvals. If the value is 'true' and the period is closed, the worklog will be created. You need the Tempo Administrator permission and Override Mode enabled.


description	
string

The description of the Worklog


issueId
required
	
integer <int64> >= 1

The id of the issue associated to this worklog


remainingEstimateSeconds	
integer <int64>

The total amount of estimated remaining seconds`


startDate
required
	
string <date>

The start date of the Worklog


startTime	
string^([0-1]?[0-9]|2[0-3])(:[0-5][0-9])(:[0-5][0-9...Show pattern

The start time of the Worklog


timeSpentSeconds
required
	
integer <int64> >= 1

The total amount of time spent in seconds`

Responses
200 

SUCCESS

400 

Worklog cannot be created for some reasons

POST
/4/worklogs
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"attributes": 
[
{}
],
"authorAccountId": "1111aaaa2222bbbb3333cccc",
"billableSeconds": 100201,
"bypassPeriodClosuresAndApprovals": true,
"description": "Investigating a problem with our external database system",
"issueId": 10001,
"remainingEstimateSeconds": 120,
"startDate": "2019-08-24",
"startTime": 72360,
"timeSpentSeconds": 3600
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"attributes": 
{
"self": "https://api.tempo.io/[...]",
"values": 
[]
},
"author": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"billableSeconds": 100201,
"createdAt": "2017-02-06T16:41:41.000Z",
"description": "Investigating a problem with our external database system",
"issue": 
{
"id": 124,
"self": "https://api.tempo.io/[...]"
},
"self": "https://api.tempo.io/[...]",
"startDate": "2019-08-24",
"startDateTimeUtc": "2017-02-05T16:06:00.000Z",
"startTime": 72360,
"tempoWorklogId": 126,
"timeSpentSeconds": 3600,
"updatedAt": "2017-02-06T16:41:41.000Z"
}
Search Worklogs associated to Account

Retrieves a list of all Worklogs associated to the given Account key that matches the search parameters

PATH PARAMETERS
accountKey
required
	
string
QUERY PARAMETERS
from	
string

Retrieve results starting with this date


to	
string

Retrieve results up to and including this date


updatedFrom	
string <yyyy-MM-dd['T'HH:mm:ss]['Z']>

Retrieve results that have been updated from this date(e.g "2023-11-16") or date time (e.g "2023-11-06T16:48:59Z")


offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

Responses
200 

SUCCESS

404 

Account key cannot be found in the system

GET
/4/worklogs/account/{accountKey}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Search Worklogs associated to Issue id

Retrieves a list of all Worklogs associated to the given Issue id that matches the search parameters

PATH PARAMETERS
issueId
required
	
integer <int64>
QUERY PARAMETERS
from	
string

Retrieve results starting with this date


to	
string

Retrieve results up to and including this date


updatedFrom	
string <yyyy-MM-dd['T'HH:mm:ss]['Z']>

Retrieve results that have been updated from this date(e.g "2023-11-16") or date time (e.g "2023-11-06T16:48:59Z")


offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

Responses
200 

SUCCESS

404 

Worklog cannot be found in the system

GET
/4/worklogs/issue/{issueId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Bulk Create Worklog

Bulk creates a list of new Worklogs

PATH PARAMETERS
issueId
required
	
integer <int64> >= 1
REQUEST BODY SCHEMA: application/json
Array ([ 1 .. 50 ] items)
attributes	
Array of objects (BulkWorkAttributeValueInput) unique

The list of work attribute of this Worklog


authorAccountId
required
	
string

The Account id of the user author


billableSeconds	
integer <int64>

The amount of seconds billable


description	
string

The description of the Worklog


startDate
required
	
string <date>

The start date of the Worklog


startTime	
string^([0-1]?[0-9]|2[0-3])(:[0-5][0-9])(:[0-5][0-9...Show pattern

The start time of the Worklog


timeSpentSeconds
required
	
integer <int64> >= 1

The total amount of time spent in seconds`

Responses
200 

SUCCESS

400 

A worklog cannot be created for some reasons

409 

There is already a bulk action in progress for the given issue id

POST
/4/worklogs/issue/{issueId}/bulk
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
[
{
"attributes": 
[],
"authorAccountId": "1111aaaa2222bbbb3333cccc",
"billableSeconds": 100201,
"description": "Investigating a problem with our external database system",
"startDate": "2019-08-24",
"startTime": 72360,
"timeSpentSeconds": 3600
}
]
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
[
{
"attributes": 
{},
"author": 
{},
"billableSeconds": 100201,
"createdAt": "2017-02-06T16:41:41.000Z",
"description": "Investigating a problem with our external database system",
"issue": 
{},
"self": "https://api.tempo.io/[...]",
"startDate": "2019-08-24",
"startDateTimeUtc": "2017-02-05T16:06:00.000Z",
"startTime": 72360,
"tempoWorklogId": 126,
"timeSpentSeconds": 3600,
"updatedAt": "2017-02-06T16:41:41.000Z"
}
]
Retrieve Tempo Worklog ids by Jira Worklog ids

Retrieves a list of existing Tempo Worklog ids that match the informed Jira Worklog ids. If a Tempo Worklog Id cannot be found, it will not be returned on the results

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

REQUEST BODY SCHEMA: application/json
jiraWorklogIds
required
	
Array of integers <int64> [ 1 .. 2147483647 ] items [ items <int64 > ]

A list of Jira Worklog ids you want to retrieve the respective Tempo Worklog ids

Responses
200 

SUCCESS

POST
/4/worklogs/jira-to-tempo
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"jiraWorklogIds": 
[
1,
2,
3,
4,
5
]
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Retrieve Worklogs associated to projectId

Retrieves a list of all Worklogs associated to the given projectId that matches the search parameters

PATH PARAMETERS
projectId
required
	
integer <int64>

Id of the project you want to retrieve Worklogs for

QUERY PARAMETERS
from	
string

Retrieve results starting with this date


to	
string

Retrieve results up to and including this date


updatedFrom	
string <yyyy-MM-dd['T'HH:mm:ss]['Z']>

Retrieve results that have been updated from this date(e.g "2023-11-16") or date time (e.g "2023-11-06T16:48:59Z")


offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

Responses
200 

SUCCESS

404 

Project cannot be found in the system

GET
/4/worklogs/project/{projectId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Search Worklogs

Retrieves a list of existing Worklogs that matches the given search parameters

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

REQUEST BODY SCHEMA: application/json
authorIds	
Array of strings

Ids of the authors you want to search worklogs for.


from	
string

Retrieve worklogs starting with this date.


issueIds	
Array of integers <int64> [ items <int64 > ]

Ids of the issues you want to search worklogs for


orderBy	
Array of objects (SearchOrderBean)

Order results by the specified criteria. If no order is specified, results will by default be ordered by START_DATE_TIME(ASC) and ID(ASC)


projectIds	
Array of integers <int64> [ items <int64 > ]

Ids of the projects you want to search worklogs for


to	
string

Retrieve worklogs that ends up to and including this date.


updatedFrom	
string <yyyy-MM-dd['T'HH:mm:ss]['Z']>

Retrieve results that have been updated from this date(e.g "2023-11-16") or date time (e.g "2023-11-06T16:48:59Z")

Responses
200 

SUCCESS

POST
/4/worklogs/search
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"authorIds": 
[
"123456:01234567-89ab-cdef-0123-456789abcdef",
"123456:01234567-89ab-cdef-0123-456789abcdef"
],
"from": "2022-05-17T00:00:00.000Z",
"issueIds": 
[
"10000",
"100001"
],
"orderBy": 
[
{}
],
"projectIds": 
[
"1",
"2"
],
"to": "2022-05-17T00:00:00.000Z",
"updatedFrom": "2022-05-17T01:06:01.000Z"
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Search Worklogs associated to Team

Retrieve a list of all Worklogs associated to the given Team id that matches the search parameters

PATH PARAMETERS
teamId
required
	
string
QUERY PARAMETERS
from	
string

Retrieve results starting with this date


to	
string

Retrieve results up to and including this date


updatedFrom	
string <yyyy-MM-dd['T'HH:mm:ss]['Z']>

Retrieve results that have been updated from this date(e.g "2023-11-16") or date time (e.g "2023-11-06T16:48:59Z")


offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

Responses
200 

SUCCESS

404 

Team cannot be found in the system

GET
/4/worklogs/team/{teamId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Retrieve Jira Worklog ids by Tempo Worklog ids

Retrieves a list of existing Jira Worklog ids that match the informed Tempo Worklog ids. If a Jira Worklog Id cannot be found, it will not be returned on the results

QUERY PARAMETERS
offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

REQUEST BODY SCHEMA: application/json
tempoWorklogIds
required
	
Array of integers <int64> [ 1 .. 2147483647 ] items [ items <int64 > ]

A list of Tempo Worklog ids you want to retrieve the respective Jira Worklog ids

Responses
200 

SUCCESS

POST
/4/worklogs/tempo-to-jira
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"tempoWorklogIds": 
[
1,
2,
3,
4,
5
]
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Search Worklogs associated to User

Retrieves a list of all Worklogs associated to the given User that matches the search parameters

PATH PARAMETERS
accountId
required
	
string
QUERY PARAMETERS
from	
string

Retrieve results starting with this date


to	
string

Retrieve results up to and including this date


updatedFrom	
string <yyyy-MM-dd['T'HH:mm:ss]['Z']>

Retrieve results that have been updated from this date(e.g "2023-11-16") or date time (e.g "2023-11-06T16:48:59Z")


offset	
integer <int32>
Default: 0

Skip over a number of elements by specifying an offset value for the query


limit	
integer <int32>
Default: 50

Limit the number of elements on the response

Responses
200 

SUCCESS

404 

User cannot be found in the system

GET
/4/worklogs/user/{accountId}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1,
"limit": 50,
"next": "https://api.tempo.io/[...]",
"offset": 0,
"previous": "https://api.tempo.io/[...]"
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Bulk create Work Attribute values for Worklogs

Note: This API only supports creating new Work Attribute values. Work Attribute values can only be updated as part of the Worklog.

REQUEST BODY SCHEMA: application/json
Array 
attributeValues
required
	
Array of objects (WorkAttributeValueInput) [ 1 .. 2147483647 ] items unique

The list of work attribute


tempoWorklogId
required
	
integer <int64>

The worklog id in tempo app`

Responses
204 

Work attribute values have been created

400 

Work attribute values cannot be created for some reasons, for example if the value is not valid for the type of the work attribute, or if the worklog already has a value for the specified attribute.

404 

Worklog or Work attribute key not found

POST
/4/worklogs/work-attribute-values
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
[
{
"attributeValues": 
[],
"tempoWorklogId": 128
}
]
Search Work Attribute values

Retrieves a list of existing Work Attribute values that matches the given worklog ids

REQUEST BODY SCHEMA: application/json
tempoWorklogIds	
Array of integers <int64> [ 1 .. 500 ] items [ items <int64 > ]

Ids of the worklogs you want to search work attribute values for

Responses
200 

SUCCESS

400 

Please provide at least 1 and at most 500 worklog ids

POST
/4/worklogs/work-attribute-values/search
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"tempoWorklogIds": 
[
1000,
1001,
1002
]
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
[
{
"tempoWorklogId": 1,
"workAttributeValues": 
[]
}
]
Delete Worklog

Deletes an existing Worklog for the given id

PATH PARAMETERS
id
required
	
string
QUERY PARAMETERS
bypassPeriodClosuresAndApprovals	
boolean
Default: false

Bypass period closures and approvals. If the value is 'true' and the worklog is approved or from a closed period, the worklog will be deleted. You need the Tempo Administrator permission and Override Mode enabled.

Responses
204 

Worklog has been successfully deleted

404 

Worklog cannot be found in the system

DELETE
/4/worklogs/{id}
Retrieve Worklog

Retrieves an existing Worklog for the given id

PATH PARAMETERS
id
required
	
string
Responses
200 

SUCCESS

404 

Worklog cannot be found in the system

GET
/4/worklogs/{id}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"attributes": 
{
"self": "https://api.tempo.io/[...]",
"values": 
[]
},
"author": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"billableSeconds": 100201,
"createdAt": "2017-02-06T16:41:41.000Z",
"description": "Investigating a problem with our external database system",
"issue": 
{
"id": 124,
"self": "https://api.tempo.io/[...]"
},
"self": "https://api.tempo.io/[...]",
"startDate": "2019-08-24",
"startDateTimeUtc": "2017-02-05T16:06:00.000Z",
"startTime": 72360,
"tempoWorklogId": 126,
"timeSpentSeconds": 3600,
"updatedAt": "2017-02-06T16:41:41.000Z"
}
Update Worklog

Updates an existing Worklog for the given id using the provided input and returns the updated Worklog

PATH PARAMETERS
id
required
	
string
REQUEST BODY SCHEMA: application/json
attributes	
Array of objects (WorkAttributeValueInput) unique

The list of work attribute of this Worklog


authorAccountId
required
	
string

The Account id of the user author


billableSeconds	
integer <int64>

The amount of seconds billable


description	
string

The description of the Worklog


remainingEstimateSeconds	
integer <int64>

The total amount of estimated remaining seconds`


startDate
required
	
string <date>

The start date of the Worklog


startTime	
string^([0-1]?[0-9]|2[0-3])(:[0-5][0-9])(:[0-5][0-9...Show pattern

The start time of the Worklog


timeSpentSeconds
required
	
integer <int64> >= 1

The total amount of time spent in seconds`

Responses
200 

SUCCESS

400 

Worklog cannot be updated for some reasons

404 

Worklog cannot be found in the system

PUT
/4/worklogs/{id}
Request samples
Payload
Content type
application/json
Copy
Expand allCollapse all
{
"attributes": 
[
{}
],
"authorAccountId": "1111aaaa2222bbbb3333cccc",
"billableSeconds": 100201,
"description": "Investigating a problem with our external database system",
"remainingEstimateSeconds": 120,
"startDate": "2019-08-24",
"startTime": 72360,
"timeSpentSeconds": 3600
}
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"attributes": 
{
"self": "https://api.tempo.io/[...]",
"values": 
[]
},
"author": 
{
"accountId": "123456:01234567-89ab-cdef-0123-456789abcdef",
"self": "https://api.tempo.io/[...]"
},
"billableSeconds": 100201,
"createdAt": "2017-02-06T16:41:41.000Z",
"description": "Investigating a problem with our external database system",
"issue": 
{
"id": 124,
"self": "https://api.tempo.io/[...]"
},
"self": "https://api.tempo.io/[...]",
"startDate": "2019-08-24",
"startDateTimeUtc": "2017-02-05T16:06:00.000Z",
"startTime": 72360,
"tempoWorklogId": 126,
"timeSpentSeconds": 3600,
"updatedAt": "2017-02-06T16:41:41.000Z"
}
Retrieve Work Attribute values for Worklog

Retrieves a list of all Work Attribute values for the given Worklog

PATH PARAMETERS
id
required
	
string
Responses
200 

SUCCESS

404 

Worklog cannot be found in the system

GET
/4/worklogs/{id}/work-attribute-values
Response samples
200
Content type
application/json
Copy
Expand allCollapse all
{
"metadata": 
{
"count": 1
},
"results": 
[
{}
],
"self": "https://api.tempo.io/[...]"
}
Retrieve Work Attribute value for Worklog

Retrieves a specific Work Attribute value using the provided key, for the given Worklog

PATH PARAMETERS
id
required
	
string

key
required
	
string
Responses
200 

SUCCESS

404 

Work attribute value cannot be found in the system

GET
/4/worklogs/{id}/work-attribute-values/{key}
Response samples
200
Content type
application/json
Copy
{
"key": "_COLOR_",
"value": "green"
}
